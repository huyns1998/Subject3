
Assignment4.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000132c  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080014c0  080014c0  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080014c0  080014c0  00020024  2**0
                  CONTENTS
  4 .ARM          00000000  080014c0  080014c0  00020024  2**0
                  CONTENTS
  5 .preinit_array 00000000  080014c0  080014c0  00020024  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080014c0  080014c0  000114c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080014c4  080014c4  000114c4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000024  20000000  080014c8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001a8  20000024  080014ec  00020024  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200001cc  080014ec  000201cc  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020024  2**0
                  CONTENTS, READONLY
 12 .debug_info   00005966  00000000  00000000  00020054  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e47  00000000  00000000  000259ba  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000808  00000000  00000000  00026808  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000780  00000000  00000000  00027010  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000ee67  00000000  00000000  00027790  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003cb2  00000000  00000000  000365f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00046124  00000000  00000000  0003a2a9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  000803cd  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00002398  00000000  00000000  0008049c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000024 	.word	0x20000024
 80001b0:	00000000 	.word	0x00000000
 80001b4:	080014a8 	.word	0x080014a8

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000028 	.word	0x20000028
 80001d0:	080014a8 	.word	0x080014a8

080001d4 <LedControl_TimerOCInit>:

uint32_t time_initial = 0;

//Init timer2 as output comapre mode
void LedControl_TimerOCInit(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b08a      	sub	sp, #40	; 0x28
 80001d8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef 				GPIO_InitStruct;
	TIM_TimeBaseInitTypeDef			TIM_TimeBaseInitStruct;
	TIM_OCInitTypeDef				TIM_OCInitStruct;

	//Enable clock for GPOIA
	RCC_AHB1PeriphClockCmd(LED1_REDControl_SetClock, ENABLE);
 80001da:	2101      	movs	r1, #1
 80001dc:	2001      	movs	r0, #1
 80001de:	f000 fda7 	bl	8000d30 <RCC_AHB1PeriphClockCmd>

	//Alternate function mode
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80001e2:	2302      	movs	r3, #2
 80001e4:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24

	//Medium speed
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 80001e8:	2302      	movs	r3, #2
 80001ea:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25

	//output type push-pull
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 80001ee:	2300      	movs	r3, #0
 80001f0:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80001f4:	2300      	movs	r3, #0
 80001f6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27

	//Config AP1 as alternate function of timer2
	GPIO_PinAFConfig(LED1_RED_GPIO_PORT, GPIO_PinSource1, GPIO_AF_TIM2);
 80001fa:	2201      	movs	r2, #1
 80001fc:	2101      	movs	r1, #1
 80001fe:	481e      	ldr	r0, [pc, #120]	; (8000278 <LedControl_TimerOCInit+0xa4>)
 8000200:	f000 fca5 	bl	8000b4e <GPIO_PinAFConfig>

	GPIO_InitStruct.GPIO_Pin = GPIO_Pin_1;
 8000204:	2302      	movs	r3, #2
 8000206:	623b      	str	r3, [r7, #32]
	GPIO_Init(LED1_RED_GPIO_PORT, &GPIO_InitStruct);
 8000208:	f107 0320 	add.w	r3, r7, #32
 800020c:	4619      	mov	r1, r3
 800020e:	481a      	ldr	r0, [pc, #104]	; (8000278 <LedControl_TimerOCInit+0xa4>)
 8000210:	f000 fc0f 	bl	8000a32 <GPIO_Init>

	//Enable clock for timer2 peripheral
	RCC_APB1PeriphClockCmd(TIM2_CLK, ENABLE);
 8000214:	2101      	movs	r1, #1
 8000216:	2001      	movs	r0, #1
 8000218:	f000 fdaa 	bl	8000d70 <RCC_APB1PeriphClockCmd>

	// Clock div 1
	TIM_TimeBaseInitStruct.TIM_Prescaler = 0;
 800021c:	2300      	movs	r3, #0
 800021e:	82bb      	strh	r3, [r7, #20]

	//Counter up
	TIM_TimeBaseInitStruct.TIM_CounterMode = TIM_CounterMode_Up;
 8000220:	2300      	movs	r3, #0
 8000222:	82fb      	strh	r3, [r7, #22]

	//Period = clock / 8400
	TIM_TimeBaseInitStruct.TIM_Period = 8399;
 8000224:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8000228:	61bb      	str	r3, [r7, #24]

	//Clock div 1
	TIM_TimeBaseInitStruct.TIM_ClockDivision = 0;
 800022a:	2300      	movs	r3, #0
 800022c:	83bb      	strh	r3, [r7, #28]

	//
	TIM_TimeBaseInitStruct.TIM_RepetitionCounter = 0;
 800022e:	2300      	movs	r3, #0
 8000230:	77bb      	strb	r3, [r7, #30]

	TIM_TimeBaseInit(TIM2, &TIM_TimeBaseInitStruct);
 8000232:	f107 0314 	add.w	r3, r7, #20
 8000236:	4619      	mov	r1, r3
 8000238:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800023c:	f000 fdf8 	bl	8000e30 <TIM_TimeBaseInit>

	//Output captrure mode2
	TIM_OCInitStruct.TIM_OCMode = TIM_OCMode_PWM2;
 8000240:	2370      	movs	r3, #112	; 0x70
 8000242:	803b      	strh	r3, [r7, #0]
	TIM_OCInitStruct.TIM_OutputState = TIM_OutputState_Enable;
 8000244:	2301      	movs	r3, #1
 8000246:	807b      	strh	r3, [r7, #2]
	TIM_OCInitStruct.TIM_Pulse = 0;
 8000248:	2300      	movs	r3, #0
 800024a:	60bb      	str	r3, [r7, #8]
	TIM_OCInitStruct.TIM_OCPolarity = TIM_OCPolarity_Low;
 800024c:	2302      	movs	r3, #2
 800024e:	81bb      	strh	r3, [r7, #12]

	TIM_OC2Init(TIM2, &TIM_OCInitStruct);
 8000250:	463b      	mov	r3, r7
 8000252:	4619      	mov	r1, r3
 8000254:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8000258:	f000 fe76 	bl	8000f48 <TIM_OC2Init>

	TIM_Cmd(TIM2, ENABLE);
 800025c:	2101      	movs	r1, #1
 800025e:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8000262:	f000 fe51 	bl	8000f08 <TIM_Cmd>
	TIM_CtrlPWMOutputs(TIM2, ENABLE);
 8000266:	2101      	movs	r1, #1
 8000268:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 800026c:	f000 ff02 	bl	8001074 <TIM_CtrlPWMOutputs>
}
 8000270:	bf00      	nop
 8000272:	3728      	adds	r7, #40	; 0x28
 8000274:	46bd      	mov	sp, r7
 8000276:	bd80      	pop	{r7, pc}
 8000278:	40020000 	.word	0x40020000

0800027c <LedControl_PWM>:



//Control LED
static void LedControl_PWM(uint16_t duty_cycle)
{
 800027c:	b580      	push	{r7, lr}
 800027e:	b082      	sub	sp, #8
 8000280:	af00      	add	r7, sp, #0
 8000282:	4603      	mov	r3, r0
 8000284:	80fb      	strh	r3, [r7, #6]
	static uint16_t pulse_length = 0;

	pulse_length = (Tim_Period * duty_cycle)/100;
 8000286:	88fb      	ldrh	r3, [r7, #6]
 8000288:	f242 02cf 	movw	r2, #8399	; 0x20cf
 800028c:	fb02 f303 	mul.w	r3, r2, r3
 8000290:	4a09      	ldr	r2, [pc, #36]	; (80002b8 <LedControl_PWM+0x3c>)
 8000292:	fb82 1203 	smull	r1, r2, r2, r3
 8000296:	1152      	asrs	r2, r2, #5
 8000298:	17db      	asrs	r3, r3, #31
 800029a:	1ad3      	subs	r3, r2, r3
 800029c:	b29a      	uxth	r2, r3
 800029e:	4b07      	ldr	r3, [pc, #28]	; (80002bc <LedControl_PWM+0x40>)
 80002a0:	801a      	strh	r2, [r3, #0]

	TIM_SetCompare2(TIM2, pulse_length);
 80002a2:	4b06      	ldr	r3, [pc, #24]	; (80002bc <LedControl_PWM+0x40>)
 80002a4:	881b      	ldrh	r3, [r3, #0]
 80002a6:	4619      	mov	r1, r3
 80002a8:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 80002ac:	f000 fed4 	bl	8001058 <TIM_SetCompare2>
}
 80002b0:	bf00      	nop
 80002b2:	3708      	adds	r7, #8
 80002b4:	46bd      	mov	sp, r7
 80002b6:	bd80      	pop	{r7, pc}
 80002b8:	51eb851f 	.word	0x51eb851f
 80002bc:	20000044 	.word	0x20000044

080002c0 <LightSensor_AdcInit>:

//Init ADC to read light sensor
void LightSensor_AdcInit(void)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b08c      	sub	sp, #48	; 0x30
 80002c4:	af00      	add	r7, sp, #0
	ADC_CommonInitTypeDef	ADC_CommonInitStruct;
	GPIO_InitTypeDef		GPIO_InitStruct;

	//-----------------GPIOC Init
	//Enable clock for GPIOC
	RCC_AHB1PeriphClockCmd(ADC_GPIO_CLK, ENABLE);
 80002c6:	2101      	movs	r1, #1
 80002c8:	2004      	movs	r0, #4
 80002ca:	f000 fd31 	bl	8000d30 <RCC_AHB1PeriphClockCmd>

	//Pin 5
	GPIO_InitStruct.GPIO_Pin = ADC_GPIO_PIN;
 80002ce:	2320      	movs	r3, #32
 80002d0:	603b      	str	r3, [r7, #0]

	//Alternate function mode analog
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AN;
 80002d2:	2303      	movs	r3, #3
 80002d4:	713b      	strb	r3, [r7, #4]

	//Not use pull-up resistor
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_NOPULL;
 80002d6:	2300      	movs	r3, #0
 80002d8:	71fb      	strb	r3, [r7, #7]
	GPIO_Init(ADC_GPIO, &GPIO_InitStruct);
 80002da:	463b      	mov	r3, r7
 80002dc:	4619      	mov	r1, r3
 80002de:	481f      	ldr	r0, [pc, #124]	; (800035c <LightSensor_AdcInit+0x9c>)
 80002e0:	f000 fba7 	bl	8000a32 <GPIO_Init>

	//reset ADC
	ADC_DeInit();
 80002e4:	f000 f9fa 	bl	80006dc <ADC_DeInit>

	//Enable clock for ADC1
	RCC_APB2PeriphClockCmd(ADCx_CLK, ENABLE);
 80002e8:	2101      	movs	r1, #1
 80002ea:	f44f 7080 	mov.w	r0, #256	; 0x100
 80002ee:	f000 fd5f 	bl	8000db0 <RCC_APB2PeriphClockCmd>

	//-----------------ADC Common Init

	//Independent mode
	ADC_CommonInitStruct.ADC_Mode = ADC_Mode_Independent;
 80002f2:	2300      	movs	r3, #0
 80002f4:	60bb      	str	r3, [r7, #8]

	//Clock /2
	ADC_CommonInitStruct.ADC_Prescaler = ADC_Prescaler_Div2;
 80002f6:	2300      	movs	r3, #0
 80002f8:	60fb      	str	r3, [r7, #12]

	//Disable DMA
	ADC_CommonInitStruct.ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 80002fa:	2300      	movs	r3, #0
 80002fc:	613b      	str	r3, [r7, #16]

	//5 cycle for 2 sampling time
	ADC_CommonInitStruct.ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 80002fe:	2300      	movs	r3, #0
 8000300:	617b      	str	r3, [r7, #20]

	//Update into corresponding register
	ADC_CommonInit(&ADC_CommonInitStruct);
 8000302:	f107 0308 	add.w	r3, r7, #8
 8000306:	4618      	mov	r0, r3
 8000308:	f000 fa4c 	bl	80007a4 <ADC_CommonInit>

	//----------------ADC advanced init

	//12 bits resolution
	ADC_InitStruct.ADC_Resolution = ADC_Resolution_12b;
 800030c:	2300      	movs	r3, #0
 800030e:	61bb      	str	r3, [r7, #24]

	//1 channel conversion
	ADC_InitStruct.ADC_ScanConvMode = DISABLE;
 8000310:	2300      	movs	r3, #0
 8000312:	773b      	strb	r3, [r7, #28]

	//Continuous conversion
	ADC_InitStruct.ADC_ContinuousConvMode = ENABLE;
 8000314:	2301      	movs	r3, #1
 8000316:	777b      	strb	r3, [r7, #29]

	ADC_InitStruct.ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 8000318:	2300      	movs	r3, #0
 800031a:	623b      	str	r3, [r7, #32]


	ADC_InitStruct.ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 800031c:	2300      	movs	r3, #0
 800031e:	627b      	str	r3, [r7, #36]	; 0x24

	//LSB bit is sorted right
	ADC_InitStruct.ADC_DataAlign = ADC_DataAlign_Right;
 8000320:	2300      	movs	r3, #0
 8000322:	62bb      	str	r3, [r7, #40]	; 0x28

	//1 channel is used
	ADC_InitStruct.ADC_NbrOfConversion = 16;
 8000324:	2310      	movs	r3, #16
 8000326:	f887 302c 	strb.w	r3, [r7, #44]	; 0x2c
	ADC_Init(ADCx_SENSOR, &ADC_InitStruct);
 800032a:	f107 0318 	add.w	r3, r7, #24
 800032e:	4619      	mov	r1, r3
 8000330:	480b      	ldr	r0, [pc, #44]	; (8000360 <LightSensor_AdcInit+0xa0>)
 8000332:	f000 f9e1 	bl	80006f8 <ADC_Init>


	ADC_EOCOnEachRegularChannelCmd(ADCx_SENSOR, DISABLE);
 8000336:	2100      	movs	r1, #0
 8000338:	4809      	ldr	r0, [pc, #36]	; (8000360 <LightSensor_AdcInit+0xa0>)
 800033a:	f000 fb51 	bl	80009e0 <ADC_EOCOnEachRegularChannelCmd>
//	ADC_ContinuousModeCmd(ADCx_SENSOR, DISABLE);	//:D. Đoạn này thì lại disable continus
//	ADC_DiscModeChannelCountConfig(ADCx_SENSOR, 16);
//	ADC_DiscModeCmd(ADCx_SENSOR, ENABLE);
	//144 cycles each for each sample
	ADC_RegularChannelConfig(ADCx_SENSOR, ADC_Channel_15, 1, ADC_SampleTime_15Cycles);
 800033e:	2301      	movs	r3, #1
 8000340:	2201      	movs	r2, #1
 8000342:	210f      	movs	r1, #15
 8000344:	4806      	ldr	r0, [pc, #24]	; (8000360 <LightSensor_AdcInit+0xa0>)
 8000346:	f000 fa71 	bl	800082c <ADC_RegularChannelConfig>

	//Enalbe ADC1 peripheral
	ADC_Cmd(ADCx_SENSOR, ENABLE);
 800034a:	2101      	movs	r1, #1
 800034c:	4804      	ldr	r0, [pc, #16]	; (8000360 <LightSensor_AdcInit+0xa0>)
 800034e:	f000 fa51 	bl	80007f4 <ADC_Cmd>


}
 8000352:	bf00      	nop
 8000354:	3730      	adds	r7, #48	; 0x30
 8000356:	46bd      	mov	sp, r7
 8000358:	bd80      	pop	{r7, pc}
 800035a:	bf00      	nop
 800035c:	40020800 	.word	0x40020800
 8000360:	40012000 	.word	0x40012000

08000364 <LightSensor_AdcPollingRead>:


uint16_t LightSensor_AdcPollingRead(void)
{
 8000364:	b580      	push	{r7, lr}
 8000366:	b082      	sub	sp, #8
 8000368:	af00      	add	r7, sp, #0
	//read light value from sensor
	uint16_t mea = ADC_GetConversionValue(ADCx_SENSOR);
 800036a:	4805      	ldr	r0, [pc, #20]	; (8000380 <LightSensor_AdcPollingRead+0x1c>)
 800036c:	f000 fb54 	bl	8000a18 <ADC_GetConversionValue>
 8000370:	4603      	mov	r3, r0
 8000372:	80fb      	strh	r3, [r7, #6]

	//calculate brightness by kalman filter
//	uint16_t result = KalmanFilter_updateEstimate(mea);

	return mea;
 8000374:	88fb      	ldrh	r3, [r7, #6]
}
 8000376:	4618      	mov	r0, r3
 8000378:	3708      	adds	r7, #8
 800037a:	46bd      	mov	sp, r7
 800037c:	bd80      	pop	{r7, pc}
 800037e:	bf00      	nop
 8000380:	40012000 	.word	0x40012000

08000384 <ABL_StepBrightness>:

//Control led brightness via light value
void ABL_StepBrightness(uint16_t light_value)
{
 8000384:	b580      	push	{r7, lr}
 8000386:	b082      	sub	sp, #8
 8000388:	af00      	add	r7, sp, #0
 800038a:	4603      	mov	r3, r0
 800038c:	80fb      	strh	r3, [r7, #6]
	if(light_value >= 800)
 800038e:	88fb      	ldrh	r3, [r7, #6]
 8000390:	f5b3 7f48 	cmp.w	r3, #800	; 0x320
 8000394:	d303      	bcc.n	800039e <ABL_StepBrightness+0x1a>
	{
		//turn off LED
		LedControl_PWM(0);
 8000396:	2000      	movs	r0, #0
 8000398:	f7ff ff70 	bl	800027c <LedControl_PWM>
	else {

		//led brightness = max
		LedControl_PWM(100);
	}
}
 800039c:	e019      	b.n	80003d2 <ABL_StepBrightness+0x4e>
	else if (light_value >= 600)
 800039e:	88fb      	ldrh	r3, [r7, #6]
 80003a0:	f5b3 7f16 	cmp.w	r3, #600	; 0x258
 80003a4:	d303      	bcc.n	80003ae <ABL_StepBrightness+0x2a>
		LedControl_PWM(20);
 80003a6:	2014      	movs	r0, #20
 80003a8:	f7ff ff68 	bl	800027c <LedControl_PWM>
}
 80003ac:	e011      	b.n	80003d2 <ABL_StepBrightness+0x4e>
	else if (light_value >= 400) {
 80003ae:	88fb      	ldrh	r3, [r7, #6]
 80003b0:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80003b4:	d303      	bcc.n	80003be <ABL_StepBrightness+0x3a>
		LedControl_PWM(50);
 80003b6:	2032      	movs	r0, #50	; 0x32
 80003b8:	f7ff ff60 	bl	800027c <LedControl_PWM>
}
 80003bc:	e009      	b.n	80003d2 <ABL_StepBrightness+0x4e>
	else if (light_value >= 200) {
 80003be:	88fb      	ldrh	r3, [r7, #6]
 80003c0:	2bc7      	cmp	r3, #199	; 0xc7
 80003c2:	d903      	bls.n	80003cc <ABL_StepBrightness+0x48>
		LedControl_PWM(70);
 80003c4:	2046      	movs	r0, #70	; 0x46
 80003c6:	f7ff ff59 	bl	800027c <LedControl_PWM>
}
 80003ca:	e002      	b.n	80003d2 <ABL_StepBrightness+0x4e>
		LedControl_PWM(100);
 80003cc:	2064      	movs	r0, #100	; 0x64
 80003ce:	f7ff ff55 	bl	800027c <LedControl_PWM>
}
 80003d2:	bf00      	nop
 80003d4:	3708      	adds	r7, #8
 80003d6:	46bd      	mov	sp, r7
 80003d8:	bd80      	pop	{r7, pc}

080003da <CalculatorTime>:

//Calculate time
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent)
{
 80003da:	b480      	push	{r7}
 80003dc:	b085      	sub	sp, #20
 80003de:	af00      	add	r7, sp, #0
 80003e0:	6078      	str	r0, [r7, #4]
 80003e2:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;

	if(dwTimeCurrent >= dwTimeInit)
 80003e4:	683a      	ldr	r2, [r7, #0]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	429a      	cmp	r2, r3
 80003ea:	d304      	bcc.n	80003f6 <CalculatorTime+0x1c>
	{
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 80003ec:	683a      	ldr	r2, [r7, #0]
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	1ad3      	subs	r3, r2, r3
 80003f2:	60fb      	str	r3, [r7, #12]
 80003f4:	e004      	b.n	8000400 <CalculatorTime+0x26>
	}
	else
	{
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 80003f6:	683a      	ldr	r2, [r7, #0]
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	1ad3      	subs	r3, r2, r3
 80003fc:	3b01      	subs	r3, #1
 80003fe:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 8000400:	68fb      	ldr	r3, [r7, #12]
}
 8000402:	4618      	mov	r0, r3
 8000404:	3714      	adds	r7, #20
 8000406:	46bd      	mov	sp, r7
 8000408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800040c:	4770      	bx	lr
	...

08000410 <ABL_Process>:

void ABL_Process(void)
{
 8000410:	b598      	push	{r3, r4, r7, lr}
 8000412:	af00      	add	r7, sp, #0
	if(CalculatorTime(time_initial, GetMilSecTick()) >= 100)//After 5s
 8000414:	4b0c      	ldr	r3, [pc, #48]	; (8000448 <ABL_Process+0x38>)
 8000416:	681c      	ldr	r4, [r3, #0]
 8000418:	f000 ff10 	bl	800123c <GetMilSecTick>
 800041c:	4603      	mov	r3, r0
 800041e:	4619      	mov	r1, r3
 8000420:	4620      	mov	r0, r4
 8000422:	f7ff ffda 	bl	80003da <CalculatorTime>
 8000426:	4603      	mov	r3, r0
 8000428:	2b63      	cmp	r3, #99	; 0x63
 800042a:	d90a      	bls.n	8000442 <ABL_Process+0x32>
	{
		//Control led brightness via light value
		ABL_StepBrightness(LightSensor_AdcPollingRead());
 800042c:	f7ff ff9a 	bl	8000364 <LightSensor_AdcPollingRead>
 8000430:	4603      	mov	r3, r0
 8000432:	4618      	mov	r0, r3
 8000434:	f7ff ffa6 	bl	8000384 <ABL_StepBrightness>

		//Update time_initial
		time_initial = GetMilSecTick();
 8000438:	f000 ff00 	bl	800123c <GetMilSecTick>
 800043c:	4603      	mov	r3, r0
 800043e:	4a02      	ldr	r2, [pc, #8]	; (8000448 <ABL_Process+0x38>)
 8000440:	6013      	str	r3, [r2, #0]
	}

}
 8000442:	bf00      	nop
 8000444:	bd98      	pop	{r3, r4, r7, pc}
 8000446:	bf00      	nop
 8000448:	20000040 	.word	0x20000040

0800044c <main>:

int main(void)
{
 800044c:	b580      	push	{r7, lr}
 800044e:	af00      	add	r7, sp, #0
	//Init system clock 84MHz
	SystemCoreClockUpdate();
 8000450:	f000 f878 	bl	8000544 <SystemCoreClockUpdate>

	//Init timer
	TimerInit();
 8000454:	f000 fe80 	bl	8001158 <TimerInit>

	//Init timer2 s output compare mode
	LedControl_TimerOCInit();
 8000458:	f7ff febc 	bl	80001d4 <LedControl_TimerOCInit>

	//init ADC1 channel 15
	LightSensor_AdcInit();
 800045c:	f7ff ff30 	bl	80002c0 <LightSensor_AdcInit>

	//Start ADC conversion
	ADC_SoftwareStartConv(ADCx_SENSOR);
 8000460:	4806      	ldr	r0, [pc, #24]	; (800047c <main+0x30>)
 8000462:	f000 faad 	bl	80009c0 <ADC_SoftwareStartConv>

	//Init time_initial
	time_initial = GetMilSecTick();
 8000466:	f000 fee9 	bl	800123c <GetMilSecTick>
 800046a:	4603      	mov	r3, r0
 800046c:	4a04      	ldr	r2, [pc, #16]	; (8000480 <main+0x34>)
 800046e:	6013      	str	r3, [r2, #0]
	while(1)
	{
		processTimerScheduler();
 8000470:	f000 fef0 	bl	8001254 <processTimerScheduler>

		//Calculate led brightness
		ABL_Process();
 8000474:	f7ff ffcc 	bl	8000410 <ABL_Process>
		processTimerScheduler();
 8000478:	e7fa      	b.n	8000470 <main+0x24>
 800047a:	bf00      	nop
 800047c:	40012000 	.word	0x40012000
 8000480:	20000040 	.word	0x20000040

08000484 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000484:	480d      	ldr	r0, [pc, #52]	; (80004bc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000486:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000488:	f000 f826 	bl	80004d8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800048c:	480c      	ldr	r0, [pc, #48]	; (80004c0 <LoopForever+0x6>)
  ldr r1, =_edata
 800048e:	490d      	ldr	r1, [pc, #52]	; (80004c4 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000490:	4a0d      	ldr	r2, [pc, #52]	; (80004c8 <LoopForever+0xe>)
  movs r3, #0
 8000492:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000494:	e002      	b.n	800049c <LoopCopyDataInit>

08000496 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000496:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000498:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800049a:	3304      	adds	r3, #4

0800049c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800049c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800049e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80004a0:	d3f9      	bcc.n	8000496 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80004a2:	4a0a      	ldr	r2, [pc, #40]	; (80004cc <LoopForever+0x12>)
  ldr r4, =_ebss
 80004a4:	4c0a      	ldr	r4, [pc, #40]	; (80004d0 <LoopForever+0x16>)
  movs r3, #0
 80004a6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80004a8:	e001      	b.n	80004ae <LoopFillZerobss>

080004aa <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80004aa:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80004ac:	3204      	adds	r2, #4

080004ae <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80004ae:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80004b0:	d3fb      	bcc.n	80004aa <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80004b2:	f000 ffd5 	bl	8001460 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80004b6:	f7ff ffc9 	bl	800044c <main>

080004ba <LoopForever>:

LoopForever:
    b LoopForever
 80004ba:	e7fe      	b.n	80004ba <LoopForever>
  ldr   r0, =_estack
 80004bc:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80004c0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80004c4:	20000024 	.word	0x20000024
  ldr r2, =_sidata
 80004c8:	080014c8 	.word	0x080014c8
  ldr r2, =_sbss
 80004cc:	20000024 	.word	0x20000024
  ldr r4, =_ebss
 80004d0:	200001cc 	.word	0x200001cc

080004d4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80004d4:	e7fe      	b.n	80004d4 <ADC_IRQHandler>
	...

080004d8 <SystemInit>:
 80004d8:	b580      	push	{r7, lr}
 80004da:	af00      	add	r7, sp, #0
 80004dc:	4b16      	ldr	r3, [pc, #88]	; (8000538 <SystemInit+0x60>)
 80004de:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80004e2:	4a15      	ldr	r2, [pc, #84]	; (8000538 <SystemInit+0x60>)
 80004e4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80004e8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80004ec:	4b13      	ldr	r3, [pc, #76]	; (800053c <SystemInit+0x64>)
 80004ee:	681b      	ldr	r3, [r3, #0]
 80004f0:	4a12      	ldr	r2, [pc, #72]	; (800053c <SystemInit+0x64>)
 80004f2:	f043 0301 	orr.w	r3, r3, #1
 80004f6:	6013      	str	r3, [r2, #0]
 80004f8:	4b10      	ldr	r3, [pc, #64]	; (800053c <SystemInit+0x64>)
 80004fa:	2200      	movs	r2, #0
 80004fc:	609a      	str	r2, [r3, #8]
 80004fe:	4b0f      	ldr	r3, [pc, #60]	; (800053c <SystemInit+0x64>)
 8000500:	681b      	ldr	r3, [r3, #0]
 8000502:	4a0e      	ldr	r2, [pc, #56]	; (800053c <SystemInit+0x64>)
 8000504:	f023 7384 	bic.w	r3, r3, #17301504	; 0x1080000
 8000508:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800050c:	6013      	str	r3, [r2, #0]
 800050e:	4b0b      	ldr	r3, [pc, #44]	; (800053c <SystemInit+0x64>)
 8000510:	4a0b      	ldr	r2, [pc, #44]	; (8000540 <SystemInit+0x68>)
 8000512:	605a      	str	r2, [r3, #4]
 8000514:	4b09      	ldr	r3, [pc, #36]	; (800053c <SystemInit+0x64>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a08      	ldr	r2, [pc, #32]	; (800053c <SystemInit+0x64>)
 800051a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800051e:	6013      	str	r3, [r2, #0]
 8000520:	4b06      	ldr	r3, [pc, #24]	; (800053c <SystemInit+0x64>)
 8000522:	2200      	movs	r2, #0
 8000524:	60da      	str	r2, [r3, #12]
 8000526:	f000 f889 	bl	800063c <SetSysClock>
 800052a:	4b03      	ldr	r3, [pc, #12]	; (8000538 <SystemInit+0x60>)
 800052c:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8000530:	609a      	str	r2, [r3, #8]
 8000532:	bf00      	nop
 8000534:	bd80      	pop	{r7, pc}
 8000536:	bf00      	nop
 8000538:	e000ed00 	.word	0xe000ed00
 800053c:	40023800 	.word	0x40023800
 8000540:	24003010 	.word	0x24003010

08000544 <SystemCoreClockUpdate>:
 8000544:	b480      	push	{r7}
 8000546:	b087      	sub	sp, #28
 8000548:	af00      	add	r7, sp, #0
 800054a:	2300      	movs	r3, #0
 800054c:	613b      	str	r3, [r7, #16]
 800054e:	2300      	movs	r3, #0
 8000550:	617b      	str	r3, [r7, #20]
 8000552:	2302      	movs	r3, #2
 8000554:	60fb      	str	r3, [r7, #12]
 8000556:	2300      	movs	r3, #0
 8000558:	60bb      	str	r3, [r7, #8]
 800055a:	2302      	movs	r3, #2
 800055c:	607b      	str	r3, [r7, #4]
 800055e:	4b32      	ldr	r3, [pc, #200]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 8000560:	689b      	ldr	r3, [r3, #8]
 8000562:	f003 030c 	and.w	r3, r3, #12
 8000566:	613b      	str	r3, [r7, #16]
 8000568:	693b      	ldr	r3, [r7, #16]
 800056a:	2b04      	cmp	r3, #4
 800056c:	d007      	beq.n	800057e <SystemCoreClockUpdate+0x3a>
 800056e:	2b08      	cmp	r3, #8
 8000570:	d009      	beq.n	8000586 <SystemCoreClockUpdate+0x42>
 8000572:	2b00      	cmp	r3, #0
 8000574:	d13d      	bne.n	80005f2 <SystemCoreClockUpdate+0xae>
 8000576:	4b2d      	ldr	r3, [pc, #180]	; (800062c <SystemCoreClockUpdate+0xe8>)
 8000578:	4a2d      	ldr	r2, [pc, #180]	; (8000630 <SystemCoreClockUpdate+0xec>)
 800057a:	601a      	str	r2, [r3, #0]
 800057c:	e03d      	b.n	80005fa <SystemCoreClockUpdate+0xb6>
 800057e:	4b2b      	ldr	r3, [pc, #172]	; (800062c <SystemCoreClockUpdate+0xe8>)
 8000580:	4a2c      	ldr	r2, [pc, #176]	; (8000634 <SystemCoreClockUpdate+0xf0>)
 8000582:	601a      	str	r2, [r3, #0]
 8000584:	e039      	b.n	80005fa <SystemCoreClockUpdate+0xb6>
 8000586:	4b28      	ldr	r3, [pc, #160]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 8000588:	685b      	ldr	r3, [r3, #4]
 800058a:	0d9b      	lsrs	r3, r3, #22
 800058c:	f003 0301 	and.w	r3, r3, #1
 8000590:	60bb      	str	r3, [r7, #8]
 8000592:	4b25      	ldr	r3, [pc, #148]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 8000594:	685b      	ldr	r3, [r3, #4]
 8000596:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 800059a:	607b      	str	r3, [r7, #4]
 800059c:	68bb      	ldr	r3, [r7, #8]
 800059e:	2b00      	cmp	r3, #0
 80005a0:	d00c      	beq.n	80005bc <SystemCoreClockUpdate+0x78>
 80005a2:	4a24      	ldr	r2, [pc, #144]	; (8000634 <SystemCoreClockUpdate+0xf0>)
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	fbb2 f3f3 	udiv	r3, r2, r3
 80005aa:	4a1f      	ldr	r2, [pc, #124]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 80005ac:	6852      	ldr	r2, [r2, #4]
 80005ae:	0992      	lsrs	r2, r2, #6
 80005b0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80005b4:	fb02 f303 	mul.w	r3, r2, r3
 80005b8:	617b      	str	r3, [r7, #20]
 80005ba:	e00b      	b.n	80005d4 <SystemCoreClockUpdate+0x90>
 80005bc:	4a1c      	ldr	r2, [pc, #112]	; (8000630 <SystemCoreClockUpdate+0xec>)
 80005be:	687b      	ldr	r3, [r7, #4]
 80005c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80005c4:	4a18      	ldr	r2, [pc, #96]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 80005c6:	6852      	ldr	r2, [r2, #4]
 80005c8:	0992      	lsrs	r2, r2, #6
 80005ca:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80005ce:	fb02 f303 	mul.w	r3, r2, r3
 80005d2:	617b      	str	r3, [r7, #20]
 80005d4:	4b14      	ldr	r3, [pc, #80]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 80005d6:	685b      	ldr	r3, [r3, #4]
 80005d8:	0c1b      	lsrs	r3, r3, #16
 80005da:	f003 0303 	and.w	r3, r3, #3
 80005de:	3301      	adds	r3, #1
 80005e0:	005b      	lsls	r3, r3, #1
 80005e2:	60fb      	str	r3, [r7, #12]
 80005e4:	697a      	ldr	r2, [r7, #20]
 80005e6:	68fb      	ldr	r3, [r7, #12]
 80005e8:	fbb2 f3f3 	udiv	r3, r2, r3
 80005ec:	4a0f      	ldr	r2, [pc, #60]	; (800062c <SystemCoreClockUpdate+0xe8>)
 80005ee:	6013      	str	r3, [r2, #0]
 80005f0:	e003      	b.n	80005fa <SystemCoreClockUpdate+0xb6>
 80005f2:	4b0e      	ldr	r3, [pc, #56]	; (800062c <SystemCoreClockUpdate+0xe8>)
 80005f4:	4a0e      	ldr	r2, [pc, #56]	; (8000630 <SystemCoreClockUpdate+0xec>)
 80005f6:	601a      	str	r2, [r3, #0]
 80005f8:	bf00      	nop
 80005fa:	4b0b      	ldr	r3, [pc, #44]	; (8000628 <SystemCoreClockUpdate+0xe4>)
 80005fc:	689b      	ldr	r3, [r3, #8]
 80005fe:	091b      	lsrs	r3, r3, #4
 8000600:	f003 030f 	and.w	r3, r3, #15
 8000604:	4a0c      	ldr	r2, [pc, #48]	; (8000638 <SystemCoreClockUpdate+0xf4>)
 8000606:	5cd3      	ldrb	r3, [r2, r3]
 8000608:	b2db      	uxtb	r3, r3
 800060a:	613b      	str	r3, [r7, #16]
 800060c:	4b07      	ldr	r3, [pc, #28]	; (800062c <SystemCoreClockUpdate+0xe8>)
 800060e:	681a      	ldr	r2, [r3, #0]
 8000610:	693b      	ldr	r3, [r7, #16]
 8000612:	fa22 f303 	lsr.w	r3, r2, r3
 8000616:	4a05      	ldr	r2, [pc, #20]	; (800062c <SystemCoreClockUpdate+0xe8>)
 8000618:	6013      	str	r3, [r2, #0]
 800061a:	bf00      	nop
 800061c:	371c      	adds	r7, #28
 800061e:	46bd      	mov	sp, r7
 8000620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000624:	4770      	bx	lr
 8000626:	bf00      	nop
 8000628:	40023800 	.word	0x40023800
 800062c:	20000000 	.word	0x20000000
 8000630:	00f42400 	.word	0x00f42400
 8000634:	017d7840 	.word	0x017d7840
 8000638:	20000004 	.word	0x20000004

0800063c <SetSysClock>:
 800063c:	b480      	push	{r7}
 800063e:	af00      	add	r7, sp, #0
 8000640:	4b22      	ldr	r3, [pc, #136]	; (80006cc <SetSysClock+0x90>)
 8000642:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000644:	4a21      	ldr	r2, [pc, #132]	; (80006cc <SetSysClock+0x90>)
 8000646:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800064a:	6413      	str	r3, [r2, #64]	; 0x40
 800064c:	4b20      	ldr	r3, [pc, #128]	; (80006d0 <SetSysClock+0x94>)
 800064e:	681b      	ldr	r3, [r3, #0]
 8000650:	4a1f      	ldr	r2, [pc, #124]	; (80006d0 <SetSysClock+0x94>)
 8000652:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000656:	6013      	str	r3, [r2, #0]
 8000658:	4b1c      	ldr	r3, [pc, #112]	; (80006cc <SetSysClock+0x90>)
 800065a:	4a1c      	ldr	r2, [pc, #112]	; (80006cc <SetSysClock+0x90>)
 800065c:	689b      	ldr	r3, [r3, #8]
 800065e:	6093      	str	r3, [r2, #8]
 8000660:	4b1a      	ldr	r3, [pc, #104]	; (80006cc <SetSysClock+0x90>)
 8000662:	4a1a      	ldr	r2, [pc, #104]	; (80006cc <SetSysClock+0x90>)
 8000664:	689b      	ldr	r3, [r3, #8]
 8000666:	6093      	str	r3, [r2, #8]
 8000668:	4b18      	ldr	r3, [pc, #96]	; (80006cc <SetSysClock+0x90>)
 800066a:	689b      	ldr	r3, [r3, #8]
 800066c:	4a17      	ldr	r2, [pc, #92]	; (80006cc <SetSysClock+0x90>)
 800066e:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8000672:	6093      	str	r3, [r2, #8]
 8000674:	4b15      	ldr	r3, [pc, #84]	; (80006cc <SetSysClock+0x90>)
 8000676:	4a17      	ldr	r2, [pc, #92]	; (80006d4 <SetSysClock+0x98>)
 8000678:	605a      	str	r2, [r3, #4]
 800067a:	4b14      	ldr	r3, [pc, #80]	; (80006cc <SetSysClock+0x90>)
 800067c:	681b      	ldr	r3, [r3, #0]
 800067e:	4a13      	ldr	r2, [pc, #76]	; (80006cc <SetSysClock+0x90>)
 8000680:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000684:	6013      	str	r3, [r2, #0]
 8000686:	bf00      	nop
 8000688:	4b10      	ldr	r3, [pc, #64]	; (80006cc <SetSysClock+0x90>)
 800068a:	681b      	ldr	r3, [r3, #0]
 800068c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8000690:	2b00      	cmp	r3, #0
 8000692:	d0f9      	beq.n	8000688 <SetSysClock+0x4c>
 8000694:	4b10      	ldr	r3, [pc, #64]	; (80006d8 <SetSysClock+0x9c>)
 8000696:	f240 6202 	movw	r2, #1538	; 0x602
 800069a:	601a      	str	r2, [r3, #0]
 800069c:	4b0b      	ldr	r3, [pc, #44]	; (80006cc <SetSysClock+0x90>)
 800069e:	689b      	ldr	r3, [r3, #8]
 80006a0:	4a0a      	ldr	r2, [pc, #40]	; (80006cc <SetSysClock+0x90>)
 80006a2:	f023 0303 	bic.w	r3, r3, #3
 80006a6:	6093      	str	r3, [r2, #8]
 80006a8:	4b08      	ldr	r3, [pc, #32]	; (80006cc <SetSysClock+0x90>)
 80006aa:	689b      	ldr	r3, [r3, #8]
 80006ac:	4a07      	ldr	r2, [pc, #28]	; (80006cc <SetSysClock+0x90>)
 80006ae:	f043 0302 	orr.w	r3, r3, #2
 80006b2:	6093      	str	r3, [r2, #8]
 80006b4:	bf00      	nop
 80006b6:	4b05      	ldr	r3, [pc, #20]	; (80006cc <SetSysClock+0x90>)
 80006b8:	689b      	ldr	r3, [r3, #8]
 80006ba:	f003 030c 	and.w	r3, r3, #12
 80006be:	2b08      	cmp	r3, #8
 80006c0:	d1f9      	bne.n	80006b6 <SetSysClock+0x7a>
 80006c2:	bf00      	nop
 80006c4:	46bd      	mov	sp, r7
 80006c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006ca:	4770      	bx	lr
 80006cc:	40023800 	.word	0x40023800
 80006d0:	40007000 	.word	0x40007000
 80006d4:	08015410 	.word	0x08015410
 80006d8:	40023c00 	.word	0x40023c00

080006dc <ADC_DeInit>:
 80006dc:	b580      	push	{r7, lr}
 80006de:	af00      	add	r7, sp, #0
 80006e0:	2101      	movs	r1, #1
 80006e2:	f44f 7080 	mov.w	r0, #256	; 0x100
 80006e6:	f000 fb83 	bl	8000df0 <RCC_APB2PeriphResetCmd>
 80006ea:	2100      	movs	r1, #0
 80006ec:	f44f 7080 	mov.w	r0, #256	; 0x100
 80006f0:	f000 fb7e 	bl	8000df0 <RCC_APB2PeriphResetCmd>
 80006f4:	bf00      	nop
 80006f6:	bd80      	pop	{r7, pc}

080006f8 <ADC_Init>:
 80006f8:	b480      	push	{r7}
 80006fa:	b085      	sub	sp, #20
 80006fc:	af00      	add	r7, sp, #0
 80006fe:	6078      	str	r0, [r7, #4]
 8000700:	6039      	str	r1, [r7, #0]
 8000702:	2300      	movs	r3, #0
 8000704:	60fb      	str	r3, [r7, #12]
 8000706:	2300      	movs	r3, #0
 8000708:	72fb      	strb	r3, [r7, #11]
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	685b      	ldr	r3, [r3, #4]
 800070e:	60fb      	str	r3, [r7, #12]
 8000710:	68fb      	ldr	r3, [r7, #12]
 8000712:	f023 7340 	bic.w	r3, r3, #50331648	; 0x3000000
 8000716:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800071a:	60fb      	str	r3, [r7, #12]
 800071c:	683b      	ldr	r3, [r7, #0]
 800071e:	791b      	ldrb	r3, [r3, #4]
 8000720:	021a      	lsls	r2, r3, #8
 8000722:	683b      	ldr	r3, [r7, #0]
 8000724:	681b      	ldr	r3, [r3, #0]
 8000726:	4313      	orrs	r3, r2
 8000728:	68fa      	ldr	r2, [r7, #12]
 800072a:	4313      	orrs	r3, r2
 800072c:	60fb      	str	r3, [r7, #12]
 800072e:	687b      	ldr	r3, [r7, #4]
 8000730:	68fa      	ldr	r2, [r7, #12]
 8000732:	605a      	str	r2, [r3, #4]
 8000734:	687b      	ldr	r3, [r7, #4]
 8000736:	689b      	ldr	r3, [r3, #8]
 8000738:	60fb      	str	r3, [r7, #12]
 800073a:	68fa      	ldr	r2, [r7, #12]
 800073c:	4b18      	ldr	r3, [pc, #96]	; (80007a0 <ADC_Init+0xa8>)
 800073e:	4013      	ands	r3, r2
 8000740:	60fb      	str	r3, [r7, #12]
 8000742:	683b      	ldr	r3, [r7, #0]
 8000744:	691a      	ldr	r2, [r3, #16]
 8000746:	683b      	ldr	r3, [r7, #0]
 8000748:	68db      	ldr	r3, [r3, #12]
 800074a:	431a      	orrs	r2, r3
 800074c:	683b      	ldr	r3, [r7, #0]
 800074e:	689b      	ldr	r3, [r3, #8]
 8000750:	431a      	orrs	r2, r3
 8000752:	683b      	ldr	r3, [r7, #0]
 8000754:	795b      	ldrb	r3, [r3, #5]
 8000756:	005b      	lsls	r3, r3, #1
 8000758:	4313      	orrs	r3, r2
 800075a:	68fa      	ldr	r2, [r7, #12]
 800075c:	4313      	orrs	r3, r2
 800075e:	60fb      	str	r3, [r7, #12]
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	68fa      	ldr	r2, [r7, #12]
 8000764:	609a      	str	r2, [r3, #8]
 8000766:	687b      	ldr	r3, [r7, #4]
 8000768:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800076a:	60fb      	str	r3, [r7, #12]
 800076c:	68fb      	ldr	r3, [r7, #12]
 800076e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8000772:	60fb      	str	r3, [r7, #12]
 8000774:	683b      	ldr	r3, [r7, #0]
 8000776:	7d1b      	ldrb	r3, [r3, #20]
 8000778:	3b01      	subs	r3, #1
 800077a:	b2da      	uxtb	r2, r3
 800077c:	7afb      	ldrb	r3, [r7, #11]
 800077e:	4313      	orrs	r3, r2
 8000780:	72fb      	strb	r3, [r7, #11]
 8000782:	7afb      	ldrb	r3, [r7, #11]
 8000784:	051b      	lsls	r3, r3, #20
 8000786:	68fa      	ldr	r2, [r7, #12]
 8000788:	4313      	orrs	r3, r2
 800078a:	60fb      	str	r3, [r7, #12]
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	68fa      	ldr	r2, [r7, #12]
 8000790:	62da      	str	r2, [r3, #44]	; 0x2c
 8000792:	bf00      	nop
 8000794:	3714      	adds	r7, #20
 8000796:	46bd      	mov	sp, r7
 8000798:	f85d 7b04 	ldr.w	r7, [sp], #4
 800079c:	4770      	bx	lr
 800079e:	bf00      	nop
 80007a0:	c0fff7fd 	.word	0xc0fff7fd

080007a4 <ADC_CommonInit>:
 80007a4:	b480      	push	{r7}
 80007a6:	b085      	sub	sp, #20
 80007a8:	af00      	add	r7, sp, #0
 80007aa:	6078      	str	r0, [r7, #4]
 80007ac:	2300      	movs	r3, #0
 80007ae:	60fb      	str	r3, [r7, #12]
 80007b0:	4b0e      	ldr	r3, [pc, #56]	; (80007ec <ADC_CommonInit+0x48>)
 80007b2:	685b      	ldr	r3, [r3, #4]
 80007b4:	60fb      	str	r3, [r7, #12]
 80007b6:	68fa      	ldr	r2, [r7, #12]
 80007b8:	4b0d      	ldr	r3, [pc, #52]	; (80007f0 <ADC_CommonInit+0x4c>)
 80007ba:	4013      	ands	r3, r2
 80007bc:	60fb      	str	r3, [r7, #12]
 80007be:	687b      	ldr	r3, [r7, #4]
 80007c0:	681a      	ldr	r2, [r3, #0]
 80007c2:	687b      	ldr	r3, [r7, #4]
 80007c4:	685b      	ldr	r3, [r3, #4]
 80007c6:	431a      	orrs	r2, r3
 80007c8:	687b      	ldr	r3, [r7, #4]
 80007ca:	689b      	ldr	r3, [r3, #8]
 80007cc:	431a      	orrs	r2, r3
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	68db      	ldr	r3, [r3, #12]
 80007d2:	4313      	orrs	r3, r2
 80007d4:	68fa      	ldr	r2, [r7, #12]
 80007d6:	4313      	orrs	r3, r2
 80007d8:	60fb      	str	r3, [r7, #12]
 80007da:	4a04      	ldr	r2, [pc, #16]	; (80007ec <ADC_CommonInit+0x48>)
 80007dc:	68fb      	ldr	r3, [r7, #12]
 80007de:	6053      	str	r3, [r2, #4]
 80007e0:	bf00      	nop
 80007e2:	3714      	adds	r7, #20
 80007e4:	46bd      	mov	sp, r7
 80007e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ea:	4770      	bx	lr
 80007ec:	40012300 	.word	0x40012300
 80007f0:	fffc30e0 	.word	0xfffc30e0

080007f4 <ADC_Cmd>:
 80007f4:	b480      	push	{r7}
 80007f6:	b083      	sub	sp, #12
 80007f8:	af00      	add	r7, sp, #0
 80007fa:	6078      	str	r0, [r7, #4]
 80007fc:	460b      	mov	r3, r1
 80007fe:	70fb      	strb	r3, [r7, #3]
 8000800:	78fb      	ldrb	r3, [r7, #3]
 8000802:	2b00      	cmp	r3, #0
 8000804:	d006      	beq.n	8000814 <ADC_Cmd+0x20>
 8000806:	687b      	ldr	r3, [r7, #4]
 8000808:	689b      	ldr	r3, [r3, #8]
 800080a:	f043 0201 	orr.w	r2, r3, #1
 800080e:	687b      	ldr	r3, [r7, #4]
 8000810:	609a      	str	r2, [r3, #8]
 8000812:	e005      	b.n	8000820 <ADC_Cmd+0x2c>
 8000814:	687b      	ldr	r3, [r7, #4]
 8000816:	689b      	ldr	r3, [r3, #8]
 8000818:	f023 0201 	bic.w	r2, r3, #1
 800081c:	687b      	ldr	r3, [r7, #4]
 800081e:	609a      	str	r2, [r3, #8]
 8000820:	bf00      	nop
 8000822:	370c      	adds	r7, #12
 8000824:	46bd      	mov	sp, r7
 8000826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082a:	4770      	bx	lr

0800082c <ADC_RegularChannelConfig>:
 800082c:	b480      	push	{r7}
 800082e:	b085      	sub	sp, #20
 8000830:	af00      	add	r7, sp, #0
 8000832:	6078      	str	r0, [r7, #4]
 8000834:	4608      	mov	r0, r1
 8000836:	4611      	mov	r1, r2
 8000838:	461a      	mov	r2, r3
 800083a:	4603      	mov	r3, r0
 800083c:	70fb      	strb	r3, [r7, #3]
 800083e:	460b      	mov	r3, r1
 8000840:	70bb      	strb	r3, [r7, #2]
 8000842:	4613      	mov	r3, r2
 8000844:	707b      	strb	r3, [r7, #1]
 8000846:	2300      	movs	r3, #0
 8000848:	60fb      	str	r3, [r7, #12]
 800084a:	2300      	movs	r3, #0
 800084c:	60bb      	str	r3, [r7, #8]
 800084e:	78fb      	ldrb	r3, [r7, #3]
 8000850:	2b09      	cmp	r3, #9
 8000852:	d923      	bls.n	800089c <ADC_RegularChannelConfig+0x70>
 8000854:	687b      	ldr	r3, [r7, #4]
 8000856:	68db      	ldr	r3, [r3, #12]
 8000858:	60fb      	str	r3, [r7, #12]
 800085a:	78fb      	ldrb	r3, [r7, #3]
 800085c:	f1a3 020a 	sub.w	r2, r3, #10
 8000860:	4613      	mov	r3, r2
 8000862:	005b      	lsls	r3, r3, #1
 8000864:	4413      	add	r3, r2
 8000866:	2207      	movs	r2, #7
 8000868:	fa02 f303 	lsl.w	r3, r2, r3
 800086c:	60bb      	str	r3, [r7, #8]
 800086e:	68bb      	ldr	r3, [r7, #8]
 8000870:	43db      	mvns	r3, r3
 8000872:	68fa      	ldr	r2, [r7, #12]
 8000874:	4013      	ands	r3, r2
 8000876:	60fb      	str	r3, [r7, #12]
 8000878:	7879      	ldrb	r1, [r7, #1]
 800087a:	78fb      	ldrb	r3, [r7, #3]
 800087c:	f1a3 020a 	sub.w	r2, r3, #10
 8000880:	4613      	mov	r3, r2
 8000882:	005b      	lsls	r3, r3, #1
 8000884:	4413      	add	r3, r2
 8000886:	fa01 f303 	lsl.w	r3, r1, r3
 800088a:	60bb      	str	r3, [r7, #8]
 800088c:	68fa      	ldr	r2, [r7, #12]
 800088e:	68bb      	ldr	r3, [r7, #8]
 8000890:	4313      	orrs	r3, r2
 8000892:	60fb      	str	r3, [r7, #12]
 8000894:	687b      	ldr	r3, [r7, #4]
 8000896:	68fa      	ldr	r2, [r7, #12]
 8000898:	60da      	str	r2, [r3, #12]
 800089a:	e01e      	b.n	80008da <ADC_RegularChannelConfig+0xae>
 800089c:	687b      	ldr	r3, [r7, #4]
 800089e:	691b      	ldr	r3, [r3, #16]
 80008a0:	60fb      	str	r3, [r7, #12]
 80008a2:	78fa      	ldrb	r2, [r7, #3]
 80008a4:	4613      	mov	r3, r2
 80008a6:	005b      	lsls	r3, r3, #1
 80008a8:	4413      	add	r3, r2
 80008aa:	2207      	movs	r2, #7
 80008ac:	fa02 f303 	lsl.w	r3, r2, r3
 80008b0:	60bb      	str	r3, [r7, #8]
 80008b2:	68bb      	ldr	r3, [r7, #8]
 80008b4:	43db      	mvns	r3, r3
 80008b6:	68fa      	ldr	r2, [r7, #12]
 80008b8:	4013      	ands	r3, r2
 80008ba:	60fb      	str	r3, [r7, #12]
 80008bc:	7879      	ldrb	r1, [r7, #1]
 80008be:	78fa      	ldrb	r2, [r7, #3]
 80008c0:	4613      	mov	r3, r2
 80008c2:	005b      	lsls	r3, r3, #1
 80008c4:	4413      	add	r3, r2
 80008c6:	fa01 f303 	lsl.w	r3, r1, r3
 80008ca:	60bb      	str	r3, [r7, #8]
 80008cc:	68fa      	ldr	r2, [r7, #12]
 80008ce:	68bb      	ldr	r3, [r7, #8]
 80008d0:	4313      	orrs	r3, r2
 80008d2:	60fb      	str	r3, [r7, #12]
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	68fa      	ldr	r2, [r7, #12]
 80008d8:	611a      	str	r2, [r3, #16]
 80008da:	78bb      	ldrb	r3, [r7, #2]
 80008dc:	2b06      	cmp	r3, #6
 80008de:	d821      	bhi.n	8000924 <ADC_RegularChannelConfig+0xf8>
 80008e0:	687b      	ldr	r3, [r7, #4]
 80008e2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80008e4:	60fb      	str	r3, [r7, #12]
 80008e6:	78bb      	ldrb	r3, [r7, #2]
 80008e8:	1e5a      	subs	r2, r3, #1
 80008ea:	4613      	mov	r3, r2
 80008ec:	009b      	lsls	r3, r3, #2
 80008ee:	4413      	add	r3, r2
 80008f0:	221f      	movs	r2, #31
 80008f2:	fa02 f303 	lsl.w	r3, r2, r3
 80008f6:	60bb      	str	r3, [r7, #8]
 80008f8:	68bb      	ldr	r3, [r7, #8]
 80008fa:	43db      	mvns	r3, r3
 80008fc:	68fa      	ldr	r2, [r7, #12]
 80008fe:	4013      	ands	r3, r2
 8000900:	60fb      	str	r3, [r7, #12]
 8000902:	78f9      	ldrb	r1, [r7, #3]
 8000904:	78bb      	ldrb	r3, [r7, #2]
 8000906:	1e5a      	subs	r2, r3, #1
 8000908:	4613      	mov	r3, r2
 800090a:	009b      	lsls	r3, r3, #2
 800090c:	4413      	add	r3, r2
 800090e:	fa01 f303 	lsl.w	r3, r1, r3
 8000912:	60bb      	str	r3, [r7, #8]
 8000914:	68fa      	ldr	r2, [r7, #12]
 8000916:	68bb      	ldr	r3, [r7, #8]
 8000918:	4313      	orrs	r3, r2
 800091a:	60fb      	str	r3, [r7, #12]
 800091c:	687b      	ldr	r3, [r7, #4]
 800091e:	68fa      	ldr	r2, [r7, #12]
 8000920:	635a      	str	r2, [r3, #52]	; 0x34
 8000922:	e047      	b.n	80009b4 <ADC_RegularChannelConfig+0x188>
 8000924:	78bb      	ldrb	r3, [r7, #2]
 8000926:	2b0c      	cmp	r3, #12
 8000928:	d821      	bhi.n	800096e <ADC_RegularChannelConfig+0x142>
 800092a:	687b      	ldr	r3, [r7, #4]
 800092c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800092e:	60fb      	str	r3, [r7, #12]
 8000930:	78bb      	ldrb	r3, [r7, #2]
 8000932:	1fda      	subs	r2, r3, #7
 8000934:	4613      	mov	r3, r2
 8000936:	009b      	lsls	r3, r3, #2
 8000938:	4413      	add	r3, r2
 800093a:	221f      	movs	r2, #31
 800093c:	fa02 f303 	lsl.w	r3, r2, r3
 8000940:	60bb      	str	r3, [r7, #8]
 8000942:	68bb      	ldr	r3, [r7, #8]
 8000944:	43db      	mvns	r3, r3
 8000946:	68fa      	ldr	r2, [r7, #12]
 8000948:	4013      	ands	r3, r2
 800094a:	60fb      	str	r3, [r7, #12]
 800094c:	78f9      	ldrb	r1, [r7, #3]
 800094e:	78bb      	ldrb	r3, [r7, #2]
 8000950:	1fda      	subs	r2, r3, #7
 8000952:	4613      	mov	r3, r2
 8000954:	009b      	lsls	r3, r3, #2
 8000956:	4413      	add	r3, r2
 8000958:	fa01 f303 	lsl.w	r3, r1, r3
 800095c:	60bb      	str	r3, [r7, #8]
 800095e:	68fa      	ldr	r2, [r7, #12]
 8000960:	68bb      	ldr	r3, [r7, #8]
 8000962:	4313      	orrs	r3, r2
 8000964:	60fb      	str	r3, [r7, #12]
 8000966:	687b      	ldr	r3, [r7, #4]
 8000968:	68fa      	ldr	r2, [r7, #12]
 800096a:	631a      	str	r2, [r3, #48]	; 0x30
 800096c:	e022      	b.n	80009b4 <ADC_RegularChannelConfig+0x188>
 800096e:	687b      	ldr	r3, [r7, #4]
 8000970:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8000972:	60fb      	str	r3, [r7, #12]
 8000974:	78bb      	ldrb	r3, [r7, #2]
 8000976:	f1a3 020d 	sub.w	r2, r3, #13
 800097a:	4613      	mov	r3, r2
 800097c:	009b      	lsls	r3, r3, #2
 800097e:	4413      	add	r3, r2
 8000980:	221f      	movs	r2, #31
 8000982:	fa02 f303 	lsl.w	r3, r2, r3
 8000986:	60bb      	str	r3, [r7, #8]
 8000988:	68bb      	ldr	r3, [r7, #8]
 800098a:	43db      	mvns	r3, r3
 800098c:	68fa      	ldr	r2, [r7, #12]
 800098e:	4013      	ands	r3, r2
 8000990:	60fb      	str	r3, [r7, #12]
 8000992:	78f9      	ldrb	r1, [r7, #3]
 8000994:	78bb      	ldrb	r3, [r7, #2]
 8000996:	f1a3 020d 	sub.w	r2, r3, #13
 800099a:	4613      	mov	r3, r2
 800099c:	009b      	lsls	r3, r3, #2
 800099e:	4413      	add	r3, r2
 80009a0:	fa01 f303 	lsl.w	r3, r1, r3
 80009a4:	60bb      	str	r3, [r7, #8]
 80009a6:	68fa      	ldr	r2, [r7, #12]
 80009a8:	68bb      	ldr	r3, [r7, #8]
 80009aa:	4313      	orrs	r3, r2
 80009ac:	60fb      	str	r3, [r7, #12]
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	68fa      	ldr	r2, [r7, #12]
 80009b2:	62da      	str	r2, [r3, #44]	; 0x2c
 80009b4:	bf00      	nop
 80009b6:	3714      	adds	r7, #20
 80009b8:	46bd      	mov	sp, r7
 80009ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009be:	4770      	bx	lr

080009c0 <ADC_SoftwareStartConv>:
 80009c0:	b480      	push	{r7}
 80009c2:	b083      	sub	sp, #12
 80009c4:	af00      	add	r7, sp, #0
 80009c6:	6078      	str	r0, [r7, #4]
 80009c8:	687b      	ldr	r3, [r7, #4]
 80009ca:	689b      	ldr	r3, [r3, #8]
 80009cc:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 80009d0:	687b      	ldr	r3, [r7, #4]
 80009d2:	609a      	str	r2, [r3, #8]
 80009d4:	bf00      	nop
 80009d6:	370c      	adds	r7, #12
 80009d8:	46bd      	mov	sp, r7
 80009da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009de:	4770      	bx	lr

080009e0 <ADC_EOCOnEachRegularChannelCmd>:
 80009e0:	b480      	push	{r7}
 80009e2:	b083      	sub	sp, #12
 80009e4:	af00      	add	r7, sp, #0
 80009e6:	6078      	str	r0, [r7, #4]
 80009e8:	460b      	mov	r3, r1
 80009ea:	70fb      	strb	r3, [r7, #3]
 80009ec:	78fb      	ldrb	r3, [r7, #3]
 80009ee:	2b00      	cmp	r3, #0
 80009f0:	d006      	beq.n	8000a00 <ADC_EOCOnEachRegularChannelCmd+0x20>
 80009f2:	687b      	ldr	r3, [r7, #4]
 80009f4:	689b      	ldr	r3, [r3, #8]
 80009f6:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80009fa:	687b      	ldr	r3, [r7, #4]
 80009fc:	609a      	str	r2, [r3, #8]
 80009fe:	e005      	b.n	8000a0c <ADC_EOCOnEachRegularChannelCmd+0x2c>
 8000a00:	687b      	ldr	r3, [r7, #4]
 8000a02:	689b      	ldr	r3, [r3, #8]
 8000a04:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8000a08:	687b      	ldr	r3, [r7, #4]
 8000a0a:	609a      	str	r2, [r3, #8]
 8000a0c:	bf00      	nop
 8000a0e:	370c      	adds	r7, #12
 8000a10:	46bd      	mov	sp, r7
 8000a12:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a16:	4770      	bx	lr

08000a18 <ADC_GetConversionValue>:
 8000a18:	b480      	push	{r7}
 8000a1a:	b083      	sub	sp, #12
 8000a1c:	af00      	add	r7, sp, #0
 8000a1e:	6078      	str	r0, [r7, #4]
 8000a20:	687b      	ldr	r3, [r7, #4]
 8000a22:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8000a24:	b29b      	uxth	r3, r3
 8000a26:	4618      	mov	r0, r3
 8000a28:	370c      	adds	r7, #12
 8000a2a:	46bd      	mov	sp, r7
 8000a2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a30:	4770      	bx	lr

08000a32 <GPIO_Init>:
 8000a32:	b480      	push	{r7}
 8000a34:	b087      	sub	sp, #28
 8000a36:	af00      	add	r7, sp, #0
 8000a38:	6078      	str	r0, [r7, #4]
 8000a3a:	6039      	str	r1, [r7, #0]
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	617b      	str	r3, [r7, #20]
 8000a40:	2300      	movs	r3, #0
 8000a42:	613b      	str	r3, [r7, #16]
 8000a44:	2300      	movs	r3, #0
 8000a46:	60fb      	str	r3, [r7, #12]
 8000a48:	2300      	movs	r3, #0
 8000a4a:	617b      	str	r3, [r7, #20]
 8000a4c:	e076      	b.n	8000b3c <GPIO_Init+0x10a>
 8000a4e:	2201      	movs	r2, #1
 8000a50:	697b      	ldr	r3, [r7, #20]
 8000a52:	fa02 f303 	lsl.w	r3, r2, r3
 8000a56:	613b      	str	r3, [r7, #16]
 8000a58:	683b      	ldr	r3, [r7, #0]
 8000a5a:	681b      	ldr	r3, [r3, #0]
 8000a5c:	693a      	ldr	r2, [r7, #16]
 8000a5e:	4013      	ands	r3, r2
 8000a60:	60fb      	str	r3, [r7, #12]
 8000a62:	68fa      	ldr	r2, [r7, #12]
 8000a64:	693b      	ldr	r3, [r7, #16]
 8000a66:	429a      	cmp	r2, r3
 8000a68:	d165      	bne.n	8000b36 <GPIO_Init+0x104>
 8000a6a:	687b      	ldr	r3, [r7, #4]
 8000a6c:	681a      	ldr	r2, [r3, #0]
 8000a6e:	697b      	ldr	r3, [r7, #20]
 8000a70:	005b      	lsls	r3, r3, #1
 8000a72:	2103      	movs	r1, #3
 8000a74:	fa01 f303 	lsl.w	r3, r1, r3
 8000a78:	43db      	mvns	r3, r3
 8000a7a:	401a      	ands	r2, r3
 8000a7c:	687b      	ldr	r3, [r7, #4]
 8000a7e:	601a      	str	r2, [r3, #0]
 8000a80:	687b      	ldr	r3, [r7, #4]
 8000a82:	681a      	ldr	r2, [r3, #0]
 8000a84:	683b      	ldr	r3, [r7, #0]
 8000a86:	791b      	ldrb	r3, [r3, #4]
 8000a88:	4619      	mov	r1, r3
 8000a8a:	697b      	ldr	r3, [r7, #20]
 8000a8c:	005b      	lsls	r3, r3, #1
 8000a8e:	fa01 f303 	lsl.w	r3, r1, r3
 8000a92:	431a      	orrs	r2, r3
 8000a94:	687b      	ldr	r3, [r7, #4]
 8000a96:	601a      	str	r2, [r3, #0]
 8000a98:	683b      	ldr	r3, [r7, #0]
 8000a9a:	791b      	ldrb	r3, [r3, #4]
 8000a9c:	2b01      	cmp	r3, #1
 8000a9e:	d003      	beq.n	8000aa8 <GPIO_Init+0x76>
 8000aa0:	683b      	ldr	r3, [r7, #0]
 8000aa2:	791b      	ldrb	r3, [r3, #4]
 8000aa4:	2b02      	cmp	r3, #2
 8000aa6:	d12e      	bne.n	8000b06 <GPIO_Init+0xd4>
 8000aa8:	687b      	ldr	r3, [r7, #4]
 8000aaa:	689a      	ldr	r2, [r3, #8]
 8000aac:	697b      	ldr	r3, [r7, #20]
 8000aae:	005b      	lsls	r3, r3, #1
 8000ab0:	2103      	movs	r1, #3
 8000ab2:	fa01 f303 	lsl.w	r3, r1, r3
 8000ab6:	43db      	mvns	r3, r3
 8000ab8:	401a      	ands	r2, r3
 8000aba:	687b      	ldr	r3, [r7, #4]
 8000abc:	609a      	str	r2, [r3, #8]
 8000abe:	687b      	ldr	r3, [r7, #4]
 8000ac0:	689a      	ldr	r2, [r3, #8]
 8000ac2:	683b      	ldr	r3, [r7, #0]
 8000ac4:	795b      	ldrb	r3, [r3, #5]
 8000ac6:	4619      	mov	r1, r3
 8000ac8:	697b      	ldr	r3, [r7, #20]
 8000aca:	005b      	lsls	r3, r3, #1
 8000acc:	fa01 f303 	lsl.w	r3, r1, r3
 8000ad0:	431a      	orrs	r2, r3
 8000ad2:	687b      	ldr	r3, [r7, #4]
 8000ad4:	609a      	str	r2, [r3, #8]
 8000ad6:	687b      	ldr	r3, [r7, #4]
 8000ad8:	685a      	ldr	r2, [r3, #4]
 8000ada:	697b      	ldr	r3, [r7, #20]
 8000adc:	b29b      	uxth	r3, r3
 8000ade:	4619      	mov	r1, r3
 8000ae0:	2301      	movs	r3, #1
 8000ae2:	408b      	lsls	r3, r1
 8000ae4:	43db      	mvns	r3, r3
 8000ae6:	401a      	ands	r2, r3
 8000ae8:	687b      	ldr	r3, [r7, #4]
 8000aea:	605a      	str	r2, [r3, #4]
 8000aec:	687b      	ldr	r3, [r7, #4]
 8000aee:	685b      	ldr	r3, [r3, #4]
 8000af0:	683a      	ldr	r2, [r7, #0]
 8000af2:	7992      	ldrb	r2, [r2, #6]
 8000af4:	4611      	mov	r1, r2
 8000af6:	697a      	ldr	r2, [r7, #20]
 8000af8:	b292      	uxth	r2, r2
 8000afa:	fa01 f202 	lsl.w	r2, r1, r2
 8000afe:	b292      	uxth	r2, r2
 8000b00:	431a      	orrs	r2, r3
 8000b02:	687b      	ldr	r3, [r7, #4]
 8000b04:	605a      	str	r2, [r3, #4]
 8000b06:	687b      	ldr	r3, [r7, #4]
 8000b08:	68da      	ldr	r2, [r3, #12]
 8000b0a:	697b      	ldr	r3, [r7, #20]
 8000b0c:	b29b      	uxth	r3, r3
 8000b0e:	005b      	lsls	r3, r3, #1
 8000b10:	2103      	movs	r1, #3
 8000b12:	fa01 f303 	lsl.w	r3, r1, r3
 8000b16:	43db      	mvns	r3, r3
 8000b18:	401a      	ands	r2, r3
 8000b1a:	687b      	ldr	r3, [r7, #4]
 8000b1c:	60da      	str	r2, [r3, #12]
 8000b1e:	687b      	ldr	r3, [r7, #4]
 8000b20:	68da      	ldr	r2, [r3, #12]
 8000b22:	683b      	ldr	r3, [r7, #0]
 8000b24:	79db      	ldrb	r3, [r3, #7]
 8000b26:	4619      	mov	r1, r3
 8000b28:	697b      	ldr	r3, [r7, #20]
 8000b2a:	005b      	lsls	r3, r3, #1
 8000b2c:	fa01 f303 	lsl.w	r3, r1, r3
 8000b30:	431a      	orrs	r2, r3
 8000b32:	687b      	ldr	r3, [r7, #4]
 8000b34:	60da      	str	r2, [r3, #12]
 8000b36:	697b      	ldr	r3, [r7, #20]
 8000b38:	3301      	adds	r3, #1
 8000b3a:	617b      	str	r3, [r7, #20]
 8000b3c:	697b      	ldr	r3, [r7, #20]
 8000b3e:	2b0f      	cmp	r3, #15
 8000b40:	d985      	bls.n	8000a4e <GPIO_Init+0x1c>
 8000b42:	bf00      	nop
 8000b44:	371c      	adds	r7, #28
 8000b46:	46bd      	mov	sp, r7
 8000b48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b4c:	4770      	bx	lr

08000b4e <GPIO_PinAFConfig>:
 8000b4e:	b480      	push	{r7}
 8000b50:	b085      	sub	sp, #20
 8000b52:	af00      	add	r7, sp, #0
 8000b54:	6078      	str	r0, [r7, #4]
 8000b56:	460b      	mov	r3, r1
 8000b58:	807b      	strh	r3, [r7, #2]
 8000b5a:	4613      	mov	r3, r2
 8000b5c:	707b      	strb	r3, [r7, #1]
 8000b5e:	2300      	movs	r3, #0
 8000b60:	60fb      	str	r3, [r7, #12]
 8000b62:	2300      	movs	r3, #0
 8000b64:	60bb      	str	r3, [r7, #8]
 8000b66:	787a      	ldrb	r2, [r7, #1]
 8000b68:	887b      	ldrh	r3, [r7, #2]
 8000b6a:	f003 0307 	and.w	r3, r3, #7
 8000b6e:	009b      	lsls	r3, r3, #2
 8000b70:	fa02 f303 	lsl.w	r3, r2, r3
 8000b74:	60fb      	str	r3, [r7, #12]
 8000b76:	887b      	ldrh	r3, [r7, #2]
 8000b78:	08db      	lsrs	r3, r3, #3
 8000b7a:	b29b      	uxth	r3, r3
 8000b7c:	461a      	mov	r2, r3
 8000b7e:	687b      	ldr	r3, [r7, #4]
 8000b80:	3208      	adds	r2, #8
 8000b82:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000b86:	887b      	ldrh	r3, [r7, #2]
 8000b88:	f003 0307 	and.w	r3, r3, #7
 8000b8c:	009b      	lsls	r3, r3, #2
 8000b8e:	210f      	movs	r1, #15
 8000b90:	fa01 f303 	lsl.w	r3, r1, r3
 8000b94:	43db      	mvns	r3, r3
 8000b96:	8879      	ldrh	r1, [r7, #2]
 8000b98:	08c9      	lsrs	r1, r1, #3
 8000b9a:	b289      	uxth	r1, r1
 8000b9c:	4608      	mov	r0, r1
 8000b9e:	ea02 0103 	and.w	r1, r2, r3
 8000ba2:	687b      	ldr	r3, [r7, #4]
 8000ba4:	f100 0208 	add.w	r2, r0, #8
 8000ba8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000bac:	887b      	ldrh	r3, [r7, #2]
 8000bae:	08db      	lsrs	r3, r3, #3
 8000bb0:	b29b      	uxth	r3, r3
 8000bb2:	461a      	mov	r2, r3
 8000bb4:	687b      	ldr	r3, [r7, #4]
 8000bb6:	3208      	adds	r2, #8
 8000bb8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000bbc:	68fa      	ldr	r2, [r7, #12]
 8000bbe:	4313      	orrs	r3, r2
 8000bc0:	60bb      	str	r3, [r7, #8]
 8000bc2:	887b      	ldrh	r3, [r7, #2]
 8000bc4:	08db      	lsrs	r3, r3, #3
 8000bc6:	b29b      	uxth	r3, r3
 8000bc8:	461a      	mov	r2, r3
 8000bca:	687b      	ldr	r3, [r7, #4]
 8000bcc:	3208      	adds	r2, #8
 8000bce:	68b9      	ldr	r1, [r7, #8]
 8000bd0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000bd4:	bf00      	nop
 8000bd6:	3714      	adds	r7, #20
 8000bd8:	46bd      	mov	sp, r7
 8000bda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bde:	4770      	bx	lr

08000be0 <RCC_GetClocksFreq>:
 8000be0:	b480      	push	{r7}
 8000be2:	b089      	sub	sp, #36	; 0x24
 8000be4:	af00      	add	r7, sp, #0
 8000be6:	6078      	str	r0, [r7, #4]
 8000be8:	2300      	movs	r3, #0
 8000bea:	61bb      	str	r3, [r7, #24]
 8000bec:	2300      	movs	r3, #0
 8000bee:	617b      	str	r3, [r7, #20]
 8000bf0:	2300      	movs	r3, #0
 8000bf2:	61fb      	str	r3, [r7, #28]
 8000bf4:	2302      	movs	r3, #2
 8000bf6:	613b      	str	r3, [r7, #16]
 8000bf8:	2300      	movs	r3, #0
 8000bfa:	60fb      	str	r3, [r7, #12]
 8000bfc:	2302      	movs	r3, #2
 8000bfe:	60bb      	str	r3, [r7, #8]
 8000c00:	4b47      	ldr	r3, [pc, #284]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c02:	689b      	ldr	r3, [r3, #8]
 8000c04:	f003 030c 	and.w	r3, r3, #12
 8000c08:	61bb      	str	r3, [r7, #24]
 8000c0a:	69bb      	ldr	r3, [r7, #24]
 8000c0c:	2b04      	cmp	r3, #4
 8000c0e:	d007      	beq.n	8000c20 <RCC_GetClocksFreq+0x40>
 8000c10:	2b08      	cmp	r3, #8
 8000c12:	d009      	beq.n	8000c28 <RCC_GetClocksFreq+0x48>
 8000c14:	2b00      	cmp	r3, #0
 8000c16:	d13d      	bne.n	8000c94 <RCC_GetClocksFreq+0xb4>
 8000c18:	687b      	ldr	r3, [r7, #4]
 8000c1a:	4a42      	ldr	r2, [pc, #264]	; (8000d24 <RCC_GetClocksFreq+0x144>)
 8000c1c:	601a      	str	r2, [r3, #0]
 8000c1e:	e03d      	b.n	8000c9c <RCC_GetClocksFreq+0xbc>
 8000c20:	687b      	ldr	r3, [r7, #4]
 8000c22:	4a41      	ldr	r2, [pc, #260]	; (8000d28 <RCC_GetClocksFreq+0x148>)
 8000c24:	601a      	str	r2, [r3, #0]
 8000c26:	e039      	b.n	8000c9c <RCC_GetClocksFreq+0xbc>
 8000c28:	4b3d      	ldr	r3, [pc, #244]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c2a:	685b      	ldr	r3, [r3, #4]
 8000c2c:	0d9b      	lsrs	r3, r3, #22
 8000c2e:	f003 0301 	and.w	r3, r3, #1
 8000c32:	60fb      	str	r3, [r7, #12]
 8000c34:	4b3a      	ldr	r3, [pc, #232]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c36:	685b      	ldr	r3, [r3, #4]
 8000c38:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000c3c:	60bb      	str	r3, [r7, #8]
 8000c3e:	68fb      	ldr	r3, [r7, #12]
 8000c40:	2b00      	cmp	r3, #0
 8000c42:	d00c      	beq.n	8000c5e <RCC_GetClocksFreq+0x7e>
 8000c44:	4a38      	ldr	r2, [pc, #224]	; (8000d28 <RCC_GetClocksFreq+0x148>)
 8000c46:	68bb      	ldr	r3, [r7, #8]
 8000c48:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c4c:	4a34      	ldr	r2, [pc, #208]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c4e:	6852      	ldr	r2, [r2, #4]
 8000c50:	0992      	lsrs	r2, r2, #6
 8000c52:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000c56:	fb02 f303 	mul.w	r3, r2, r3
 8000c5a:	61fb      	str	r3, [r7, #28]
 8000c5c:	e00b      	b.n	8000c76 <RCC_GetClocksFreq+0x96>
 8000c5e:	4a31      	ldr	r2, [pc, #196]	; (8000d24 <RCC_GetClocksFreq+0x144>)
 8000c60:	68bb      	ldr	r3, [r7, #8]
 8000c62:	fbb2 f3f3 	udiv	r3, r2, r3
 8000c66:	4a2e      	ldr	r2, [pc, #184]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c68:	6852      	ldr	r2, [r2, #4]
 8000c6a:	0992      	lsrs	r2, r2, #6
 8000c6c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000c70:	fb02 f303 	mul.w	r3, r2, r3
 8000c74:	61fb      	str	r3, [r7, #28]
 8000c76:	4b2a      	ldr	r3, [pc, #168]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c78:	685b      	ldr	r3, [r3, #4]
 8000c7a:	0c1b      	lsrs	r3, r3, #16
 8000c7c:	f003 0303 	and.w	r3, r3, #3
 8000c80:	3301      	adds	r3, #1
 8000c82:	005b      	lsls	r3, r3, #1
 8000c84:	613b      	str	r3, [r7, #16]
 8000c86:	69fa      	ldr	r2, [r7, #28]
 8000c88:	693b      	ldr	r3, [r7, #16]
 8000c8a:	fbb2 f2f3 	udiv	r2, r2, r3
 8000c8e:	687b      	ldr	r3, [r7, #4]
 8000c90:	601a      	str	r2, [r3, #0]
 8000c92:	e003      	b.n	8000c9c <RCC_GetClocksFreq+0xbc>
 8000c94:	687b      	ldr	r3, [r7, #4]
 8000c96:	4a23      	ldr	r2, [pc, #140]	; (8000d24 <RCC_GetClocksFreq+0x144>)
 8000c98:	601a      	str	r2, [r3, #0]
 8000c9a:	bf00      	nop
 8000c9c:	4b20      	ldr	r3, [pc, #128]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000c9e:	689b      	ldr	r3, [r3, #8]
 8000ca0:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000ca4:	61bb      	str	r3, [r7, #24]
 8000ca6:	69bb      	ldr	r3, [r7, #24]
 8000ca8:	091b      	lsrs	r3, r3, #4
 8000caa:	61bb      	str	r3, [r7, #24]
 8000cac:	4a1f      	ldr	r2, [pc, #124]	; (8000d2c <RCC_GetClocksFreq+0x14c>)
 8000cae:	69bb      	ldr	r3, [r7, #24]
 8000cb0:	4413      	add	r3, r2
 8000cb2:	781b      	ldrb	r3, [r3, #0]
 8000cb4:	b2db      	uxtb	r3, r3
 8000cb6:	617b      	str	r3, [r7, #20]
 8000cb8:	687b      	ldr	r3, [r7, #4]
 8000cba:	681a      	ldr	r2, [r3, #0]
 8000cbc:	697b      	ldr	r3, [r7, #20]
 8000cbe:	40da      	lsrs	r2, r3
 8000cc0:	687b      	ldr	r3, [r7, #4]
 8000cc2:	605a      	str	r2, [r3, #4]
 8000cc4:	4b16      	ldr	r3, [pc, #88]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000cc6:	689b      	ldr	r3, [r3, #8]
 8000cc8:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8000ccc:	61bb      	str	r3, [r7, #24]
 8000cce:	69bb      	ldr	r3, [r7, #24]
 8000cd0:	0a9b      	lsrs	r3, r3, #10
 8000cd2:	61bb      	str	r3, [r7, #24]
 8000cd4:	4a15      	ldr	r2, [pc, #84]	; (8000d2c <RCC_GetClocksFreq+0x14c>)
 8000cd6:	69bb      	ldr	r3, [r7, #24]
 8000cd8:	4413      	add	r3, r2
 8000cda:	781b      	ldrb	r3, [r3, #0]
 8000cdc:	b2db      	uxtb	r3, r3
 8000cde:	617b      	str	r3, [r7, #20]
 8000ce0:	687b      	ldr	r3, [r7, #4]
 8000ce2:	685a      	ldr	r2, [r3, #4]
 8000ce4:	697b      	ldr	r3, [r7, #20]
 8000ce6:	40da      	lsrs	r2, r3
 8000ce8:	687b      	ldr	r3, [r7, #4]
 8000cea:	609a      	str	r2, [r3, #8]
 8000cec:	4b0c      	ldr	r3, [pc, #48]	; (8000d20 <RCC_GetClocksFreq+0x140>)
 8000cee:	689b      	ldr	r3, [r3, #8]
 8000cf0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000cf4:	61bb      	str	r3, [r7, #24]
 8000cf6:	69bb      	ldr	r3, [r7, #24]
 8000cf8:	0b5b      	lsrs	r3, r3, #13
 8000cfa:	61bb      	str	r3, [r7, #24]
 8000cfc:	4a0b      	ldr	r2, [pc, #44]	; (8000d2c <RCC_GetClocksFreq+0x14c>)
 8000cfe:	69bb      	ldr	r3, [r7, #24]
 8000d00:	4413      	add	r3, r2
 8000d02:	781b      	ldrb	r3, [r3, #0]
 8000d04:	b2db      	uxtb	r3, r3
 8000d06:	617b      	str	r3, [r7, #20]
 8000d08:	687b      	ldr	r3, [r7, #4]
 8000d0a:	685a      	ldr	r2, [r3, #4]
 8000d0c:	697b      	ldr	r3, [r7, #20]
 8000d0e:	40da      	lsrs	r2, r3
 8000d10:	687b      	ldr	r3, [r7, #4]
 8000d12:	60da      	str	r2, [r3, #12]
 8000d14:	bf00      	nop
 8000d16:	3724      	adds	r7, #36	; 0x24
 8000d18:	46bd      	mov	sp, r7
 8000d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d1e:	4770      	bx	lr
 8000d20:	40023800 	.word	0x40023800
 8000d24:	00f42400 	.word	0x00f42400
 8000d28:	017d7840 	.word	0x017d7840
 8000d2c:	20000014 	.word	0x20000014

08000d30 <RCC_AHB1PeriphClockCmd>:
 8000d30:	b480      	push	{r7}
 8000d32:	b083      	sub	sp, #12
 8000d34:	af00      	add	r7, sp, #0
 8000d36:	6078      	str	r0, [r7, #4]
 8000d38:	460b      	mov	r3, r1
 8000d3a:	70fb      	strb	r3, [r7, #3]
 8000d3c:	78fb      	ldrb	r3, [r7, #3]
 8000d3e:	2b00      	cmp	r3, #0
 8000d40:	d006      	beq.n	8000d50 <RCC_AHB1PeriphClockCmd+0x20>
 8000d42:	4b0a      	ldr	r3, [pc, #40]	; (8000d6c <RCC_AHB1PeriphClockCmd+0x3c>)
 8000d44:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d46:	4909      	ldr	r1, [pc, #36]	; (8000d6c <RCC_AHB1PeriphClockCmd+0x3c>)
 8000d48:	687b      	ldr	r3, [r7, #4]
 8000d4a:	4313      	orrs	r3, r2
 8000d4c:	630b      	str	r3, [r1, #48]	; 0x30
 8000d4e:	e006      	b.n	8000d5e <RCC_AHB1PeriphClockCmd+0x2e>
 8000d50:	4b06      	ldr	r3, [pc, #24]	; (8000d6c <RCC_AHB1PeriphClockCmd+0x3c>)
 8000d52:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d54:	687b      	ldr	r3, [r7, #4]
 8000d56:	43db      	mvns	r3, r3
 8000d58:	4904      	ldr	r1, [pc, #16]	; (8000d6c <RCC_AHB1PeriphClockCmd+0x3c>)
 8000d5a:	4013      	ands	r3, r2
 8000d5c:	630b      	str	r3, [r1, #48]	; 0x30
 8000d5e:	bf00      	nop
 8000d60:	370c      	adds	r7, #12
 8000d62:	46bd      	mov	sp, r7
 8000d64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d68:	4770      	bx	lr
 8000d6a:	bf00      	nop
 8000d6c:	40023800 	.word	0x40023800

08000d70 <RCC_APB1PeriphClockCmd>:
 8000d70:	b480      	push	{r7}
 8000d72:	b083      	sub	sp, #12
 8000d74:	af00      	add	r7, sp, #0
 8000d76:	6078      	str	r0, [r7, #4]
 8000d78:	460b      	mov	r3, r1
 8000d7a:	70fb      	strb	r3, [r7, #3]
 8000d7c:	78fb      	ldrb	r3, [r7, #3]
 8000d7e:	2b00      	cmp	r3, #0
 8000d80:	d006      	beq.n	8000d90 <RCC_APB1PeriphClockCmd+0x20>
 8000d82:	4b0a      	ldr	r3, [pc, #40]	; (8000dac <RCC_APB1PeriphClockCmd+0x3c>)
 8000d84:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000d86:	4909      	ldr	r1, [pc, #36]	; (8000dac <RCC_APB1PeriphClockCmd+0x3c>)
 8000d88:	687b      	ldr	r3, [r7, #4]
 8000d8a:	4313      	orrs	r3, r2
 8000d8c:	640b      	str	r3, [r1, #64]	; 0x40
 8000d8e:	e006      	b.n	8000d9e <RCC_APB1PeriphClockCmd+0x2e>
 8000d90:	4b06      	ldr	r3, [pc, #24]	; (8000dac <RCC_APB1PeriphClockCmd+0x3c>)
 8000d92:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000d94:	687b      	ldr	r3, [r7, #4]
 8000d96:	43db      	mvns	r3, r3
 8000d98:	4904      	ldr	r1, [pc, #16]	; (8000dac <RCC_APB1PeriphClockCmd+0x3c>)
 8000d9a:	4013      	ands	r3, r2
 8000d9c:	640b      	str	r3, [r1, #64]	; 0x40
 8000d9e:	bf00      	nop
 8000da0:	370c      	adds	r7, #12
 8000da2:	46bd      	mov	sp, r7
 8000da4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000da8:	4770      	bx	lr
 8000daa:	bf00      	nop
 8000dac:	40023800 	.word	0x40023800

08000db0 <RCC_APB2PeriphClockCmd>:
 8000db0:	b480      	push	{r7}
 8000db2:	b083      	sub	sp, #12
 8000db4:	af00      	add	r7, sp, #0
 8000db6:	6078      	str	r0, [r7, #4]
 8000db8:	460b      	mov	r3, r1
 8000dba:	70fb      	strb	r3, [r7, #3]
 8000dbc:	78fb      	ldrb	r3, [r7, #3]
 8000dbe:	2b00      	cmp	r3, #0
 8000dc0:	d006      	beq.n	8000dd0 <RCC_APB2PeriphClockCmd+0x20>
 8000dc2:	4b0a      	ldr	r3, [pc, #40]	; (8000dec <RCC_APB2PeriphClockCmd+0x3c>)
 8000dc4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000dc6:	4909      	ldr	r1, [pc, #36]	; (8000dec <RCC_APB2PeriphClockCmd+0x3c>)
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	4313      	orrs	r3, r2
 8000dcc:	644b      	str	r3, [r1, #68]	; 0x44
 8000dce:	e006      	b.n	8000dde <RCC_APB2PeriphClockCmd+0x2e>
 8000dd0:	4b06      	ldr	r3, [pc, #24]	; (8000dec <RCC_APB2PeriphClockCmd+0x3c>)
 8000dd2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	43db      	mvns	r3, r3
 8000dd8:	4904      	ldr	r1, [pc, #16]	; (8000dec <RCC_APB2PeriphClockCmd+0x3c>)
 8000dda:	4013      	ands	r3, r2
 8000ddc:	644b      	str	r3, [r1, #68]	; 0x44
 8000dde:	bf00      	nop
 8000de0:	370c      	adds	r7, #12
 8000de2:	46bd      	mov	sp, r7
 8000de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000de8:	4770      	bx	lr
 8000dea:	bf00      	nop
 8000dec:	40023800 	.word	0x40023800

08000df0 <RCC_APB2PeriphResetCmd>:
 8000df0:	b480      	push	{r7}
 8000df2:	b083      	sub	sp, #12
 8000df4:	af00      	add	r7, sp, #0
 8000df6:	6078      	str	r0, [r7, #4]
 8000df8:	460b      	mov	r3, r1
 8000dfa:	70fb      	strb	r3, [r7, #3]
 8000dfc:	78fb      	ldrb	r3, [r7, #3]
 8000dfe:	2b00      	cmp	r3, #0
 8000e00:	d006      	beq.n	8000e10 <RCC_APB2PeriphResetCmd+0x20>
 8000e02:	4b0a      	ldr	r3, [pc, #40]	; (8000e2c <RCC_APB2PeriphResetCmd+0x3c>)
 8000e04:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000e06:	4909      	ldr	r1, [pc, #36]	; (8000e2c <RCC_APB2PeriphResetCmd+0x3c>)
 8000e08:	687b      	ldr	r3, [r7, #4]
 8000e0a:	4313      	orrs	r3, r2
 8000e0c:	624b      	str	r3, [r1, #36]	; 0x24
 8000e0e:	e006      	b.n	8000e1e <RCC_APB2PeriphResetCmd+0x2e>
 8000e10:	4b06      	ldr	r3, [pc, #24]	; (8000e2c <RCC_APB2PeriphResetCmd+0x3c>)
 8000e12:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8000e14:	687b      	ldr	r3, [r7, #4]
 8000e16:	43db      	mvns	r3, r3
 8000e18:	4904      	ldr	r1, [pc, #16]	; (8000e2c <RCC_APB2PeriphResetCmd+0x3c>)
 8000e1a:	4013      	ands	r3, r2
 8000e1c:	624b      	str	r3, [r1, #36]	; 0x24
 8000e1e:	bf00      	nop
 8000e20:	370c      	adds	r7, #12
 8000e22:	46bd      	mov	sp, r7
 8000e24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e28:	4770      	bx	lr
 8000e2a:	bf00      	nop
 8000e2c:	40023800 	.word	0x40023800

08000e30 <TIM_TimeBaseInit>:
 8000e30:	b480      	push	{r7}
 8000e32:	b085      	sub	sp, #20
 8000e34:	af00      	add	r7, sp, #0
 8000e36:	6078      	str	r0, [r7, #4]
 8000e38:	6039      	str	r1, [r7, #0]
 8000e3a:	2300      	movs	r3, #0
 8000e3c:	81fb      	strh	r3, [r7, #14]
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	881b      	ldrh	r3, [r3, #0]
 8000e42:	81fb      	strh	r3, [r7, #14]
 8000e44:	687b      	ldr	r3, [r7, #4]
 8000e46:	4a29      	ldr	r2, [pc, #164]	; (8000eec <TIM_TimeBaseInit+0xbc>)
 8000e48:	4293      	cmp	r3, r2
 8000e4a:	d013      	beq.n	8000e74 <TIM_TimeBaseInit+0x44>
 8000e4c:	687b      	ldr	r3, [r7, #4]
 8000e4e:	4a28      	ldr	r2, [pc, #160]	; (8000ef0 <TIM_TimeBaseInit+0xc0>)
 8000e50:	4293      	cmp	r3, r2
 8000e52:	d00f      	beq.n	8000e74 <TIM_TimeBaseInit+0x44>
 8000e54:	687b      	ldr	r3, [r7, #4]
 8000e56:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8000e5a:	d00b      	beq.n	8000e74 <TIM_TimeBaseInit+0x44>
 8000e5c:	687b      	ldr	r3, [r7, #4]
 8000e5e:	4a25      	ldr	r2, [pc, #148]	; (8000ef4 <TIM_TimeBaseInit+0xc4>)
 8000e60:	4293      	cmp	r3, r2
 8000e62:	d007      	beq.n	8000e74 <TIM_TimeBaseInit+0x44>
 8000e64:	687b      	ldr	r3, [r7, #4]
 8000e66:	4a24      	ldr	r2, [pc, #144]	; (8000ef8 <TIM_TimeBaseInit+0xc8>)
 8000e68:	4293      	cmp	r3, r2
 8000e6a:	d003      	beq.n	8000e74 <TIM_TimeBaseInit+0x44>
 8000e6c:	687b      	ldr	r3, [r7, #4]
 8000e6e:	4a23      	ldr	r2, [pc, #140]	; (8000efc <TIM_TimeBaseInit+0xcc>)
 8000e70:	4293      	cmp	r3, r2
 8000e72:	d108      	bne.n	8000e86 <TIM_TimeBaseInit+0x56>
 8000e74:	89fb      	ldrh	r3, [r7, #14]
 8000e76:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8000e7a:	81fb      	strh	r3, [r7, #14]
 8000e7c:	683b      	ldr	r3, [r7, #0]
 8000e7e:	885a      	ldrh	r2, [r3, #2]
 8000e80:	89fb      	ldrh	r3, [r7, #14]
 8000e82:	4313      	orrs	r3, r2
 8000e84:	81fb      	strh	r3, [r7, #14]
 8000e86:	687b      	ldr	r3, [r7, #4]
 8000e88:	4a1d      	ldr	r2, [pc, #116]	; (8000f00 <TIM_TimeBaseInit+0xd0>)
 8000e8a:	4293      	cmp	r3, r2
 8000e8c:	d00c      	beq.n	8000ea8 <TIM_TimeBaseInit+0x78>
 8000e8e:	687b      	ldr	r3, [r7, #4]
 8000e90:	4a1c      	ldr	r2, [pc, #112]	; (8000f04 <TIM_TimeBaseInit+0xd4>)
 8000e92:	4293      	cmp	r3, r2
 8000e94:	d008      	beq.n	8000ea8 <TIM_TimeBaseInit+0x78>
 8000e96:	89fb      	ldrh	r3, [r7, #14]
 8000e98:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000e9c:	81fb      	strh	r3, [r7, #14]
 8000e9e:	683b      	ldr	r3, [r7, #0]
 8000ea0:	891a      	ldrh	r2, [r3, #8]
 8000ea2:	89fb      	ldrh	r3, [r7, #14]
 8000ea4:	4313      	orrs	r3, r2
 8000ea6:	81fb      	strh	r3, [r7, #14]
 8000ea8:	687b      	ldr	r3, [r7, #4]
 8000eaa:	89fa      	ldrh	r2, [r7, #14]
 8000eac:	801a      	strh	r2, [r3, #0]
 8000eae:	683b      	ldr	r3, [r7, #0]
 8000eb0:	685a      	ldr	r2, [r3, #4]
 8000eb2:	687b      	ldr	r3, [r7, #4]
 8000eb4:	62da      	str	r2, [r3, #44]	; 0x2c
 8000eb6:	683b      	ldr	r3, [r7, #0]
 8000eb8:	881a      	ldrh	r2, [r3, #0]
 8000eba:	687b      	ldr	r3, [r7, #4]
 8000ebc:	851a      	strh	r2, [r3, #40]	; 0x28
 8000ebe:	687b      	ldr	r3, [r7, #4]
 8000ec0:	4a0a      	ldr	r2, [pc, #40]	; (8000eec <TIM_TimeBaseInit+0xbc>)
 8000ec2:	4293      	cmp	r3, r2
 8000ec4:	d003      	beq.n	8000ece <TIM_TimeBaseInit+0x9e>
 8000ec6:	687b      	ldr	r3, [r7, #4]
 8000ec8:	4a09      	ldr	r2, [pc, #36]	; (8000ef0 <TIM_TimeBaseInit+0xc0>)
 8000eca:	4293      	cmp	r3, r2
 8000ecc:	d104      	bne.n	8000ed8 <TIM_TimeBaseInit+0xa8>
 8000ece:	683b      	ldr	r3, [r7, #0]
 8000ed0:	7a9b      	ldrb	r3, [r3, #10]
 8000ed2:	b29a      	uxth	r2, r3
 8000ed4:	687b      	ldr	r3, [r7, #4]
 8000ed6:	861a      	strh	r2, [r3, #48]	; 0x30
 8000ed8:	687b      	ldr	r3, [r7, #4]
 8000eda:	2201      	movs	r2, #1
 8000edc:	829a      	strh	r2, [r3, #20]
 8000ede:	bf00      	nop
 8000ee0:	3714      	adds	r7, #20
 8000ee2:	46bd      	mov	sp, r7
 8000ee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop
 8000eec:	40010000 	.word	0x40010000
 8000ef0:	40010400 	.word	0x40010400
 8000ef4:	40000400 	.word	0x40000400
 8000ef8:	40000800 	.word	0x40000800
 8000efc:	40000c00 	.word	0x40000c00
 8000f00:	40001000 	.word	0x40001000
 8000f04:	40001400 	.word	0x40001400

08000f08 <TIM_Cmd>:
 8000f08:	b480      	push	{r7}
 8000f0a:	b083      	sub	sp, #12
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	6078      	str	r0, [r7, #4]
 8000f10:	460b      	mov	r3, r1
 8000f12:	70fb      	strb	r3, [r7, #3]
 8000f14:	78fb      	ldrb	r3, [r7, #3]
 8000f16:	2b00      	cmp	r3, #0
 8000f18:	d008      	beq.n	8000f2c <TIM_Cmd+0x24>
 8000f1a:	687b      	ldr	r3, [r7, #4]
 8000f1c:	881b      	ldrh	r3, [r3, #0]
 8000f1e:	b29b      	uxth	r3, r3
 8000f20:	f043 0301 	orr.w	r3, r3, #1
 8000f24:	b29a      	uxth	r2, r3
 8000f26:	687b      	ldr	r3, [r7, #4]
 8000f28:	801a      	strh	r2, [r3, #0]
 8000f2a:	e007      	b.n	8000f3c <TIM_Cmd+0x34>
 8000f2c:	687b      	ldr	r3, [r7, #4]
 8000f2e:	881b      	ldrh	r3, [r3, #0]
 8000f30:	b29b      	uxth	r3, r3
 8000f32:	f023 0301 	bic.w	r3, r3, #1
 8000f36:	b29a      	uxth	r2, r3
 8000f38:	687b      	ldr	r3, [r7, #4]
 8000f3a:	801a      	strh	r2, [r3, #0]
 8000f3c:	bf00      	nop
 8000f3e:	370c      	adds	r7, #12
 8000f40:	46bd      	mov	sp, r7
 8000f42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f46:	4770      	bx	lr

08000f48 <TIM_OC2Init>:
 8000f48:	b480      	push	{r7}
 8000f4a:	b085      	sub	sp, #20
 8000f4c:	af00      	add	r7, sp, #0
 8000f4e:	6078      	str	r0, [r7, #4]
 8000f50:	6039      	str	r1, [r7, #0]
 8000f52:	2300      	movs	r3, #0
 8000f54:	817b      	strh	r3, [r7, #10]
 8000f56:	2300      	movs	r3, #0
 8000f58:	81fb      	strh	r3, [r7, #14]
 8000f5a:	2300      	movs	r3, #0
 8000f5c:	81bb      	strh	r3, [r7, #12]
 8000f5e:	687b      	ldr	r3, [r7, #4]
 8000f60:	8c1b      	ldrh	r3, [r3, #32]
 8000f62:	b29b      	uxth	r3, r3
 8000f64:	f023 0310 	bic.w	r3, r3, #16
 8000f68:	b29a      	uxth	r2, r3
 8000f6a:	687b      	ldr	r3, [r7, #4]
 8000f6c:	841a      	strh	r2, [r3, #32]
 8000f6e:	687b      	ldr	r3, [r7, #4]
 8000f70:	8c1b      	ldrh	r3, [r3, #32]
 8000f72:	81fb      	strh	r3, [r7, #14]
 8000f74:	687b      	ldr	r3, [r7, #4]
 8000f76:	889b      	ldrh	r3, [r3, #4]
 8000f78:	81bb      	strh	r3, [r7, #12]
 8000f7a:	687b      	ldr	r3, [r7, #4]
 8000f7c:	8b1b      	ldrh	r3, [r3, #24]
 8000f7e:	817b      	strh	r3, [r7, #10]
 8000f80:	897b      	ldrh	r3, [r7, #10]
 8000f82:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8000f86:	817b      	strh	r3, [r7, #10]
 8000f88:	897b      	ldrh	r3, [r7, #10]
 8000f8a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000f8e:	817b      	strh	r3, [r7, #10]
 8000f90:	683b      	ldr	r3, [r7, #0]
 8000f92:	881b      	ldrh	r3, [r3, #0]
 8000f94:	021b      	lsls	r3, r3, #8
 8000f96:	b29a      	uxth	r2, r3
 8000f98:	897b      	ldrh	r3, [r7, #10]
 8000f9a:	4313      	orrs	r3, r2
 8000f9c:	817b      	strh	r3, [r7, #10]
 8000f9e:	89fb      	ldrh	r3, [r7, #14]
 8000fa0:	f023 0320 	bic.w	r3, r3, #32
 8000fa4:	81fb      	strh	r3, [r7, #14]
 8000fa6:	683b      	ldr	r3, [r7, #0]
 8000fa8:	899b      	ldrh	r3, [r3, #12]
 8000faa:	011b      	lsls	r3, r3, #4
 8000fac:	b29a      	uxth	r2, r3
 8000fae:	89fb      	ldrh	r3, [r7, #14]
 8000fb0:	4313      	orrs	r3, r2
 8000fb2:	81fb      	strh	r3, [r7, #14]
 8000fb4:	683b      	ldr	r3, [r7, #0]
 8000fb6:	885b      	ldrh	r3, [r3, #2]
 8000fb8:	011b      	lsls	r3, r3, #4
 8000fba:	b29a      	uxth	r2, r3
 8000fbc:	89fb      	ldrh	r3, [r7, #14]
 8000fbe:	4313      	orrs	r3, r2
 8000fc0:	81fb      	strh	r3, [r7, #14]
 8000fc2:	687b      	ldr	r3, [r7, #4]
 8000fc4:	4a22      	ldr	r2, [pc, #136]	; (8001050 <TIM_OC2Init+0x108>)
 8000fc6:	4293      	cmp	r3, r2
 8000fc8:	d003      	beq.n	8000fd2 <TIM_OC2Init+0x8a>
 8000fca:	687b      	ldr	r3, [r7, #4]
 8000fcc:	4a21      	ldr	r2, [pc, #132]	; (8001054 <TIM_OC2Init+0x10c>)
 8000fce:	4293      	cmp	r3, r2
 8000fd0:	d12b      	bne.n	800102a <TIM_OC2Init+0xe2>
 8000fd2:	89fb      	ldrh	r3, [r7, #14]
 8000fd4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8000fd8:	81fb      	strh	r3, [r7, #14]
 8000fda:	683b      	ldr	r3, [r7, #0]
 8000fdc:	89db      	ldrh	r3, [r3, #14]
 8000fde:	011b      	lsls	r3, r3, #4
 8000fe0:	b29a      	uxth	r2, r3
 8000fe2:	89fb      	ldrh	r3, [r7, #14]
 8000fe4:	4313      	orrs	r3, r2
 8000fe6:	81fb      	strh	r3, [r7, #14]
 8000fe8:	89fb      	ldrh	r3, [r7, #14]
 8000fea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000fee:	81fb      	strh	r3, [r7, #14]
 8000ff0:	683b      	ldr	r3, [r7, #0]
 8000ff2:	889b      	ldrh	r3, [r3, #4]
 8000ff4:	011b      	lsls	r3, r3, #4
 8000ff6:	b29a      	uxth	r2, r3
 8000ff8:	89fb      	ldrh	r3, [r7, #14]
 8000ffa:	4313      	orrs	r3, r2
 8000ffc:	81fb      	strh	r3, [r7, #14]
 8000ffe:	89bb      	ldrh	r3, [r7, #12]
 8001000:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8001004:	81bb      	strh	r3, [r7, #12]
 8001006:	89bb      	ldrh	r3, [r7, #12]
 8001008:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800100c:	81bb      	strh	r3, [r7, #12]
 800100e:	683b      	ldr	r3, [r7, #0]
 8001010:	8a1b      	ldrh	r3, [r3, #16]
 8001012:	009b      	lsls	r3, r3, #2
 8001014:	b29a      	uxth	r2, r3
 8001016:	89bb      	ldrh	r3, [r7, #12]
 8001018:	4313      	orrs	r3, r2
 800101a:	81bb      	strh	r3, [r7, #12]
 800101c:	683b      	ldr	r3, [r7, #0]
 800101e:	8a5b      	ldrh	r3, [r3, #18]
 8001020:	009b      	lsls	r3, r3, #2
 8001022:	b29a      	uxth	r2, r3
 8001024:	89bb      	ldrh	r3, [r7, #12]
 8001026:	4313      	orrs	r3, r2
 8001028:	81bb      	strh	r3, [r7, #12]
 800102a:	687b      	ldr	r3, [r7, #4]
 800102c:	89ba      	ldrh	r2, [r7, #12]
 800102e:	809a      	strh	r2, [r3, #4]
 8001030:	687b      	ldr	r3, [r7, #4]
 8001032:	897a      	ldrh	r2, [r7, #10]
 8001034:	831a      	strh	r2, [r3, #24]
 8001036:	683b      	ldr	r3, [r7, #0]
 8001038:	689a      	ldr	r2, [r3, #8]
 800103a:	687b      	ldr	r3, [r7, #4]
 800103c:	639a      	str	r2, [r3, #56]	; 0x38
 800103e:	687b      	ldr	r3, [r7, #4]
 8001040:	89fa      	ldrh	r2, [r7, #14]
 8001042:	841a      	strh	r2, [r3, #32]
 8001044:	bf00      	nop
 8001046:	3714      	adds	r7, #20
 8001048:	46bd      	mov	sp, r7
 800104a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800104e:	4770      	bx	lr
 8001050:	40010000 	.word	0x40010000
 8001054:	40010400 	.word	0x40010400

08001058 <TIM_SetCompare2>:
 8001058:	b480      	push	{r7}
 800105a:	b083      	sub	sp, #12
 800105c:	af00      	add	r7, sp, #0
 800105e:	6078      	str	r0, [r7, #4]
 8001060:	6039      	str	r1, [r7, #0]
 8001062:	687b      	ldr	r3, [r7, #4]
 8001064:	683a      	ldr	r2, [r7, #0]
 8001066:	639a      	str	r2, [r3, #56]	; 0x38
 8001068:	bf00      	nop
 800106a:	370c      	adds	r7, #12
 800106c:	46bd      	mov	sp, r7
 800106e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001072:	4770      	bx	lr

08001074 <TIM_CtrlPWMOutputs>:
 8001074:	b480      	push	{r7}
 8001076:	b083      	sub	sp, #12
 8001078:	af00      	add	r7, sp, #0
 800107a:	6078      	str	r0, [r7, #4]
 800107c:	460b      	mov	r3, r1
 800107e:	70fb      	strb	r3, [r7, #3]
 8001080:	78fb      	ldrb	r3, [r7, #3]
 8001082:	2b00      	cmp	r3, #0
 8001084:	d00c      	beq.n	80010a0 <TIM_CtrlPWMOutputs+0x2c>
 8001086:	687b      	ldr	r3, [r7, #4]
 8001088:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 800108c:	b29b      	uxth	r3, r3
 800108e:	ea6f 4343 	mvn.w	r3, r3, lsl #17
 8001092:	ea6f 4353 	mvn.w	r3, r3, lsr #17
 8001096:	b29a      	uxth	r2, r3
 8001098:	687b      	ldr	r3, [r7, #4]
 800109a:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 800109e:	e009      	b.n	80010b4 <TIM_CtrlPWMOutputs+0x40>
 80010a0:	687b      	ldr	r3, [r7, #4]
 80010a2:	f8b3 3044 	ldrh.w	r3, [r3, #68]	; 0x44
 80010a6:	b29b      	uxth	r3, r3
 80010a8:	f3c3 030e 	ubfx	r3, r3, #0, #15
 80010ac:	b29a      	uxth	r2, r3
 80010ae:	687b      	ldr	r3, [r7, #4]
 80010b0:	f8a3 2044 	strh.w	r2, [r3, #68]	; 0x44
 80010b4:	bf00      	nop
 80010b6:	370c      	adds	r7, #12
 80010b8:	46bd      	mov	sp, r7
 80010ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010be:	4770      	bx	lr

080010c0 <NVIC_SetPriority>:
 80010c0:	b480      	push	{r7}
 80010c2:	b083      	sub	sp, #12
 80010c4:	af00      	add	r7, sp, #0
 80010c6:	4603      	mov	r3, r0
 80010c8:	6039      	str	r1, [r7, #0]
 80010ca:	71fb      	strb	r3, [r7, #7]
 80010cc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010d0:	2b00      	cmp	r3, #0
 80010d2:	da0b      	bge.n	80010ec <NVIC_SetPriority+0x2c>
 80010d4:	683b      	ldr	r3, [r7, #0]
 80010d6:	b2da      	uxtb	r2, r3
 80010d8:	490c      	ldr	r1, [pc, #48]	; (800110c <NVIC_SetPriority+0x4c>)
 80010da:	79fb      	ldrb	r3, [r7, #7]
 80010dc:	f003 030f 	and.w	r3, r3, #15
 80010e0:	3b04      	subs	r3, #4
 80010e2:	0112      	lsls	r2, r2, #4
 80010e4:	b2d2      	uxtb	r2, r2
 80010e6:	440b      	add	r3, r1
 80010e8:	761a      	strb	r2, [r3, #24]
 80010ea:	e009      	b.n	8001100 <NVIC_SetPriority+0x40>
 80010ec:	683b      	ldr	r3, [r7, #0]
 80010ee:	b2da      	uxtb	r2, r3
 80010f0:	4907      	ldr	r1, [pc, #28]	; (8001110 <NVIC_SetPriority+0x50>)
 80010f2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80010f6:	0112      	lsls	r2, r2, #4
 80010f8:	b2d2      	uxtb	r2, r2
 80010fa:	440b      	add	r3, r1
 80010fc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8001100:	bf00      	nop
 8001102:	370c      	adds	r7, #12
 8001104:	46bd      	mov	sp, r7
 8001106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110a:	4770      	bx	lr
 800110c:	e000ed00 	.word	0xe000ed00
 8001110:	e000e100 	.word	0xe000e100

08001114 <SysTick_Config>:
 8001114:	b580      	push	{r7, lr}
 8001116:	b082      	sub	sp, #8
 8001118:	af00      	add	r7, sp, #0
 800111a:	6078      	str	r0, [r7, #4]
 800111c:	687b      	ldr	r3, [r7, #4]
 800111e:	3b01      	subs	r3, #1
 8001120:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001124:	d301      	bcc.n	800112a <SysTick_Config+0x16>
 8001126:	2301      	movs	r3, #1
 8001128:	e00f      	b.n	800114a <SysTick_Config+0x36>
 800112a:	4a0a      	ldr	r2, [pc, #40]	; (8001154 <SysTick_Config+0x40>)
 800112c:	687b      	ldr	r3, [r7, #4]
 800112e:	3b01      	subs	r3, #1
 8001130:	6053      	str	r3, [r2, #4]
 8001132:	210f      	movs	r1, #15
 8001134:	f04f 30ff 	mov.w	r0, #4294967295
 8001138:	f7ff ffc2 	bl	80010c0 <NVIC_SetPriority>
 800113c:	4b05      	ldr	r3, [pc, #20]	; (8001154 <SysTick_Config+0x40>)
 800113e:	2200      	movs	r2, #0
 8001140:	609a      	str	r2, [r3, #8]
 8001142:	4b04      	ldr	r3, [pc, #16]	; (8001154 <SysTick_Config+0x40>)
 8001144:	2207      	movs	r2, #7
 8001146:	601a      	str	r2, [r3, #0]
 8001148:	2300      	movs	r3, #0
 800114a:	4618      	mov	r0, r3
 800114c:	3708      	adds	r7, #8
 800114e:	46bd      	mov	sp, r7
 8001150:	bd80      	pop	{r7, pc}
 8001152:	bf00      	nop
 8001154:	e000e010 	.word	0xe000e010

08001158 <TimerInit>:
 8001158:	b580      	push	{r7, lr}
 800115a:	b084      	sub	sp, #16
 800115c:	af00      	add	r7, sp, #0
 800115e:	463b      	mov	r3, r7
 8001160:	4618      	mov	r0, r3
 8001162:	f7ff fd3d 	bl	8000be0 <RCC_GetClocksFreq>
 8001166:	683b      	ldr	r3, [r7, #0]
 8001168:	4a0a      	ldr	r2, [pc, #40]	; (8001194 <TimerInit+0x3c>)
 800116a:	fba2 2303 	umull	r2, r3, r2, r3
 800116e:	099b      	lsrs	r3, r3, #6
 8001170:	4618      	mov	r0, r3
 8001172:	f7ff ffcf 	bl	8001114 <SysTick_Config>
 8001176:	2101      	movs	r1, #1
 8001178:	f04f 30ff 	mov.w	r0, #4294967295
 800117c:	f7ff ffa0 	bl	80010c0 <NVIC_SetPriority>
 8001180:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001184:	2100      	movs	r1, #0
 8001186:	4804      	ldr	r0, [pc, #16]	; (8001198 <TimerInit+0x40>)
 8001188:	f000 f950 	bl	800142c <memsetl>
 800118c:	bf00      	nop
 800118e:	3710      	adds	r7, #16
 8001190:	46bd      	mov	sp, r7
 8001192:	bd80      	pop	{r7, pc}
 8001194:	10624dd3 	.word	0x10624dd3
 8001198:	20000048 	.word	0x20000048

0800119c <TimerStop>:
 800119c:	b480      	push	{r7}
 800119e:	b083      	sub	sp, #12
 80011a0:	af00      	add	r7, sp, #0
 80011a2:	4603      	mov	r3, r0
 80011a4:	71fb      	strb	r3, [r7, #7]
 80011a6:	79fb      	ldrb	r3, [r7, #7]
 80011a8:	2b0f      	cmp	r3, #15
 80011aa:	d80a      	bhi.n	80011c2 <TimerStop+0x26>
 80011ac:	79fa      	ldrb	r2, [r7, #7]
 80011ae:	4922      	ldr	r1, [pc, #136]	; (8001238 <TimerStop+0x9c>)
 80011b0:	4613      	mov	r3, r2
 80011b2:	005b      	lsls	r3, r3, #1
 80011b4:	4413      	add	r3, r2
 80011b6:	00db      	lsls	r3, r3, #3
 80011b8:	440b      	add	r3, r1
 80011ba:	3310      	adds	r3, #16
 80011bc:	681b      	ldr	r3, [r3, #0]
 80011be:	2b00      	cmp	r3, #0
 80011c0:	d101      	bne.n	80011c6 <TimerStop+0x2a>
 80011c2:	2300      	movs	r3, #0
 80011c4:	e031      	b.n	800122a <TimerStop+0x8e>
 80011c6:	79fa      	ldrb	r2, [r7, #7]
 80011c8:	491b      	ldr	r1, [pc, #108]	; (8001238 <TimerStop+0x9c>)
 80011ca:	4613      	mov	r3, r2
 80011cc:	005b      	lsls	r3, r3, #1
 80011ce:	4413      	add	r3, r2
 80011d0:	00db      	lsls	r3, r3, #3
 80011d2:	440b      	add	r3, r1
 80011d4:	2200      	movs	r2, #0
 80011d6:	601a      	str	r2, [r3, #0]
 80011d8:	79fa      	ldrb	r2, [r7, #7]
 80011da:	4917      	ldr	r1, [pc, #92]	; (8001238 <TimerStop+0x9c>)
 80011dc:	4613      	mov	r3, r2
 80011de:	005b      	lsls	r3, r3, #1
 80011e0:	4413      	add	r3, r2
 80011e2:	00db      	lsls	r3, r3, #3
 80011e4:	440b      	add	r3, r1
 80011e6:	3310      	adds	r3, #16
 80011e8:	2200      	movs	r2, #0
 80011ea:	601a      	str	r2, [r3, #0]
 80011ec:	79fa      	ldrb	r2, [r7, #7]
 80011ee:	4912      	ldr	r1, [pc, #72]	; (8001238 <TimerStop+0x9c>)
 80011f0:	4613      	mov	r3, r2
 80011f2:	005b      	lsls	r3, r3, #1
 80011f4:	4413      	add	r3, r2
 80011f6:	00db      	lsls	r3, r3, #3
 80011f8:	440b      	add	r3, r1
 80011fa:	330c      	adds	r3, #12
 80011fc:	2200      	movs	r2, #0
 80011fe:	701a      	strb	r2, [r3, #0]
 8001200:	79fa      	ldrb	r2, [r7, #7]
 8001202:	490d      	ldr	r1, [pc, #52]	; (8001238 <TimerStop+0x9c>)
 8001204:	4613      	mov	r3, r2
 8001206:	005b      	lsls	r3, r3, #1
 8001208:	4413      	add	r3, r2
 800120a:	00db      	lsls	r3, r3, #3
 800120c:	440b      	add	r3, r1
 800120e:	3308      	adds	r3, #8
 8001210:	2200      	movs	r2, #0
 8001212:	601a      	str	r2, [r3, #0]
 8001214:	79fa      	ldrb	r2, [r7, #7]
 8001216:	4908      	ldr	r1, [pc, #32]	; (8001238 <TimerStop+0x9c>)
 8001218:	4613      	mov	r3, r2
 800121a:	005b      	lsls	r3, r3, #1
 800121c:	4413      	add	r3, r2
 800121e:	00db      	lsls	r3, r3, #3
 8001220:	440b      	add	r3, r1
 8001222:	3304      	adds	r3, #4
 8001224:	2200      	movs	r2, #0
 8001226:	601a      	str	r2, [r3, #0]
 8001228:	2301      	movs	r3, #1
 800122a:	4618      	mov	r0, r3
 800122c:	370c      	adds	r7, #12
 800122e:	46bd      	mov	sp, r7
 8001230:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001234:	4770      	bx	lr
 8001236:	bf00      	nop
 8001238:	20000048 	.word	0x20000048

0800123c <GetMilSecTick>:
 800123c:	b480      	push	{r7}
 800123e:	af00      	add	r7, sp, #0
 8001240:	4b03      	ldr	r3, [pc, #12]	; (8001250 <GetMilSecTick+0x14>)
 8001242:	681b      	ldr	r3, [r3, #0]
 8001244:	4618      	mov	r0, r3
 8001246:	46bd      	mov	sp, r7
 8001248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800124c:	4770      	bx	lr
 800124e:	bf00      	nop
 8001250:	200001c8 	.word	0x200001c8

08001254 <processTimerScheduler>:
 8001254:	b580      	push	{r7, lr}
 8001256:	b084      	sub	sp, #16
 8001258:	af00      	add	r7, sp, #0
 800125a:	2300      	movs	r3, #0
 800125c:	73fb      	strb	r3, [r7, #15]
 800125e:	e068      	b.n	8001332 <processTimerScheduler+0xde>
 8001260:	7bfa      	ldrb	r2, [r7, #15]
 8001262:	4937      	ldr	r1, [pc, #220]	; (8001340 <processTimerScheduler+0xec>)
 8001264:	4613      	mov	r3, r2
 8001266:	005b      	lsls	r3, r3, #1
 8001268:	4413      	add	r3, r2
 800126a:	00db      	lsls	r3, r3, #3
 800126c:	440b      	add	r3, r1
 800126e:	3310      	adds	r3, #16
 8001270:	681b      	ldr	r3, [r3, #0]
 8001272:	2b00      	cmp	r3, #0
 8001274:	d05a      	beq.n	800132c <processTimerScheduler+0xd8>
 8001276:	7bfb      	ldrb	r3, [r7, #15]
 8001278:	4618      	mov	r0, r3
 800127a:	f000 f863 	bl	8001344 <TimeExpired>
 800127e:	4603      	mov	r3, r0
 8001280:	2b00      	cmp	r3, #0
 8001282:	d053      	beq.n	800132c <processTimerScheduler+0xd8>
 8001284:	7bfa      	ldrb	r2, [r7, #15]
 8001286:	492e      	ldr	r1, [pc, #184]	; (8001340 <processTimerScheduler+0xec>)
 8001288:	4613      	mov	r3, r2
 800128a:	005b      	lsls	r3, r3, #1
 800128c:	4413      	add	r3, r2
 800128e:	00db      	lsls	r3, r3, #3
 8001290:	440b      	add	r3, r1
 8001292:	3310      	adds	r3, #16
 8001294:	681b      	ldr	r3, [r3, #0]
 8001296:	60bb      	str	r3, [r7, #8]
 8001298:	7bfa      	ldrb	r2, [r7, #15]
 800129a:	4929      	ldr	r1, [pc, #164]	; (8001340 <processTimerScheduler+0xec>)
 800129c:	4613      	mov	r3, r2
 800129e:	005b      	lsls	r3, r3, #1
 80012a0:	4413      	add	r3, r2
 80012a2:	00db      	lsls	r3, r3, #3
 80012a4:	440b      	add	r3, r1
 80012a6:	3314      	adds	r3, #20
 80012a8:	681b      	ldr	r3, [r3, #0]
 80012aa:	607b      	str	r3, [r7, #4]
 80012ac:	7bfa      	ldrb	r2, [r7, #15]
 80012ae:	4924      	ldr	r1, [pc, #144]	; (8001340 <processTimerScheduler+0xec>)
 80012b0:	4613      	mov	r3, r2
 80012b2:	005b      	lsls	r3, r3, #1
 80012b4:	4413      	add	r3, r2
 80012b6:	00db      	lsls	r3, r3, #3
 80012b8:	440b      	add	r3, r1
 80012ba:	330c      	adds	r3, #12
 80012bc:	781b      	ldrb	r3, [r3, #0]
 80012be:	b2db      	uxtb	r3, r3
 80012c0:	2bff      	cmp	r3, #255	; 0xff
 80012c2:	d020      	beq.n	8001306 <processTimerScheduler+0xb2>
 80012c4:	7bfa      	ldrb	r2, [r7, #15]
 80012c6:	491e      	ldr	r1, [pc, #120]	; (8001340 <processTimerScheduler+0xec>)
 80012c8:	4613      	mov	r3, r2
 80012ca:	005b      	lsls	r3, r3, #1
 80012cc:	4413      	add	r3, r2
 80012ce:	00db      	lsls	r3, r3, #3
 80012d0:	440b      	add	r3, r1
 80012d2:	330c      	adds	r3, #12
 80012d4:	781b      	ldrb	r3, [r3, #0]
 80012d6:	b2db      	uxtb	r3, r3
 80012d8:	2b00      	cmp	r3, #0
 80012da:	d014      	beq.n	8001306 <processTimerScheduler+0xb2>
 80012dc:	7bfa      	ldrb	r2, [r7, #15]
 80012de:	4918      	ldr	r1, [pc, #96]	; (8001340 <processTimerScheduler+0xec>)
 80012e0:	4613      	mov	r3, r2
 80012e2:	005b      	lsls	r3, r3, #1
 80012e4:	4413      	add	r3, r2
 80012e6:	00db      	lsls	r3, r3, #3
 80012e8:	440b      	add	r3, r1
 80012ea:	330c      	adds	r3, #12
 80012ec:	781b      	ldrb	r3, [r3, #0]
 80012ee:	b2db      	uxtb	r3, r3
 80012f0:	3b01      	subs	r3, #1
 80012f2:	b2d8      	uxtb	r0, r3
 80012f4:	4912      	ldr	r1, [pc, #72]	; (8001340 <processTimerScheduler+0xec>)
 80012f6:	4613      	mov	r3, r2
 80012f8:	005b      	lsls	r3, r3, #1
 80012fa:	4413      	add	r3, r2
 80012fc:	00db      	lsls	r3, r3, #3
 80012fe:	440b      	add	r3, r1
 8001300:	330c      	adds	r3, #12
 8001302:	4602      	mov	r2, r0
 8001304:	701a      	strb	r2, [r3, #0]
 8001306:	7bfa      	ldrb	r2, [r7, #15]
 8001308:	490d      	ldr	r1, [pc, #52]	; (8001340 <processTimerScheduler+0xec>)
 800130a:	4613      	mov	r3, r2
 800130c:	005b      	lsls	r3, r3, #1
 800130e:	4413      	add	r3, r2
 8001310:	00db      	lsls	r3, r3, #3
 8001312:	440b      	add	r3, r1
 8001314:	330c      	adds	r3, #12
 8001316:	781b      	ldrb	r3, [r3, #0]
 8001318:	b2db      	uxtb	r3, r3
 800131a:	2b00      	cmp	r3, #0
 800131c:	d103      	bne.n	8001326 <processTimerScheduler+0xd2>
 800131e:	7bfb      	ldrb	r3, [r7, #15]
 8001320:	4618      	mov	r0, r3
 8001322:	f7ff ff3b 	bl	800119c <TimerStop>
 8001326:	68bb      	ldr	r3, [r7, #8]
 8001328:	6878      	ldr	r0, [r7, #4]
 800132a:	4798      	blx	r3
 800132c:	7bfb      	ldrb	r3, [r7, #15]
 800132e:	3301      	adds	r3, #1
 8001330:	73fb      	strb	r3, [r7, #15]
 8001332:	7bfb      	ldrb	r3, [r7, #15]
 8001334:	2b0f      	cmp	r3, #15
 8001336:	d993      	bls.n	8001260 <processTimerScheduler+0xc>
 8001338:	bf00      	nop
 800133a:	3710      	adds	r7, #16
 800133c:	46bd      	mov	sp, r7
 800133e:	bd80      	pop	{r7, pc}
 8001340:	20000048 	.word	0x20000048

08001344 <TimeExpired>:
 8001344:	b580      	push	{r7, lr}
 8001346:	b084      	sub	sp, #16
 8001348:	af00      	add	r7, sp, #0
 800134a:	4603      	mov	r3, r0
 800134c:	71fb      	strb	r3, [r7, #7]
 800134e:	2300      	movs	r3, #0
 8001350:	60fb      	str	r3, [r7, #12]
 8001352:	b672      	cpsid	i
 8001354:	f7ff ff72 	bl	800123c <GetMilSecTick>
 8001358:	60b8      	str	r0, [r7, #8]
 800135a:	79fb      	ldrb	r3, [r7, #7]
 800135c:	2b0f      	cmp	r3, #15
 800135e:	d80a      	bhi.n	8001376 <TimeExpired+0x32>
 8001360:	79fa      	ldrb	r2, [r7, #7]
 8001362:	492a      	ldr	r1, [pc, #168]	; (800140c <TimeExpired+0xc8>)
 8001364:	4613      	mov	r3, r2
 8001366:	005b      	lsls	r3, r3, #1
 8001368:	4413      	add	r3, r2
 800136a:	00db      	lsls	r3, r3, #3
 800136c:	440b      	add	r3, r1
 800136e:	3310      	adds	r3, #16
 8001370:	681b      	ldr	r3, [r3, #0]
 8001372:	2b00      	cmp	r3, #0
 8001374:	d102      	bne.n	800137c <TimeExpired+0x38>
 8001376:	b662      	cpsie	i
 8001378:	2300      	movs	r3, #0
 800137a:	e042      	b.n	8001402 <TimeExpired+0xbe>
 800137c:	79fa      	ldrb	r2, [r7, #7]
 800137e:	4923      	ldr	r1, [pc, #140]	; (800140c <TimeExpired+0xc8>)
 8001380:	4613      	mov	r3, r2
 8001382:	005b      	lsls	r3, r3, #1
 8001384:	4413      	add	r3, r2
 8001386:	00db      	lsls	r3, r3, #3
 8001388:	440b      	add	r3, r1
 800138a:	3304      	adds	r3, #4
 800138c:	681b      	ldr	r3, [r3, #0]
 800138e:	68ba      	ldr	r2, [r7, #8]
 8001390:	429a      	cmp	r2, r3
 8001392:	d30c      	bcc.n	80013ae <TimeExpired+0x6a>
 8001394:	79fa      	ldrb	r2, [r7, #7]
 8001396:	491d      	ldr	r1, [pc, #116]	; (800140c <TimeExpired+0xc8>)
 8001398:	4613      	mov	r3, r2
 800139a:	005b      	lsls	r3, r3, #1
 800139c:	4413      	add	r3, r2
 800139e:	00db      	lsls	r3, r3, #3
 80013a0:	440b      	add	r3, r1
 80013a2:	3304      	adds	r3, #4
 80013a4:	681b      	ldr	r3, [r3, #0]
 80013a6:	68ba      	ldr	r2, [r7, #8]
 80013a8:	1ad3      	subs	r3, r2, r3
 80013aa:	60fb      	str	r3, [r7, #12]
 80013ac:	e00e      	b.n	80013cc <TimeExpired+0x88>
 80013ae:	79fa      	ldrb	r2, [r7, #7]
 80013b0:	4916      	ldr	r1, [pc, #88]	; (800140c <TimeExpired+0xc8>)
 80013b2:	4613      	mov	r3, r2
 80013b4:	005b      	lsls	r3, r3, #1
 80013b6:	4413      	add	r3, r2
 80013b8:	00db      	lsls	r3, r3, #3
 80013ba:	440b      	add	r3, r1
 80013bc:	3304      	adds	r3, #4
 80013be:	681a      	ldr	r2, [r3, #0]
 80013c0:	68bb      	ldr	r3, [r7, #8]
 80013c2:	1ad3      	subs	r3, r2, r3
 80013c4:	60fb      	str	r3, [r7, #12]
 80013c6:	68fb      	ldr	r3, [r7, #12]
 80013c8:	43db      	mvns	r3, r3
 80013ca:	60fb      	str	r3, [r7, #12]
 80013cc:	79fa      	ldrb	r2, [r7, #7]
 80013ce:	490f      	ldr	r1, [pc, #60]	; (800140c <TimeExpired+0xc8>)
 80013d0:	4613      	mov	r3, r2
 80013d2:	005b      	lsls	r3, r3, #1
 80013d4:	4413      	add	r3, r2
 80013d6:	00db      	lsls	r3, r3, #3
 80013d8:	440b      	add	r3, r1
 80013da:	3308      	adds	r3, #8
 80013dc:	681b      	ldr	r3, [r3, #0]
 80013de:	68fa      	ldr	r2, [r7, #12]
 80013e0:	429a      	cmp	r2, r3
 80013e2:	d202      	bcs.n	80013ea <TimeExpired+0xa6>
 80013e4:	b662      	cpsie	i
 80013e6:	2300      	movs	r3, #0
 80013e8:	e00b      	b.n	8001402 <TimeExpired+0xbe>
 80013ea:	79fa      	ldrb	r2, [r7, #7]
 80013ec:	4907      	ldr	r1, [pc, #28]	; (800140c <TimeExpired+0xc8>)
 80013ee:	4613      	mov	r3, r2
 80013f0:	005b      	lsls	r3, r3, #1
 80013f2:	4413      	add	r3, r2
 80013f4:	00db      	lsls	r3, r3, #3
 80013f6:	440b      	add	r3, r1
 80013f8:	3304      	adds	r3, #4
 80013fa:	68ba      	ldr	r2, [r7, #8]
 80013fc:	601a      	str	r2, [r3, #0]
 80013fe:	b662      	cpsie	i
 8001400:	2301      	movs	r3, #1
 8001402:	4618      	mov	r0, r3
 8001404:	3710      	adds	r7, #16
 8001406:	46bd      	mov	sp, r7
 8001408:	bd80      	pop	{r7, pc}
 800140a:	bf00      	nop
 800140c:	20000048 	.word	0x20000048

08001410 <SysTick_Handler>:
 8001410:	b480      	push	{r7}
 8001412:	af00      	add	r7, sp, #0
 8001414:	4b04      	ldr	r3, [pc, #16]	; (8001428 <SysTick_Handler+0x18>)
 8001416:	681b      	ldr	r3, [r3, #0]
 8001418:	3301      	adds	r3, #1
 800141a:	4a03      	ldr	r2, [pc, #12]	; (8001428 <SysTick_Handler+0x18>)
 800141c:	6013      	str	r3, [r2, #0]
 800141e:	bf00      	nop
 8001420:	46bd      	mov	sp, r7
 8001422:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001426:	4770      	bx	lr
 8001428:	200001c8 	.word	0x200001c8

0800142c <memsetl>:
 800142c:	b480      	push	{r7}
 800142e:	b083      	sub	sp, #12
 8001430:	af00      	add	r7, sp, #0
 8001432:	6078      	str	r0, [r7, #4]
 8001434:	460b      	mov	r3, r1
 8001436:	70fb      	strb	r3, [r7, #3]
 8001438:	4613      	mov	r3, r2
 800143a:	803b      	strh	r3, [r7, #0]
 800143c:	e004      	b.n	8001448 <memsetl+0x1c>
 800143e:	687b      	ldr	r3, [r7, #4]
 8001440:	1c5a      	adds	r2, r3, #1
 8001442:	607a      	str	r2, [r7, #4]
 8001444:	78fa      	ldrb	r2, [r7, #3]
 8001446:	701a      	strb	r2, [r3, #0]
 8001448:	883b      	ldrh	r3, [r7, #0]
 800144a:	1e5a      	subs	r2, r3, #1
 800144c:	803a      	strh	r2, [r7, #0]
 800144e:	2b00      	cmp	r3, #0
 8001450:	d1f5      	bne.n	800143e <memsetl+0x12>
 8001452:	bf00      	nop
 8001454:	370c      	adds	r7, #12
 8001456:	46bd      	mov	sp, r7
 8001458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800145c:	4770      	bx	lr
	...

08001460 <__libc_init_array>:
 8001460:	b570      	push	{r4, r5, r6, lr}
 8001462:	4d0d      	ldr	r5, [pc, #52]	; (8001498 <__libc_init_array+0x38>)
 8001464:	4c0d      	ldr	r4, [pc, #52]	; (800149c <__libc_init_array+0x3c>)
 8001466:	1b64      	subs	r4, r4, r5
 8001468:	10a4      	asrs	r4, r4, #2
 800146a:	2600      	movs	r6, #0
 800146c:	42a6      	cmp	r6, r4
 800146e:	d109      	bne.n	8001484 <__libc_init_array+0x24>
 8001470:	4d0b      	ldr	r5, [pc, #44]	; (80014a0 <__libc_init_array+0x40>)
 8001472:	4c0c      	ldr	r4, [pc, #48]	; (80014a4 <__libc_init_array+0x44>)
 8001474:	f000 f818 	bl	80014a8 <_init>
 8001478:	1b64      	subs	r4, r4, r5
 800147a:	10a4      	asrs	r4, r4, #2
 800147c:	2600      	movs	r6, #0
 800147e:	42a6      	cmp	r6, r4
 8001480:	d105      	bne.n	800148e <__libc_init_array+0x2e>
 8001482:	bd70      	pop	{r4, r5, r6, pc}
 8001484:	f855 3b04 	ldr.w	r3, [r5], #4
 8001488:	4798      	blx	r3
 800148a:	3601      	adds	r6, #1
 800148c:	e7ee      	b.n	800146c <__libc_init_array+0xc>
 800148e:	f855 3b04 	ldr.w	r3, [r5], #4
 8001492:	4798      	blx	r3
 8001494:	3601      	adds	r6, #1
 8001496:	e7f2      	b.n	800147e <__libc_init_array+0x1e>
 8001498:	080014c0 	.word	0x080014c0
 800149c:	080014c0 	.word	0x080014c0
 80014a0:	080014c0 	.word	0x080014c0
 80014a4:	080014c4 	.word	0x080014c4

080014a8 <_init>:
 80014a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014aa:	bf00      	nop
 80014ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ae:	bc08      	pop	{r3}
 80014b0:	469e      	mov	lr, r3
 80014b2:	4770      	bx	lr

080014b4 <_fini>:
 80014b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80014b6:	bf00      	nop
 80014b8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80014ba:	bc08      	pop	{r3}
 80014bc:	469e      	mov	lr, r3
 80014be:	4770      	bx	lr
