
Assignment1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000fb4  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08001148  08001148  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08001148  08001148  00020010  2**0
                  CONTENTS
  4 .ARM          00000000  08001148  08001148  00020010  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001148  08001148  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001148  08001148  00011148  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800114c  0800114c  0001114c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000010  20000000  08001150  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001e8  20000010  08001160  00020010  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001f8  08001160  000201f8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000334d  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000e3c  00000000  00000000  0002338d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000480  00000000  00000000  000241d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003f8  00000000  00000000  00024650  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000c899  00000000  00000000  00024a48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003404  00000000  00000000  000312e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0003df7d  00000000  00000000  000346e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  00072662  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000011dc  00000000  00000000  00072730  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000010 	.word	0x20000010
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08001130 	.word	0x08001130

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000014 	.word	0x20000014
 80001d0:	08001130 	.word	0x08001130

080001d4 <Button_Init1>:
Button buttonB2;
Button buttonB3;
Button buttonB4;

void Button_Init1()
{
 80001d4:	b480      	push	{r7}
 80001d6:	af00      	add	r7, sp, #0
	buttonB2.count = 0;
 80001d8:	4b1d      	ldr	r3, [pc, #116]	; (8000250 <Button_Init1+0x7c>)
 80001da:	2200      	movs	r2, #0
 80001dc:	721a      	strb	r2, [r3, #8]
	buttonB2.state = BUTTON_RELEASED;
 80001de:	4b1c      	ldr	r3, [pc, #112]	; (8000250 <Button_Init1+0x7c>)
 80001e0:	2200      	movs	r2, #0
 80001e2:	701a      	strb	r2, [r3, #0]
	buttonB2.timePress = 0;
 80001e4:	4b1a      	ldr	r3, [pc, #104]	; (8000250 <Button_Init1+0x7c>)
 80001e6:	2200      	movs	r2, #0
 80001e8:	605a      	str	r2, [r3, #4]
	buttonB2.timeReleased = 0;
 80001ea:	4b19      	ldr	r3, [pc, #100]	; (8000250 <Button_Init1+0x7c>)
 80001ec:	2200      	movs	r2, #0
 80001ee:	60da      	str	r2, [r3, #12]
	buttonB2.firtsRelease = 0;
 80001f0:	4b17      	ldr	r3, [pc, #92]	; (8000250 <Button_Init1+0x7c>)
 80001f2:	2200      	movs	r2, #0
 80001f4:	611a      	str	r2, [r3, #16]
	buttonB2.wait = 0;
 80001f6:	4b16      	ldr	r3, [pc, #88]	; (8000250 <Button_Init1+0x7c>)
 80001f8:	2200      	movs	r2, #0
 80001fa:	751a      	strb	r2, [r3, #20]

	buttonB3.count = 0;
 80001fc:	4b15      	ldr	r3, [pc, #84]	; (8000254 <Button_Init1+0x80>)
 80001fe:	2200      	movs	r2, #0
 8000200:	721a      	strb	r2, [r3, #8]
	buttonB3.state = BUTTON_RELEASED;
 8000202:	4b14      	ldr	r3, [pc, #80]	; (8000254 <Button_Init1+0x80>)
 8000204:	2200      	movs	r2, #0
 8000206:	701a      	strb	r2, [r3, #0]
	buttonB3.timePress = 0;
 8000208:	4b12      	ldr	r3, [pc, #72]	; (8000254 <Button_Init1+0x80>)
 800020a:	2200      	movs	r2, #0
 800020c:	605a      	str	r2, [r3, #4]
	buttonB3.timeReleased = 0;
 800020e:	4b11      	ldr	r3, [pc, #68]	; (8000254 <Button_Init1+0x80>)
 8000210:	2200      	movs	r2, #0
 8000212:	60da      	str	r2, [r3, #12]
	buttonB3.firtsRelease = 0;
 8000214:	4b0f      	ldr	r3, [pc, #60]	; (8000254 <Button_Init1+0x80>)
 8000216:	2200      	movs	r2, #0
 8000218:	611a      	str	r2, [r3, #16]
	buttonB3.wait = 0;
 800021a:	4b0e      	ldr	r3, [pc, #56]	; (8000254 <Button_Init1+0x80>)
 800021c:	2200      	movs	r2, #0
 800021e:	751a      	strb	r2, [r3, #20]

	buttonB4.count = 0;
 8000220:	4b0d      	ldr	r3, [pc, #52]	; (8000258 <Button_Init1+0x84>)
 8000222:	2200      	movs	r2, #0
 8000224:	721a      	strb	r2, [r3, #8]
	buttonB4.state = BUTTON_RELEASED;
 8000226:	4b0c      	ldr	r3, [pc, #48]	; (8000258 <Button_Init1+0x84>)
 8000228:	2200      	movs	r2, #0
 800022a:	701a      	strb	r2, [r3, #0]
	buttonB4.timePress = 0;
 800022c:	4b0a      	ldr	r3, [pc, #40]	; (8000258 <Button_Init1+0x84>)
 800022e:	2200      	movs	r2, #0
 8000230:	605a      	str	r2, [r3, #4]
	buttonB4.timeReleased = 0;
 8000232:	4b09      	ldr	r3, [pc, #36]	; (8000258 <Button_Init1+0x84>)
 8000234:	2200      	movs	r2, #0
 8000236:	60da      	str	r2, [r3, #12]
	buttonB4.firtsRelease = 0;
 8000238:	4b07      	ldr	r3, [pc, #28]	; (8000258 <Button_Init1+0x84>)
 800023a:	2200      	movs	r2, #0
 800023c:	611a      	str	r2, [r3, #16]
	buttonB4.wait = 0;
 800023e:	4b06      	ldr	r3, [pc, #24]	; (8000258 <Button_Init1+0x84>)
 8000240:	2200      	movs	r2, #0
 8000242:	751a      	strb	r2, [r3, #20]
}
 8000244:	bf00      	nop
 8000246:	46bd      	mov	sp, r7
 8000248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800024c:	4770      	bx	lr
 800024e:	bf00      	nop
 8000250:	200001e0 	.word	0x200001e0
 8000254:	200001b0 	.word	0x200001b0
 8000258:	200001c8 	.word	0x200001c8

0800025c <LedBuzz_Init>:

//GPIO_Init for Buzzer and Led
void LedBuzz_Init(void)
{
 800025c:	b580      	push	{r7, lr}
 800025e:	b082      	sub	sp, #8
 8000260:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	RCC_AHB1PeriphClockCmd(BUZZERControl_SetClock, ENABLE);
 8000262:	2101      	movs	r1, #1
 8000264:	2004      	movs	r0, #4
 8000266:	f000 fe1b 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>

	GPIO_InitStructure.GPIO_Pin = BUZZER_GPIO_PIN;
 800026a:	f44f 7300 	mov.w	r3, #512	; 0x200
 800026e:	603b      	str	r3, [r7, #0]

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 8000270:	2301      	movs	r3, #1
 8000272:	713b      	strb	r3, [r7, #4]

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000274:	2302      	movs	r3, #2
 8000276:	717b      	strb	r3, [r7, #5]

	GPIO_InitStructure.GPIO_OType =  GPIO_OType_PP;
 8000278:	2300      	movs	r3, #0
 800027a:	71bb      	strb	r3, [r7, #6]

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_DOWN;
 800027c:	2302      	movs	r3, #2
 800027e:	71fb      	strb	r3, [r7, #7]

	//Init Buzzer

	GPIO_Init(BUZZER_GPIO_PORT, &GPIO_InitStructure);
 8000280:	463b      	mov	r3, r7
 8000282:	4619      	mov	r1, r3
 8000284:	481a      	ldr	r0, [pc, #104]	; (80002f0 <LedBuzz_Init+0x94>)
 8000286:	f000 fca3 	bl	8000bd0 <GPIO_Init>

	//Init Led1 red

	GPIO_InitStructure.GPIO_Pin = LED1_RED_GPIO_PIN;
 800028a:	2302      	movs	r3, #2
 800028c:	603b      	str	r3, [r7, #0]

	RCC_AHB1PeriphClockCmd(LED1_REDControl_SetClock, ENABLE);
 800028e:	2101      	movs	r1, #1
 8000290:	2001      	movs	r0, #1
 8000292:	f000 fe05 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>

	GPIO_Init(LED1_RED_GPIO_PORT, &GPIO_InitStructure);
 8000296:	463b      	mov	r3, r7
 8000298:	4619      	mov	r1, r3
 800029a:	4816      	ldr	r0, [pc, #88]	; (80002f4 <LedBuzz_Init+0x98>)
 800029c:	f000 fc98 	bl	8000bd0 <GPIO_Init>

	//Init Led1 GREEN

	GPIO_InitStructure.GPIO_Pin = LED1_GREEN_GPIO_PIN;
 80002a0:	2301      	movs	r3, #1
 80002a2:	603b      	str	r3, [r7, #0]

	RCC_AHB1PeriphClockCmd(LED1_GREENControl_SetClock, ENABLE);
 80002a4:	2101      	movs	r1, #1
 80002a6:	2001      	movs	r0, #1
 80002a8:	f000 fdfa 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>

	GPIO_Init(LED1_GREEN_GPIO_PORT, &GPIO_InitStructure);
 80002ac:	463b      	mov	r3, r7
 80002ae:	4619      	mov	r1, r3
 80002b0:	4810      	ldr	r0, [pc, #64]	; (80002f4 <LedBuzz_Init+0x98>)
 80002b2:	f000 fc8d 	bl	8000bd0 <GPIO_Init>

	//Init Led2 BLUE

	GPIO_InitStructure.GPIO_Pin = LED2_BLUE_GPIO_PIN;
 80002b6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80002ba:	603b      	str	r3, [r7, #0]

	RCC_AHB1PeriphClockCmd(LED2_BLUEControl_SetClock, ENABLE);
 80002bc:	2101      	movs	r1, #1
 80002be:	2001      	movs	r0, #1
 80002c0:	f000 fdee 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>

	GPIO_Init(LED2_BLUE_GPIO_PORT, &GPIO_InitStructure);
 80002c4:	463b      	mov	r3, r7
 80002c6:	4619      	mov	r1, r3
 80002c8:	480a      	ldr	r0, [pc, #40]	; (80002f4 <LedBuzz_Init+0x98>)
 80002ca:	f000 fc81 	bl	8000bd0 <GPIO_Init>

	//Init Led2 RED

	GPIO_InitStructure.GPIO_Pin = LED2_RED_GPIO_PIN;
 80002ce:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80002d2:	603b      	str	r3, [r7, #0]

	RCC_AHB1PeriphClockCmd(LED2_REDControl_SetClock, ENABLE);
 80002d4:	2101      	movs	r1, #1
 80002d6:	2002      	movs	r0, #2
 80002d8:	f000 fde2 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>

	GPIO_Init(LED2_RED_GPIO_PORT, &GPIO_InitStructure);
 80002dc:	463b      	mov	r3, r7
 80002de:	4619      	mov	r1, r3
 80002e0:	4805      	ldr	r0, [pc, #20]	; (80002f8 <LedBuzz_Init+0x9c>)
 80002e2:	f000 fc75 	bl	8000bd0 <GPIO_Init>
}
 80002e6:	bf00      	nop
 80002e8:	3708      	adds	r7, #8
 80002ea:	46bd      	mov	sp, r7
 80002ec:	bd80      	pop	{r7, pc}
 80002ee:	bf00      	nop
 80002f0:	40020800 	.word	0x40020800
 80002f4:	40020000 	.word	0x40020000
 80002f8:	40020400 	.word	0x40020400

080002fc <Button_Init>:

static void Button_Init(void)	//Không gọi hàm này à em?
{
 80002fc:	b580      	push	{r7, lr}
 80002fe:	b082      	sub	sp, #8
 8000300:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;

	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000302:	2300      	movs	r3, #0
 8000304:	713b      	strb	r3, [r7, #4]

	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8000306:	2302      	movs	r3, #2
 8000308:	717b      	strb	r3, [r7, #5]

	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 800030a:	2301      	movs	r3, #1
 800030c:	71fb      	strb	r3, [r7, #7]

	//Init B2
	GPIO_InitStructure.GPIO_Pin = BUTTONB2_GPIO_PIN;
 800030e:	2308      	movs	r3, #8
 8000310:	603b      	str	r3, [r7, #0]
	RCC_AHB1PeriphClockCmd(BUTTONB2Control_SetClock, ENABLE);
 8000312:	2101      	movs	r1, #1
 8000314:	2002      	movs	r0, #2
 8000316:	f000 fdc3 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>
	GPIO_Init(BUTTONB2_GPIO_PORT, &GPIO_InitStructure);
 800031a:	463b      	mov	r3, r7
 800031c:	4619      	mov	r1, r3
 800031e:	480e      	ldr	r0, [pc, #56]	; (8000358 <Button_Init+0x5c>)
 8000320:	f000 fc56 	bl	8000bd0 <GPIO_Init>

	//Init B3
	GPIO_InitStructure.GPIO_Pin = BUTTONB3_GPIO_PIN;
 8000324:	2310      	movs	r3, #16
 8000326:	603b      	str	r3, [r7, #0]
	RCC_AHB1PeriphClockCmd(BUTTONB3Control_SetClock, ENABLE);
 8000328:	2101      	movs	r1, #1
 800032a:	2001      	movs	r0, #1
 800032c:	f000 fdb8 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>
	GPIO_Init(BUTTONB3_GPIO_PORT, &GPIO_InitStructure);
 8000330:	463b      	mov	r3, r7
 8000332:	4619      	mov	r1, r3
 8000334:	4809      	ldr	r0, [pc, #36]	; (800035c <Button_Init+0x60>)
 8000336:	f000 fc4b 	bl	8000bd0 <GPIO_Init>

	//Init B4
	GPIO_InitStructure.GPIO_Pin = BUTTONB4_GPIO_PIN;
 800033a:	2301      	movs	r3, #1
 800033c:	603b      	str	r3, [r7, #0]
	RCC_AHB1PeriphClockCmd(BUTTONB4Control_SetClock, ENABLE);
 800033e:	2101      	movs	r1, #1
 8000340:	2002      	movs	r0, #2
 8000342:	f000 fdad 	bl	8000ea0 <RCC_AHB1PeriphClockCmd>
	GPIO_Init(BUTTONB4_GPIO_PORT, &GPIO_InitStructure);
 8000346:	463b      	mov	r3, r7
 8000348:	4619      	mov	r1, r3
 800034a:	4803      	ldr	r0, [pc, #12]	; (8000358 <Button_Init+0x5c>)
 800034c:	f000 fc40 	bl	8000bd0 <GPIO_Init>
}
 8000350:	bf00      	nop
 8000352:	3708      	adds	r7, #8
 8000354:	46bd      	mov	sp, r7
 8000356:	bd80      	pop	{r7, pc}
 8000358:	40020400 	.word	0x40020400
 800035c:	40020000 	.word	0x40020000

08000360 <Interrupt_Init>:

//Init interrupt for button
static void Interrupt_Init(void)
{
 8000360:	b580      	push	{r7, lr}
 8000362:	b084      	sub	sp, #16
 8000364:	af00      	add	r7, sp, #0
	EXTI_InitTypeDef EXTI_InitStructure;
	NVIC_InitTypeDef NVIC_InitStructure;


	RCC_APB2PeriphClockCmd(SYSCFG_Clock, ENABLE);
 8000366:	2101      	movs	r1, #1
 8000368:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 800036c:	f000 fdb8 	bl	8000ee0 <RCC_APB2PeriphClockCmd>



	EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
 8000370:	2300      	movs	r3, #0
 8000372:	733b      	strb	r3, [r7, #12]
	EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising_Falling;
 8000374:	2310      	movs	r3, #16
 8000376:	737b      	strb	r3, [r7, #13]
	EXTI_InitStructure.EXTI_LineCmd = ENABLE;
 8000378:	2301      	movs	r3, #1
 800037a:	73bb      	strb	r3, [r7, #14]

	//Configure EXTI for B4
	EXTI_InitStructure.EXTI_Line = EXTI_Line0;
 800037c:	2301      	movs	r3, #1
 800037e:	60bb      	str	r3, [r7, #8]
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB, EXTI_PinSource0);
 8000380:	2100      	movs	r1, #0
 8000382:	2001      	movs	r0, #1
 8000384:	f000 fdcc 	bl	8000f20 <SYSCFG_EXTILineConfig>
	EXTI_Init(&EXTI_InitStructure);
 8000388:	f107 0308 	add.w	r3, r7, #8
 800038c:	4618      	mov	r0, r3
 800038e:	f000 fb83 	bl	8000a98 <EXTI_Init>

	//Configure EXTI for B2
	EXTI_InitStructure.EXTI_Line = EXTI_Line3;
 8000392:	2308      	movs	r3, #8
 8000394:	60bb      	str	r3, [r7, #8]
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOB, EXTI_PinSource3);
 8000396:	2103      	movs	r1, #3
 8000398:	2001      	movs	r0, #1
 800039a:	f000 fdc1 	bl	8000f20 <SYSCFG_EXTILineConfig>
	EXTI_Init(&EXTI_InitStructure);
 800039e:	f107 0308 	add.w	r3, r7, #8
 80003a2:	4618      	mov	r0, r3
 80003a4:	f000 fb78 	bl	8000a98 <EXTI_Init>

	//Configure EXTI for B3
	EXTI_InitStructure.EXTI_Line = EXTI_Line4;
 80003a8:	2310      	movs	r3, #16
 80003aa:	60bb      	str	r3, [r7, #8]
	SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource4);
 80003ac:	2104      	movs	r1, #4
 80003ae:	2000      	movs	r0, #0
 80003b0:	f000 fdb6 	bl	8000f20 <SYSCFG_EXTILineConfig>
	EXTI_Init(&EXTI_InitStructure);
 80003b4:	f107 0308 	add.w	r3, r7, #8
 80003b8:	4618      	mov	r0, r3
 80003ba:	f000 fb6d 	bl	8000a98 <EXTI_Init>

	NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80003be:	2300      	movs	r3, #0
 80003c0:	717b      	strb	r3, [r7, #5]
	NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80003c2:	2300      	movs	r3, #0
 80003c4:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80003c6:	2301      	movs	r3, #1
 80003c8:	71fb      	strb	r3, [r7, #7]

	//Configure NVIC for B2
	NVIC_InitStructure.NVIC_IRQChannel = EXTI3_IRQn;
 80003ca:	2309      	movs	r3, #9
 80003cc:	713b      	strb	r3, [r7, #4]
	NVIC_Init(&NVIC_InitStructure);
 80003ce:	1d3b      	adds	r3, r7, #4
 80003d0:	4618      	mov	r0, r3
 80003d2:	f000 faff 	bl	80009d4 <NVIC_Init>

	//Configure NVIC for B3
	NVIC_InitStructure.NVIC_IRQChannel = EXTI4_IRQn;
 80003d6:	230a      	movs	r3, #10
 80003d8:	713b      	strb	r3, [r7, #4]
	NVIC_Init(&NVIC_InitStructure);
 80003da:	1d3b      	adds	r3, r7, #4
 80003dc:	4618      	mov	r0, r3
 80003de:	f000 faf9 	bl	80009d4 <NVIC_Init>

	//Configure NVIC for B4
	NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;
 80003e2:	2306      	movs	r3, #6
 80003e4:	713b      	strb	r3, [r7, #4]
	NVIC_Init(&NVIC_InitStructure);
 80003e6:	1d3b      	adds	r3, r7, #4
 80003e8:	4618      	mov	r0, r3
 80003ea:	f000 faf3 	bl	80009d4 <NVIC_Init>
}
 80003ee:	bf00      	nop
 80003f0:	3710      	adds	r7, #16
 80003f2:	46bd      	mov	sp, r7
 80003f4:	bd80      	pop	{r7, pc}
	...

080003f8 <LedControl_SetStatus>:

//Control LED
static void LedControl_SetStatus(uint8_t LED_ID, uint8_t status)
{
 80003f8:	b580      	push	{r7, lr}
 80003fa:	b082      	sub	sp, #8
 80003fc:	af00      	add	r7, sp, #0
 80003fe:	4603      	mov	r3, r0
 8000400:	460a      	mov	r2, r1
 8000402:	71fb      	strb	r3, [r7, #7]
 8000404:	4613      	mov	r3, r2
 8000406:	71bb      	strb	r3, [r7, #6]
	switch(LED_ID)
 8000408:	79fb      	ldrb	r3, [r7, #7]
 800040a:	2b00      	cmp	r3, #0
 800040c:	d002      	beq.n	8000414 <LedControl_SetStatus+0x1c>
 800040e:	2b01      	cmp	r3, #1
 8000410:	d014      	beq.n	800043c <LedControl_SetStatus+0x44>
			{
				GPIO_WriteBit(LED1_RED_GPIO_PORT, LED1_RED_GPIO_PIN, 0);
			}
			break;
	}
}
 8000412:	e027      	b.n	8000464 <LedControl_SetStatus+0x6c>
			GPIO_WriteBit(LED1_RED_GPIO_PORT, LED1_RED_GPIO_PIN, 0);
 8000414:	2200      	movs	r2, #0
 8000416:	2102      	movs	r1, #2
 8000418:	4814      	ldr	r0, [pc, #80]	; (800046c <LedControl_SetStatus+0x74>)
 800041a:	f000 fc81 	bl	8000d20 <GPIO_WriteBit>
			if(status == GPIO_PIN_SET)
 800041e:	79bb      	ldrb	r3, [r7, #6]
 8000420:	2b01      	cmp	r3, #1
 8000422:	d105      	bne.n	8000430 <LedControl_SetStatus+0x38>
				GPIO_WriteBit(LED1_GREEN_GPIO_PORT, LED1_GREEN_GPIO_PIN, 1);
 8000424:	2201      	movs	r2, #1
 8000426:	2101      	movs	r1, #1
 8000428:	4810      	ldr	r0, [pc, #64]	; (800046c <LedControl_SetStatus+0x74>)
 800042a:	f000 fc79 	bl	8000d20 <GPIO_WriteBit>
			break;
 800042e:	e019      	b.n	8000464 <LedControl_SetStatus+0x6c>
				GPIO_WriteBit(LED1_GREEN_GPIO_PORT, LED1_GREEN_GPIO_PIN, 0);
 8000430:	2200      	movs	r2, #0
 8000432:	2101      	movs	r1, #1
 8000434:	480d      	ldr	r0, [pc, #52]	; (800046c <LedControl_SetStatus+0x74>)
 8000436:	f000 fc73 	bl	8000d20 <GPIO_WriteBit>
			break;
 800043a:	e013      	b.n	8000464 <LedControl_SetStatus+0x6c>
			GPIO_WriteBit(LED1_GREEN_GPIO_PORT, LED1_GREEN_GPIO_PIN, 0);
 800043c:	2200      	movs	r2, #0
 800043e:	2101      	movs	r1, #1
 8000440:	480a      	ldr	r0, [pc, #40]	; (800046c <LedControl_SetStatus+0x74>)
 8000442:	f000 fc6d 	bl	8000d20 <GPIO_WriteBit>
			if(status == GPIO_PIN_SET)
 8000446:	79bb      	ldrb	r3, [r7, #6]
 8000448:	2b01      	cmp	r3, #1
 800044a:	d105      	bne.n	8000458 <LedControl_SetStatus+0x60>
				GPIO_WriteBit(LED1_RED_GPIO_PORT, LED1_RED_GPIO_PIN, 1);
 800044c:	2201      	movs	r2, #1
 800044e:	2102      	movs	r1, #2
 8000450:	4806      	ldr	r0, [pc, #24]	; (800046c <LedControl_SetStatus+0x74>)
 8000452:	f000 fc65 	bl	8000d20 <GPIO_WriteBit>
			break;
 8000456:	e004      	b.n	8000462 <LedControl_SetStatus+0x6a>
				GPIO_WriteBit(LED1_RED_GPIO_PORT, LED1_RED_GPIO_PIN, 0);
 8000458:	2200      	movs	r2, #0
 800045a:	2102      	movs	r1, #2
 800045c:	4803      	ldr	r0, [pc, #12]	; (800046c <LedControl_SetStatus+0x74>)
 800045e:	f000 fc5f 	bl	8000d20 <GPIO_WriteBit>
			break;
 8000462:	bf00      	nop
}
 8000464:	bf00      	nop
 8000466:	3708      	adds	r7, #8
 8000468:	46bd      	mov	sp, r7
 800046a:	bd80      	pop	{r7, pc}
 800046c:	40020000 	.word	0x40020000

08000470 <CalculatorTime>:

}

//Calculate time
uint32_t CalculatorTime(uint32_t dwTimeInit, uint32_t dwTimeCurrent)
{
 8000470:	b480      	push	{r7}
 8000472:	b085      	sub	sp, #20
 8000474:	af00      	add	r7, sp, #0
 8000476:	6078      	str	r0, [r7, #4]
 8000478:	6039      	str	r1, [r7, #0]
	uint32_t dwTimeTotal;

	if(dwTimeCurrent >= dwTimeInit)
 800047a:	683a      	ldr	r2, [r7, #0]
 800047c:	687b      	ldr	r3, [r7, #4]
 800047e:	429a      	cmp	r2, r3
 8000480:	d304      	bcc.n	800048c <CalculatorTime+0x1c>
	{
		dwTimeTotal = dwTimeCurrent - dwTimeInit;
 8000482:	683a      	ldr	r2, [r7, #0]
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	1ad3      	subs	r3, r2, r3
 8000488:	60fb      	str	r3, [r7, #12]
 800048a:	e004      	b.n	8000496 <CalculatorTime+0x26>
	}
	else
	{
		dwTimeTotal = 0xFFFFFFFFU + dwTimeCurrent - dwTimeInit;
 800048c:	683a      	ldr	r2, [r7, #0]
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	1ad3      	subs	r3, r2, r3
 8000492:	3b01      	subs	r3, #1
 8000494:	60fb      	str	r3, [r7, #12]
	}
	return dwTimeTotal;
 8000496:	68fb      	ldr	r3, [r7, #12]
}
 8000498:	4618      	mov	r0, r3
 800049a:	3714      	adds	r7, #20
 800049c:	46bd      	mov	sp, r7
 800049e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004a2:	4770      	bx	lr

080004a4 <Blinkled_StatusPower>:

//inform that device is powered
static void Blinkled_StatusPower(uint8_t time)
{
 80004a4:	b580      	push	{r7, lr}
 80004a6:	b084      	sub	sp, #16
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	4603      	mov	r3, r0
 80004ac:	71fb      	strb	r3, [r7, #7]
	for(uint8_t i = 0; i < time - 1; i++)
 80004ae:	2300      	movs	r3, #0
 80004b0:	73fb      	strb	r3, [r7, #15]
 80004b2:	e010      	b.n	80004d6 <Blinkled_StatusPower+0x32>
	{
		LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 80004b4:	2101      	movs	r1, #1
 80004b6:	2000      	movs	r0, #0
 80004b8:	f7ff ff9e 	bl	80003f8 <LedControl_SetStatus>
		delay(50);
 80004bc:	2032      	movs	r0, #50	; 0x32
 80004be:	f000 f95b 	bl	8000778 <delay>
		LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 80004c2:	2100      	movs	r1, #0
 80004c4:	2000      	movs	r0, #0
 80004c6:	f7ff ff97 	bl	80003f8 <LedControl_SetStatus>
		delay(50);
 80004ca:	2032      	movs	r0, #50	; 0x32
 80004cc:	f000 f954 	bl	8000778 <delay>
	for(uint8_t i = 0; i < time - 1; i++)
 80004d0:	7bfb      	ldrb	r3, [r7, #15]
 80004d2:	3301      	adds	r3, #1
 80004d4:	73fb      	strb	r3, [r7, #15]
 80004d6:	7bfa      	ldrb	r2, [r7, #15]
 80004d8:	79fb      	ldrb	r3, [r7, #7]
 80004da:	3b01      	subs	r3, #1
 80004dc:	429a      	cmp	r2, r3
 80004de:	dbe9      	blt.n	80004b4 <Blinkled_StatusPower+0x10>
	}

	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 80004e0:	2101      	movs	r1, #1
 80004e2:	2000      	movs	r0, #0
 80004e4:	f7ff ff88 	bl	80003f8 <LedControl_SetStatus>
	delay(50);
 80004e8:	2032      	movs	r0, #50	; 0x32
 80004ea:	f000 f945 	bl	8000778 <delay>
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 80004ee:	2100      	movs	r1, #0
 80004f0:	2000      	movs	r0, #0
 80004f2:	f7ff ff81 	bl	80003f8 <LedControl_SetStatus>
}
 80004f6:	bf00      	nop
 80004f8:	3710      	adds	r7, #16
 80004fa:	46bd      	mov	sp, r7
 80004fc:	bd80      	pop	{r7, pc}
	...

08000500 <StatusConnected>:

//inform that device is connected
static void StatusConnected()
{
 8000500:	b580      	push	{r7, lr}
 8000502:	af00      	add	r7, sp, #0
	//turn on LED
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 8000504:	2101      	movs	r1, #1
 8000506:	2000      	movs	r0, #0
 8000508:	f7ff ff76 	bl	80003f8 <LedControl_SetStatus>
	//turn on BUZZER
	GPIO_WriteBit(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 1);
 800050c:	2201      	movs	r2, #1
 800050e:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000512:	482b      	ldr	r0, [pc, #172]	; (80005c0 <StatusConnected+0xc0>)
 8000514:	f000 fc04 	bl	8000d20 <GPIO_WriteBit>
	delay(50);
 8000518:	2032      	movs	r0, #50	; 0x32
 800051a:	f000 f92d 	bl	8000778 <delay>
	//turn off LED
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 800051e:	2100      	movs	r1, #0
 8000520:	2000      	movs	r0, #0
 8000522:	f7ff ff69 	bl	80003f8 <LedControl_SetStatus>
	//turn off BUZZER
	GPIO_WriteBit(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 0);
 8000526:	2200      	movs	r2, #0
 8000528:	f44f 7100 	mov.w	r1, #512	; 0x200
 800052c:	4824      	ldr	r0, [pc, #144]	; (80005c0 <StatusConnected+0xc0>)
 800052e:	f000 fbf7 	bl	8000d20 <GPIO_WriteBit>
	delay(50);
 8000532:	2032      	movs	r0, #50	; 0x32
 8000534:	f000 f920 	bl	8000778 <delay>

	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 8000538:	2101      	movs	r1, #1
 800053a:	2000      	movs	r0, #0
 800053c:	f7ff ff5c 	bl	80003f8 <LedControl_SetStatus>
	GPIO_WriteBit(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 1);
 8000540:	2201      	movs	r2, #1
 8000542:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000546:	481e      	ldr	r0, [pc, #120]	; (80005c0 <StatusConnected+0xc0>)
 8000548:	f000 fbea 	bl	8000d20 <GPIO_WriteBit>
	delay(50);
 800054c:	2032      	movs	r0, #50	; 0x32
 800054e:	f000 f913 	bl	8000778 <delay>
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 8000552:	2100      	movs	r1, #0
 8000554:	2000      	movs	r0, #0
 8000556:	f7ff ff4f 	bl	80003f8 <LedControl_SetStatus>
	GPIO_WriteBit(BUZZER_GPIO_PORT, BUZZER_GPIO_PIN, 0);
 800055a:	2200      	movs	r2, #0
 800055c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8000560:	4817      	ldr	r0, [pc, #92]	; (80005c0 <StatusConnected+0xc0>)
 8000562:	f000 fbdd 	bl	8000d20 <GPIO_WriteBit>
	delay(50);
 8000566:	2032      	movs	r0, #50	; 0x32
 8000568:	f000 f906 	bl	8000778 <delay>

	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 800056c:	2101      	movs	r1, #1
 800056e:	2000      	movs	r0, #0
 8000570:	f7ff ff42 	bl	80003f8 <LedControl_SetStatus>
	delay(50);
 8000574:	2032      	movs	r0, #50	; 0x32
 8000576:	f000 f8ff 	bl	8000778 <delay>
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 800057a:	2100      	movs	r1, #0
 800057c:	2000      	movs	r0, #0
 800057e:	f7ff ff3b 	bl	80003f8 <LedControl_SetStatus>
	delay(50);
 8000582:	2032      	movs	r0, #50	; 0x32
 8000584:	f000 f8f8 	bl	8000778 <delay>

	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 8000588:	2101      	movs	r1, #1
 800058a:	2000      	movs	r0, #0
 800058c:	f7ff ff34 	bl	80003f8 <LedControl_SetStatus>
	delay(50);
 8000590:	2032      	movs	r0, #50	; 0x32
 8000592:	f000 f8f1 	bl	8000778 <delay>
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 8000596:	2100      	movs	r1, #0
 8000598:	2000      	movs	r0, #0
 800059a:	f7ff ff2d 	bl	80003f8 <LedControl_SetStatus>
	delay(50);
 800059e:	2032      	movs	r0, #50	; 0x32
 80005a0:	f000 f8ea 	bl	8000778 <delay>

	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_SET);
 80005a4:	2101      	movs	r1, #1
 80005a6:	2000      	movs	r0, #0
 80005a8:	f7ff ff26 	bl	80003f8 <LedControl_SetStatus>
	delay(50);
 80005ac:	2032      	movs	r0, #50	; 0x32
 80005ae:	f000 f8e3 	bl	8000778 <delay>
	LedControl_SetStatus(LED1_GREEN_ID, GPIO_PIN_RESET);
 80005b2:	2100      	movs	r1, #0
 80005b4:	2000      	movs	r0, #0
 80005b6:	f7ff ff1f 	bl	80003f8 <LedControl_SetStatus>
}
 80005ba:	bf00      	nop
 80005bc:	bd80      	pop	{r7, pc}
 80005be:	bf00      	nop
 80005c0:	40020800 	.word	0x40020800

080005c4 <LedControl_TimPress>:

static void LedControl_TimPress (void)
{
 80005c4:	b598      	push	{r3, r4, r7, lr}
 80005c6:	af00      	add	r7, sp, #0
	if(buttonB2.state == BUTTON_PRESSED && buttonB2.wait == 0)
 80005c8:	4b2a      	ldr	r3, [pc, #168]	; (8000674 <LedControl_TimPress+0xb0>)
 80005ca:	781b      	ldrb	r3, [r3, #0]
 80005cc:	2b01      	cmp	r3, #1
 80005ce:	d11a      	bne.n	8000606 <LedControl_TimPress+0x42>
 80005d0:	4b28      	ldr	r3, [pc, #160]	; (8000674 <LedControl_TimPress+0xb0>)
 80005d2:	7d1b      	ldrb	r3, [r3, #20]
 80005d4:	2b00      	cmp	r3, #0
 80005d6:	d116      	bne.n	8000606 <LedControl_TimPress+0x42>
	{
		if(CalculatorTime(buttonB2.timePress, GetMilSecTick()) > 500)
 80005d8:	4b26      	ldr	r3, [pc, #152]	; (8000674 <LedControl_TimPress+0xb0>)
 80005da:	685c      	ldr	r4, [r3, #4]
 80005dc:	f000 fd50 	bl	8001080 <GetMilSecTick>
 80005e0:	4603      	mov	r3, r0
 80005e2:	4619      	mov	r1, r3
 80005e4:	4620      	mov	r0, r4
 80005e6:	f7ff ff43 	bl	8000470 <CalculatorTime>
 80005ea:	4603      	mov	r3, r0
 80005ec:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 80005f0:	d913      	bls.n	800061a <LedControl_TimPress+0x56>
		{
			buttonB2.count = 0;
 80005f2:	4b20      	ldr	r3, [pc, #128]	; (8000674 <LedControl_TimPress+0xb0>)
 80005f4:	2200      	movs	r2, #0
 80005f6:	721a      	strb	r2, [r3, #8]
			GPIO_WriteBit(LED2_BLUE_GPIO_PORT, LED2_BLUE_GPIO_PIN, 1);
 80005f8:	2201      	movs	r2, #1
 80005fa:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80005fe:	481e      	ldr	r0, [pc, #120]	; (8000678 <LedControl_TimPress+0xb4>)
 8000600:	f000 fb8e 	bl	8000d20 <GPIO_WriteBit>
		if(CalculatorTime(buttonB2.timePress, GetMilSecTick()) > 500)
 8000604:	e009      	b.n	800061a <LedControl_TimPress+0x56>
		}
	}
	else
	{
		if(buttonB2.wait == 0)
 8000606:	4b1b      	ldr	r3, [pc, #108]	; (8000674 <LedControl_TimPress+0xb0>)
 8000608:	7d1b      	ldrb	r3, [r3, #20]
 800060a:	2b00      	cmp	r3, #0
 800060c:	d105      	bne.n	800061a <LedControl_TimPress+0x56>
		{
			GPIO_WriteBit(LED2_BLUE_GPIO_PORT, LED2_BLUE_GPIO_PIN, 0);
 800060e:	2200      	movs	r2, #0
 8000610:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000614:	4818      	ldr	r0, [pc, #96]	; (8000678 <LedControl_TimPress+0xb4>)
 8000616:	f000 fb83 	bl	8000d20 <GPIO_WriteBit>
		}
	}
	if(buttonB4.state == BUTTON_PRESSED && buttonB4.wait == 0)
 800061a:	4b18      	ldr	r3, [pc, #96]	; (800067c <LedControl_TimPress+0xb8>)
 800061c:	781b      	ldrb	r3, [r3, #0]
 800061e:	2b01      	cmp	r3, #1
 8000620:	d11a      	bne.n	8000658 <LedControl_TimPress+0x94>
 8000622:	4b16      	ldr	r3, [pc, #88]	; (800067c <LedControl_TimPress+0xb8>)
 8000624:	7d1b      	ldrb	r3, [r3, #20]
 8000626:	2b00      	cmp	r3, #0
 8000628:	d116      	bne.n	8000658 <LedControl_TimPress+0x94>
	{
		if(CalculatorTime(buttonB4.timePress, GetMilSecTick()) > 500)
 800062a:	4b14      	ldr	r3, [pc, #80]	; (800067c <LedControl_TimPress+0xb8>)
 800062c:	685c      	ldr	r4, [r3, #4]
 800062e:	f000 fd27 	bl	8001080 <GetMilSecTick>
 8000632:	4603      	mov	r3, r0
 8000634:	4619      	mov	r1, r3
 8000636:	4620      	mov	r0, r4
 8000638:	f7ff ff1a 	bl	8000470 <CalculatorTime>
 800063c:	4603      	mov	r3, r0
 800063e:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8000642:	d914      	bls.n	800066e <LedControl_TimPress+0xaa>
		{
			buttonB4.count = 0;
 8000644:	4b0d      	ldr	r3, [pc, #52]	; (800067c <LedControl_TimPress+0xb8>)
 8000646:	2200      	movs	r2, #0
 8000648:	721a      	strb	r2, [r3, #8]
			GPIO_WriteBit(LED2_RED_GPIO_PORT, LED2_RED_GPIO_PIN, 1);
 800064a:	2201      	movs	r2, #1
 800064c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000650:	480b      	ldr	r0, [pc, #44]	; (8000680 <LedControl_TimPress+0xbc>)
 8000652:	f000 fb65 	bl	8000d20 <GPIO_WriteBit>
		if(CalculatorTime(buttonB4.timePress, GetMilSecTick()) > 500)
 8000656:	e00a      	b.n	800066e <LedControl_TimPress+0xaa>
		}
	}
	else
	{
		if(buttonB4.wait == 0)
 8000658:	4b08      	ldr	r3, [pc, #32]	; (800067c <LedControl_TimPress+0xb8>)
 800065a:	7d1b      	ldrb	r3, [r3, #20]
 800065c:	2b00      	cmp	r3, #0
 800065e:	d106      	bne.n	800066e <LedControl_TimPress+0xaa>
		{
			GPIO_WriteBit(LED2_RED_GPIO_PORT, LED2_RED_GPIO_PIN, 0);
 8000660:	2200      	movs	r2, #0
 8000662:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000666:	4806      	ldr	r0, [pc, #24]	; (8000680 <LedControl_TimPress+0xbc>)
 8000668:	f000 fb5a 	bl	8000d20 <GPIO_WriteBit>
		}

	}
}
 800066c:	e7ff      	b.n	800066e <LedControl_TimPress+0xaa>
 800066e:	bf00      	nop
 8000670:	bd98      	pop	{r3, r4, r7, pc}
 8000672:	bf00      	nop
 8000674:	200001e0 	.word	0x200001e0
 8000678:	40020000 	.word	0x40020000
 800067c:	200001c8 	.word	0x200001c8
 8000680:	40020400 	.word	0x40020400

08000684 <LedControl_TimOutPress>:

uint8_t dem = 0;

static void LedControl_TimOutPress(void)
{
 8000684:	b598      	push	{r3, r4, r7, lr}
 8000686:	af00      	add	r7, sp, #0
	if(buttonB2.count == 2 && buttonB2.state == BUTTON_RELEASED)
 8000688:	4b2d      	ldr	r3, [pc, #180]	; (8000740 <LedControl_TimOutPress+0xbc>)
 800068a:	7a1b      	ldrb	r3, [r3, #8]
 800068c:	2b02      	cmp	r3, #2
 800068e:	d11a      	bne.n	80006c6 <LedControl_TimOutPress+0x42>
 8000690:	4b2b      	ldr	r3, [pc, #172]	; (8000740 <LedControl_TimOutPress+0xbc>)
 8000692:	781b      	ldrb	r3, [r3, #0]
 8000694:	2b00      	cmp	r3, #0
 8000696:	d116      	bne.n	80006c6 <LedControl_TimOutPress+0x42>
	{
//		time1 = CalculatorTime(time, GetMilSecTick());
		if(CalculatorTime(buttonB2.firtsRelease, GetMilSecTick()) == 400)
 8000698:	4b29      	ldr	r3, [pc, #164]	; (8000740 <LedControl_TimOutPress+0xbc>)
 800069a:	691c      	ldr	r4, [r3, #16]
 800069c:	f000 fcf0 	bl	8001080 <GetMilSecTick>
 80006a0:	4603      	mov	r3, r0
 80006a2:	4619      	mov	r1, r3
 80006a4:	4620      	mov	r0, r4
 80006a6:	f7ff fee3 	bl	8000470 <CalculatorTime>
 80006aa:	4603      	mov	r3, r0
 80006ac:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 80006b0:	d116      	bne.n	80006e0 <LedControl_TimOutPress+0x5c>
		{
			GPIO_WriteBit(LED2_BLUE_GPIO_PORT, LED2_BLUE_GPIO_PIN, 1);
 80006b2:	2201      	movs	r2, #1
 80006b4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006b8:	4822      	ldr	r0, [pc, #136]	; (8000744 <LedControl_TimOutPress+0xc0>)
 80006ba:	f000 fb31 	bl	8000d20 <GPIO_WriteBit>
			buttonB2.wait = 1;
 80006be:	4b20      	ldr	r3, [pc, #128]	; (8000740 <LedControl_TimOutPress+0xbc>)
 80006c0:	2201      	movs	r2, #1
 80006c2:	751a      	strb	r2, [r3, #20]
		if(CalculatorTime(buttonB2.firtsRelease, GetMilSecTick()) == 400)
 80006c4:	e00c      	b.n	80006e0 <LedControl_TimOutPress+0x5c>
		}
	}
	else if(buttonB2.wait == 1)
 80006c6:	4b1e      	ldr	r3, [pc, #120]	; (8000740 <LedControl_TimOutPress+0xbc>)
 80006c8:	7d1b      	ldrb	r3, [r3, #20]
 80006ca:	2b01      	cmp	r3, #1
 80006cc:	d108      	bne.n	80006e0 <LedControl_TimOutPress+0x5c>
	{
		buttonB2.wait = 0;
 80006ce:	4b1c      	ldr	r3, [pc, #112]	; (8000740 <LedControl_TimOutPress+0xbc>)
 80006d0:	2200      	movs	r2, #0
 80006d2:	751a      	strb	r2, [r3, #20]
		GPIO_WriteBit(LED2_BLUE_GPIO_PORT, LED2_BLUE_GPIO_PIN, 0);
 80006d4:	2200      	movs	r2, #0
 80006d6:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80006da:	481a      	ldr	r0, [pc, #104]	; (8000744 <LedControl_TimOutPress+0xc0>)
 80006dc:	f000 fb20 	bl	8000d20 <GPIO_WriteBit>
	}
	if(buttonB4.count == 2 && buttonB4.state == BUTTON_RELEASED)
 80006e0:	4b19      	ldr	r3, [pc, #100]	; (8000748 <LedControl_TimOutPress+0xc4>)
 80006e2:	7a1b      	ldrb	r3, [r3, #8]
 80006e4:	2b02      	cmp	r3, #2
 80006e6:	d11a      	bne.n	800071e <LedControl_TimOutPress+0x9a>
 80006e8:	4b17      	ldr	r3, [pc, #92]	; (8000748 <LedControl_TimOutPress+0xc4>)
 80006ea:	781b      	ldrb	r3, [r3, #0]
 80006ec:	2b00      	cmp	r3, #0
 80006ee:	d116      	bne.n	800071e <LedControl_TimOutPress+0x9a>
		{
//		time1 = CalculatorTime(time, GetMilSecTick());
		if(CalculatorTime(buttonB4.firtsRelease, GetMilSecTick()) == 400)
 80006f0:	4b15      	ldr	r3, [pc, #84]	; (8000748 <LedControl_TimOutPress+0xc4>)
 80006f2:	691c      	ldr	r4, [r3, #16]
 80006f4:	f000 fcc4 	bl	8001080 <GetMilSecTick>
 80006f8:	4603      	mov	r3, r0
 80006fa:	4619      	mov	r1, r3
 80006fc:	4620      	mov	r0, r4
 80006fe:	f7ff feb7 	bl	8000470 <CalculatorTime>
 8000702:	4603      	mov	r3, r0
 8000704:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8000708:	d117      	bne.n	800073a <LedControl_TimOutPress+0xb6>
		{
			GPIO_WriteBit(LED2_RED_GPIO_PORT, LED2_RED_GPIO_PIN, 1);
 800070a:	2201      	movs	r2, #1
 800070c:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000710:	480e      	ldr	r0, [pc, #56]	; (800074c <LedControl_TimOutPress+0xc8>)
 8000712:	f000 fb05 	bl	8000d20 <GPIO_WriteBit>
			buttonB4.wait = 1;
 8000716:	4b0c      	ldr	r3, [pc, #48]	; (8000748 <LedControl_TimOutPress+0xc4>)
 8000718:	2201      	movs	r2, #1
 800071a:	751a      	strb	r2, [r3, #20]
		if(CalculatorTime(buttonB4.firtsRelease, GetMilSecTick()) == 400)
 800071c:	e00d      	b.n	800073a <LedControl_TimOutPress+0xb6>
		}
	}
	else if(buttonB4.wait == 1)
 800071e:	4b0a      	ldr	r3, [pc, #40]	; (8000748 <LedControl_TimOutPress+0xc4>)
 8000720:	7d1b      	ldrb	r3, [r3, #20]
 8000722:	2b01      	cmp	r3, #1
 8000724:	d109      	bne.n	800073a <LedControl_TimOutPress+0xb6>
	{
		buttonB4.wait = 0;
 8000726:	4b08      	ldr	r3, [pc, #32]	; (8000748 <LedControl_TimOutPress+0xc4>)
 8000728:	2200      	movs	r2, #0
 800072a:	751a      	strb	r2, [r3, #20]
		GPIO_WriteBit(LED2_RED_GPIO_PORT, LED2_RED_GPIO_PIN, 0);
 800072c:	2200      	movs	r2, #0
 800072e:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8000732:	4806      	ldr	r0, [pc, #24]	; (800074c <LedControl_TimOutPress+0xc8>)
 8000734:	f000 faf4 	bl	8000d20 <GPIO_WriteBit>
	}
}
 8000738:	e7ff      	b.n	800073a <LedControl_TimOutPress+0xb6>
 800073a:	bf00      	nop
 800073c:	bd98      	pop	{r3, r4, r7, pc}
 800073e:	bf00      	nop
 8000740:	200001e0 	.word	0x200001e0
 8000744:	40020000 	.word	0x40020000
 8000748:	200001c8 	.word	0x200001c8
 800074c:	40020400 	.word	0x40020400

08000750 <main>:

int main(void)
{
 8000750:	b580      	push	{r7, lr}
 8000752:	af00      	add	r7, sp, #0
    LedBuzz_Init();
 8000754:	f7ff fd82 	bl	800025c <LedBuzz_Init>
    Button_Init();
 8000758:	f7ff fdd0 	bl	80002fc <Button_Init>
    Button_Init1();
 800075c:	f7ff fd3a 	bl	80001d4 <Button_Init1>
    Interrupt_Init();
 8000760:	f7ff fdfe 	bl	8000360 <Interrupt_Init>
    Blinkled_StatusPower(4);
 8000764:	2004      	movs	r0, #4
 8000766:	f7ff fe9d 	bl	80004a4 <Blinkled_StatusPower>
    TimerInit();
 800076a:	f000 fc67 	bl	800103c <TimerInit>
    while(1)
    {
		LedControl_TimPress();
 800076e:	f7ff ff29 	bl	80005c4 <LedControl_TimPress>
    	LedControl_TimOutPress();
 8000772:	f7ff ff87 	bl	8000684 <LedControl_TimOutPress>
		LedControl_TimPress();
 8000776:	e7fa      	b.n	800076e <main+0x1e>

08000778 <delay>:
    }
}

void delay(uint32_t millisecond)
{
 8000778:	b480      	push	{r7}
 800077a:	b085      	sub	sp, #20
 800077c:	af00      	add	r7, sp, #0
 800077e:	6078      	str	r0, [r7, #4]
	for(uint32_t i = 0; i < millisecond; i++)
 8000780:	2300      	movs	r3, #0
 8000782:	60fb      	str	r3, [r7, #12]
 8000784:	e00d      	b.n	80007a2 <delay+0x2a>
	{
		for(uint32_t j = 0; j < 5000; j++);
 8000786:	2300      	movs	r3, #0
 8000788:	60bb      	str	r3, [r7, #8]
 800078a:	e002      	b.n	8000792 <delay+0x1a>
 800078c:	68bb      	ldr	r3, [r7, #8]
 800078e:	3301      	adds	r3, #1
 8000790:	60bb      	str	r3, [r7, #8]
 8000792:	68bb      	ldr	r3, [r7, #8]
 8000794:	f241 3287 	movw	r2, #4999	; 0x1387
 8000798:	4293      	cmp	r3, r2
 800079a:	d9f7      	bls.n	800078c <delay+0x14>
	for(uint32_t i = 0; i < millisecond; i++)
 800079c:	68fb      	ldr	r3, [r7, #12]
 800079e:	3301      	adds	r3, #1
 80007a0:	60fb      	str	r3, [r7, #12]
 80007a2:	68fa      	ldr	r2, [r7, #12]
 80007a4:	687b      	ldr	r3, [r7, #4]
 80007a6:	429a      	cmp	r2, r3
 80007a8:	d3ed      	bcc.n	8000786 <delay+0xe>
	}
}
 80007aa:	bf00      	nop
 80007ac:	bf00      	nop
 80007ae:	3714      	adds	r7, #20
 80007b0:	46bd      	mov	sp, r7
 80007b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007b6:	4770      	bx	lr

080007b8 <EXTI3_IRQHandler>:

//B2 interrupt handle
void EXTI3_IRQHandler(void)
{
 80007b8:	b580      	push	{r7, lr}
 80007ba:	af00      	add	r7, sp, #0
	if(EXTI_GetFlagStatus(EXTI_Line3) == SET)
 80007bc:	2008      	movs	r0, #8
 80007be:	f000 f9dd 	bl	8000b7c <EXTI_GetFlagStatus>
 80007c2:	4603      	mov	r3, r0
 80007c4:	2b01      	cmp	r3, #1
 80007c6:	d141      	bne.n	800084c <EXTI3_IRQHandler+0x94>
	{
		if(! GPIO_ReadInputDataBit(BUTTONB2_GPIO_PORT, BUTTONB2_GPIO_PIN))// Press button B2
 80007c8:	2108      	movs	r1, #8
 80007ca:	4823      	ldr	r0, [pc, #140]	; (8000858 <EXTI3_IRQHandler+0xa0>)
 80007cc:	f000 fa8e 	bl	8000cec <GPIO_ReadInputDataBit>
 80007d0:	4603      	mov	r3, r0
 80007d2:	2b00      	cmp	r3, #0
 80007d4:	d10e      	bne.n	80007f4 <EXTI3_IRQHandler+0x3c>
		{
			buttonB2.state = BUTTON_PRESSED;
 80007d6:	4b21      	ldr	r3, [pc, #132]	; (800085c <EXTI3_IRQHandler+0xa4>)
 80007d8:	2201      	movs	r2, #1
 80007da:	701a      	strb	r2, [r3, #0]
			buttonB2.timePress = GetMilSecTick();
 80007dc:	f000 fc50 	bl	8001080 <GetMilSecTick>
 80007e0:	4603      	mov	r3, r0
 80007e2:	4a1e      	ldr	r2, [pc, #120]	; (800085c <EXTI3_IRQHandler+0xa4>)
 80007e4:	6053      	str	r3, [r2, #4]
			buttonB2.count++;
 80007e6:	4b1d      	ldr	r3, [pc, #116]	; (800085c <EXTI3_IRQHandler+0xa4>)
 80007e8:	7a1b      	ldrb	r3, [r3, #8]
 80007ea:	3301      	adds	r3, #1
 80007ec:	b2da      	uxtb	r2, r3
 80007ee:	4b1b      	ldr	r3, [pc, #108]	; (800085c <EXTI3_IRQHandler+0xa4>)
 80007f0:	721a      	strb	r2, [r3, #8]
 80007f2:	e02b      	b.n	800084c <EXTI3_IRQHandler+0x94>
		}
		else
		{
			buttonB2.state = BUTTON_RELEASED;
 80007f4:	4b19      	ldr	r3, [pc, #100]	; (800085c <EXTI3_IRQHandler+0xa4>)
 80007f6:	2200      	movs	r2, #0
 80007f8:	701a      	strb	r2, [r3, #0]
			buttonB2.timeReleased = GetMilSecTick();
 80007fa:	f000 fc41 	bl	8001080 <GetMilSecTick>
 80007fe:	4603      	mov	r3, r0
 8000800:	4a16      	ldr	r2, [pc, #88]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000802:	60d3      	str	r3, [r2, #12]
			if(buttonB2.count == 1)
 8000804:	4b15      	ldr	r3, [pc, #84]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000806:	7a1b      	ldrb	r3, [r3, #8]
 8000808:	2b01      	cmp	r3, #1
 800080a:	d104      	bne.n	8000816 <EXTI3_IRQHandler+0x5e>
				buttonB2.firtsRelease = buttonB2.timeReleased;
 800080c:	4b13      	ldr	r3, [pc, #76]	; (800085c <EXTI3_IRQHandler+0xa4>)
 800080e:	68db      	ldr	r3, [r3, #12]
 8000810:	4a12      	ldr	r2, [pc, #72]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000812:	6113      	str	r3, [r2, #16]
 8000814:	e01a      	b.n	800084c <EXTI3_IRQHandler+0x94>
			else {
				if(buttonB2.count == 2)
 8000816:	4b11      	ldr	r3, [pc, #68]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000818:	7a1b      	ldrb	r3, [r3, #8]
 800081a:	2b02      	cmp	r3, #2
 800081c:	d10f      	bne.n	800083e <EXTI3_IRQHandler+0x86>
				{
					if(CalculatorTime(buttonB2.firtsRelease, buttonB2.timeReleased) > 400)
 800081e:	4b0f      	ldr	r3, [pc, #60]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000820:	691b      	ldr	r3, [r3, #16]
 8000822:	4a0e      	ldr	r2, [pc, #56]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000824:	68d2      	ldr	r2, [r2, #12]
 8000826:	4611      	mov	r1, r2
 8000828:	4618      	mov	r0, r3
 800082a:	f7ff fe21 	bl	8000470 <CalculatorTime>
 800082e:	4603      	mov	r3, r0
 8000830:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8000834:	d90a      	bls.n	800084c <EXTI3_IRQHandler+0x94>
					{
						buttonB2.count = 0;
 8000836:	4b09      	ldr	r3, [pc, #36]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000838:	2200      	movs	r2, #0
 800083a:	721a      	strb	r2, [r3, #8]
 800083c:	e006      	b.n	800084c <EXTI3_IRQHandler+0x94>
					}
				}
				else
				{
					if(buttonB2.count > 2)
 800083e:	4b07      	ldr	r3, [pc, #28]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000840:	7a1b      	ldrb	r3, [r3, #8]
 8000842:	2b02      	cmp	r3, #2
 8000844:	d902      	bls.n	800084c <EXTI3_IRQHandler+0x94>
						buttonB2.count = 0;
 8000846:	4b05      	ldr	r3, [pc, #20]	; (800085c <EXTI3_IRQHandler+0xa4>)
 8000848:	2200      	movs	r2, #0
 800084a:	721a      	strb	r2, [r3, #8]
				}
			}

		}
	}
	EXTI_ClearITPendingBit(EXTI_Line3);
 800084c:	2008      	movs	r0, #8
 800084e:	f000 f9af 	bl	8000bb0 <EXTI_ClearITPendingBit>
}
 8000852:	bf00      	nop
 8000854:	bd80      	pop	{r7, pc}
 8000856:	bf00      	nop
 8000858:	40020400 	.word	0x40020400
 800085c:	200001e0 	.word	0x200001e0

08000860 <EXTI4_IRQHandler>:

//B3 interrupt handle
void EXTI4_IRQHandler(void)
{
 8000860:	b580      	push	{r7, lr}
 8000862:	af00      	add	r7, sp, #0
	if(EXTI_GetFlagStatus(EXTI_Line4) == SET)
 8000864:	2010      	movs	r0, #16
 8000866:	f000 f989 	bl	8000b7c <EXTI_GetFlagStatus>
 800086a:	4603      	mov	r3, r0
 800086c:	2b01      	cmp	r3, #1
 800086e:	d127      	bne.n	80008c0 <EXTI4_IRQHandler+0x60>
	{
		if(GPIO_ReadInputDataBit(BUTTONB3_GPIO_PORT, BUTTONB3_GPIO_PIN))
 8000870:	2110      	movs	r1, #16
 8000872:	4816      	ldr	r0, [pc, #88]	; (80008cc <EXTI4_IRQHandler+0x6c>)
 8000874:	f000 fa3a 	bl	8000cec <GPIO_ReadInputDataBit>
 8000878:	4603      	mov	r3, r0
 800087a:	2b00      	cmp	r3, #0
 800087c:	d018      	beq.n	80008b0 <EXTI4_IRQHandler+0x50>
		{
			buttonB3.count++;
 800087e:	4b14      	ldr	r3, [pc, #80]	; (80008d0 <EXTI4_IRQHandler+0x70>)
 8000880:	7a1b      	ldrb	r3, [r3, #8]
 8000882:	3301      	adds	r3, #1
 8000884:	b2da      	uxtb	r2, r3
 8000886:	4b12      	ldr	r3, [pc, #72]	; (80008d0 <EXTI4_IRQHandler+0x70>)
 8000888:	721a      	strb	r2, [r3, #8]
			buttonB3.state = BUTTON_PRESSED;
 800088a:	4b11      	ldr	r3, [pc, #68]	; (80008d0 <EXTI4_IRQHandler+0x70>)
 800088c:	2201      	movs	r2, #1
 800088e:	701a      	strb	r2, [r3, #0]
			if(buttonB3.count % 5 == 0)
 8000890:	4b0f      	ldr	r3, [pc, #60]	; (80008d0 <EXTI4_IRQHandler+0x70>)
 8000892:	7a1a      	ldrb	r2, [r3, #8]
 8000894:	4b0f      	ldr	r3, [pc, #60]	; (80008d4 <EXTI4_IRQHandler+0x74>)
 8000896:	fba3 1302 	umull	r1, r3, r3, r2
 800089a:	0899      	lsrs	r1, r3, #2
 800089c:	460b      	mov	r3, r1
 800089e:	009b      	lsls	r3, r3, #2
 80008a0:	440b      	add	r3, r1
 80008a2:	1ad3      	subs	r3, r2, r3
 80008a4:	b2db      	uxtb	r3, r3
 80008a6:	2b00      	cmp	r3, #0
 80008a8:	d10a      	bne.n	80008c0 <EXTI4_IRQHandler+0x60>
			{
				StatusConnected();
 80008aa:	f7ff fe29 	bl	8000500 <StatusConnected>
 80008ae:	e007      	b.n	80008c0 <EXTI4_IRQHandler+0x60>
			}
		}
		else
		{
			buttonB3.timeReleased = GetMilSecTick();
 80008b0:	f000 fbe6 	bl	8001080 <GetMilSecTick>
 80008b4:	4603      	mov	r3, r0
 80008b6:	4a06      	ldr	r2, [pc, #24]	; (80008d0 <EXTI4_IRQHandler+0x70>)
 80008b8:	60d3      	str	r3, [r2, #12]
			buttonB3.state = BUTTON_RELEASED;
 80008ba:	4b05      	ldr	r3, [pc, #20]	; (80008d0 <EXTI4_IRQHandler+0x70>)
 80008bc:	2200      	movs	r2, #0
 80008be:	701a      	strb	r2, [r3, #0]
		}
	}
	EXTI_ClearITPendingBit(EXTI_Line4);//nãy có vào esle mà nhỉ
 80008c0:	2010      	movs	r0, #16
 80008c2:	f000 f975 	bl	8000bb0 <EXTI_ClearITPendingBit>
}
 80008c6:	bf00      	nop
 80008c8:	bd80      	pop	{r7, pc}
 80008ca:	bf00      	nop
 80008cc:	40020000 	.word	0x40020000
 80008d0:	200001b0 	.word	0x200001b0
 80008d4:	cccccccd 	.word	0xcccccccd

080008d8 <EXTI0_IRQHandler>:

//B4 interrupt handle
void EXTI0_IRQHandler(void)
{
 80008d8:	b580      	push	{r7, lr}
 80008da:	af00      	add	r7, sp, #0
	if(EXTI_GetFlagStatus(EXTI_Line0) == SET)
 80008dc:	2001      	movs	r0, #1
 80008de:	f000 f94d 	bl	8000b7c <EXTI_GetFlagStatus>
 80008e2:	4603      	mov	r3, r0
 80008e4:	2b01      	cmp	r3, #1
 80008e6:	d141      	bne.n	800096c <EXTI0_IRQHandler+0x94>
	{
		if(! GPIO_ReadInputDataBit(BUTTONB4_GPIO_PORT, BUTTONB4_GPIO_PIN))// Press button B2
 80008e8:	2101      	movs	r1, #1
 80008ea:	4823      	ldr	r0, [pc, #140]	; (8000978 <EXTI0_IRQHandler+0xa0>)
 80008ec:	f000 f9fe 	bl	8000cec <GPIO_ReadInputDataBit>
 80008f0:	4603      	mov	r3, r0
 80008f2:	2b00      	cmp	r3, #0
 80008f4:	d10e      	bne.n	8000914 <EXTI0_IRQHandler+0x3c>
		{
			buttonB4.state = BUTTON_PRESSED;
 80008f6:	4b21      	ldr	r3, [pc, #132]	; (800097c <EXTI0_IRQHandler+0xa4>)
 80008f8:	2201      	movs	r2, #1
 80008fa:	701a      	strb	r2, [r3, #0]
			buttonB4.timePress = GetMilSecTick();
 80008fc:	f000 fbc0 	bl	8001080 <GetMilSecTick>
 8000900:	4603      	mov	r3, r0
 8000902:	4a1e      	ldr	r2, [pc, #120]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000904:	6053      	str	r3, [r2, #4]
			buttonB4.count++;
 8000906:	4b1d      	ldr	r3, [pc, #116]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000908:	7a1b      	ldrb	r3, [r3, #8]
 800090a:	3301      	adds	r3, #1
 800090c:	b2da      	uxtb	r2, r3
 800090e:	4b1b      	ldr	r3, [pc, #108]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000910:	721a      	strb	r2, [r3, #8]
 8000912:	e02b      	b.n	800096c <EXTI0_IRQHandler+0x94>
		}
		else
		{
			buttonB4.state = BUTTON_RELEASED;
 8000914:	4b19      	ldr	r3, [pc, #100]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000916:	2200      	movs	r2, #0
 8000918:	701a      	strb	r2, [r3, #0]
			buttonB4.timeReleased = GetMilSecTick();
 800091a:	f000 fbb1 	bl	8001080 <GetMilSecTick>
 800091e:	4603      	mov	r3, r0
 8000920:	4a16      	ldr	r2, [pc, #88]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000922:	60d3      	str	r3, [r2, #12]
			if(buttonB4.count == 1)
 8000924:	4b15      	ldr	r3, [pc, #84]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000926:	7a1b      	ldrb	r3, [r3, #8]
 8000928:	2b01      	cmp	r3, #1
 800092a:	d104      	bne.n	8000936 <EXTI0_IRQHandler+0x5e>
				buttonB4.firtsRelease = buttonB4.timeReleased;
 800092c:	4b13      	ldr	r3, [pc, #76]	; (800097c <EXTI0_IRQHandler+0xa4>)
 800092e:	68db      	ldr	r3, [r3, #12]
 8000930:	4a12      	ldr	r2, [pc, #72]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000932:	6113      	str	r3, [r2, #16]
 8000934:	e01a      	b.n	800096c <EXTI0_IRQHandler+0x94>
			else {
				if(buttonB4.count == 2)
 8000936:	4b11      	ldr	r3, [pc, #68]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000938:	7a1b      	ldrb	r3, [r3, #8]
 800093a:	2b02      	cmp	r3, #2
 800093c:	d10f      	bne.n	800095e <EXTI0_IRQHandler+0x86>
				{
					if(CalculatorTime(buttonB4.firtsRelease, buttonB4.timeReleased) > 400)
 800093e:	4b0f      	ldr	r3, [pc, #60]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000940:	691b      	ldr	r3, [r3, #16]
 8000942:	4a0e      	ldr	r2, [pc, #56]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000944:	68d2      	ldr	r2, [r2, #12]
 8000946:	4611      	mov	r1, r2
 8000948:	4618      	mov	r0, r3
 800094a:	f7ff fd91 	bl	8000470 <CalculatorTime>
 800094e:	4603      	mov	r3, r0
 8000950:	f5b3 7fc8 	cmp.w	r3, #400	; 0x190
 8000954:	d90a      	bls.n	800096c <EXTI0_IRQHandler+0x94>
					{
						buttonB4.count = 0;
 8000956:	4b09      	ldr	r3, [pc, #36]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000958:	2200      	movs	r2, #0
 800095a:	721a      	strb	r2, [r3, #8]
 800095c:	e006      	b.n	800096c <EXTI0_IRQHandler+0x94>
					}
				}
				else
				{
					if(buttonB4.count > 2)
 800095e:	4b07      	ldr	r3, [pc, #28]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000960:	7a1b      	ldrb	r3, [r3, #8]
 8000962:	2b02      	cmp	r3, #2
 8000964:	d902      	bls.n	800096c <EXTI0_IRQHandler+0x94>
						buttonB4.count = 0;
 8000966:	4b05      	ldr	r3, [pc, #20]	; (800097c <EXTI0_IRQHandler+0xa4>)
 8000968:	2200      	movs	r2, #0
 800096a:	721a      	strb	r2, [r3, #8]
				}
			}
		}
	}
	EXTI_ClearITPendingBit(EXTI_Line0);
 800096c:	2001      	movs	r0, #1
 800096e:	f000 f91f 	bl	8000bb0 <EXTI_ClearITPendingBit>
}
 8000972:	bf00      	nop
 8000974:	bd80      	pop	{r7, pc}
 8000976:	bf00      	nop
 8000978:	40020400 	.word	0x40020400
 800097c:	200001c8 	.word	0x200001c8

08000980 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000980:	480d      	ldr	r0, [pc, #52]	; (80009b8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000982:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000984:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000988:	480c      	ldr	r0, [pc, #48]	; (80009bc <LoopForever+0x6>)
  ldr r1, =_edata
 800098a:	490d      	ldr	r1, [pc, #52]	; (80009c0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800098c:	4a0d      	ldr	r2, [pc, #52]	; (80009c4 <LoopForever+0xe>)
  movs r3, #0
 800098e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000990:	e002      	b.n	8000998 <LoopCopyDataInit>

08000992 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000992:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000994:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000996:	3304      	adds	r3, #4

08000998 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000998:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800099a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800099c:	d3f9      	bcc.n	8000992 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800099e:	4a0a      	ldr	r2, [pc, #40]	; (80009c8 <LoopForever+0x12>)
  ldr r4, =_ebss
 80009a0:	4c0a      	ldr	r4, [pc, #40]	; (80009cc <LoopForever+0x16>)
  movs r3, #0
 80009a2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80009a4:	e001      	b.n	80009aa <LoopFillZerobss>

080009a6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80009a6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80009a8:	3204      	adds	r2, #4

080009aa <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80009aa:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80009ac:	d3fb      	bcc.n	80009a6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80009ae:	f000 fb9b 	bl	80010e8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80009b2:	f7ff fecd 	bl	8000750 <main>

080009b6 <LoopForever>:

LoopForever:
    b LoopForever
 80009b6:	e7fe      	b.n	80009b6 <LoopForever>
  ldr   r0, =_estack
 80009b8:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 80009bc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80009c0:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 80009c4:	08001150 	.word	0x08001150
  ldr r2, =_sbss
 80009c8:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 80009cc:	200001f8 	.word	0x200001f8

080009d0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80009d0:	e7fe      	b.n	80009d0 <ADC_IRQHandler>
	...

080009d4 <NVIC_Init>:
 80009d4:	b480      	push	{r7}
 80009d6:	b085      	sub	sp, #20
 80009d8:	af00      	add	r7, sp, #0
 80009da:	6078      	str	r0, [r7, #4]
 80009dc:	2300      	movs	r3, #0
 80009de:	73fb      	strb	r3, [r7, #15]
 80009e0:	2300      	movs	r3, #0
 80009e2:	73bb      	strb	r3, [r7, #14]
 80009e4:	230f      	movs	r3, #15
 80009e6:	737b      	strb	r3, [r7, #13]
 80009e8:	687b      	ldr	r3, [r7, #4]
 80009ea:	78db      	ldrb	r3, [r3, #3]
 80009ec:	2b00      	cmp	r3, #0
 80009ee:	d039      	beq.n	8000a64 <NVIC_Init+0x90>
 80009f0:	4b27      	ldr	r3, [pc, #156]	; (8000a90 <NVIC_Init+0xbc>)
 80009f2:	68db      	ldr	r3, [r3, #12]
 80009f4:	43db      	mvns	r3, r3
 80009f6:	0a1b      	lsrs	r3, r3, #8
 80009f8:	b2db      	uxtb	r3, r3
 80009fa:	f003 0307 	and.w	r3, r3, #7
 80009fe:	73fb      	strb	r3, [r7, #15]
 8000a00:	7bfb      	ldrb	r3, [r7, #15]
 8000a02:	f1c3 0304 	rsb	r3, r3, #4
 8000a06:	73bb      	strb	r3, [r7, #14]
 8000a08:	7b7a      	ldrb	r2, [r7, #13]
 8000a0a:	7bfb      	ldrb	r3, [r7, #15]
 8000a0c:	fa42 f303 	asr.w	r3, r2, r3
 8000a10:	737b      	strb	r3, [r7, #13]
 8000a12:	687b      	ldr	r3, [r7, #4]
 8000a14:	785b      	ldrb	r3, [r3, #1]
 8000a16:	461a      	mov	r2, r3
 8000a18:	7bbb      	ldrb	r3, [r7, #14]
 8000a1a:	fa02 f303 	lsl.w	r3, r2, r3
 8000a1e:	73fb      	strb	r3, [r7, #15]
 8000a20:	687b      	ldr	r3, [r7, #4]
 8000a22:	789a      	ldrb	r2, [r3, #2]
 8000a24:	7b7b      	ldrb	r3, [r7, #13]
 8000a26:	4013      	ands	r3, r2
 8000a28:	b2da      	uxtb	r2, r3
 8000a2a:	7bfb      	ldrb	r3, [r7, #15]
 8000a2c:	4313      	orrs	r3, r2
 8000a2e:	73fb      	strb	r3, [r7, #15]
 8000a30:	7bfb      	ldrb	r3, [r7, #15]
 8000a32:	011b      	lsls	r3, r3, #4
 8000a34:	73fb      	strb	r3, [r7, #15]
 8000a36:	4a17      	ldr	r2, [pc, #92]	; (8000a94 <NVIC_Init+0xc0>)
 8000a38:	687b      	ldr	r3, [r7, #4]
 8000a3a:	781b      	ldrb	r3, [r3, #0]
 8000a3c:	4413      	add	r3, r2
 8000a3e:	7bfa      	ldrb	r2, [r7, #15]
 8000a40:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000a44:	687b      	ldr	r3, [r7, #4]
 8000a46:	781b      	ldrb	r3, [r3, #0]
 8000a48:	f003 031f 	and.w	r3, r3, #31
 8000a4c:	4911      	ldr	r1, [pc, #68]	; (8000a94 <NVIC_Init+0xc0>)
 8000a4e:	687a      	ldr	r2, [r7, #4]
 8000a50:	7812      	ldrb	r2, [r2, #0]
 8000a52:	0952      	lsrs	r2, r2, #5
 8000a54:	b2d2      	uxtb	r2, r2
 8000a56:	4610      	mov	r0, r2
 8000a58:	2201      	movs	r2, #1
 8000a5a:	fa02 f303 	lsl.w	r3, r2, r3
 8000a5e:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 8000a62:	e00f      	b.n	8000a84 <NVIC_Init+0xb0>
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	781b      	ldrb	r3, [r3, #0]
 8000a68:	f003 031f 	and.w	r3, r3, #31
 8000a6c:	4909      	ldr	r1, [pc, #36]	; (8000a94 <NVIC_Init+0xc0>)
 8000a6e:	687a      	ldr	r2, [r7, #4]
 8000a70:	7812      	ldrb	r2, [r2, #0]
 8000a72:	0952      	lsrs	r2, r2, #5
 8000a74:	b2d2      	uxtb	r2, r2
 8000a76:	4610      	mov	r0, r2
 8000a78:	2201      	movs	r2, #1
 8000a7a:	409a      	lsls	r2, r3
 8000a7c:	f100 0320 	add.w	r3, r0, #32
 8000a80:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000a84:	bf00      	nop
 8000a86:	3714      	adds	r7, #20
 8000a88:	46bd      	mov	sp, r7
 8000a8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a8e:	4770      	bx	lr
 8000a90:	e000ed00 	.word	0xe000ed00
 8000a94:	e000e100 	.word	0xe000e100

08000a98 <EXTI_Init>:
 8000a98:	b480      	push	{r7}
 8000a9a:	b085      	sub	sp, #20
 8000a9c:	af00      	add	r7, sp, #0
 8000a9e:	6078      	str	r0, [r7, #4]
 8000aa0:	2300      	movs	r3, #0
 8000aa2:	60fb      	str	r3, [r7, #12]
 8000aa4:	4b34      	ldr	r3, [pc, #208]	; (8000b78 <EXTI_Init+0xe0>)
 8000aa6:	60fb      	str	r3, [r7, #12]
 8000aa8:	687b      	ldr	r3, [r7, #4]
 8000aaa:	799b      	ldrb	r3, [r3, #6]
 8000aac:	2b00      	cmp	r3, #0
 8000aae:	d04f      	beq.n	8000b50 <EXTI_Init+0xb8>
 8000ab0:	4b31      	ldr	r3, [pc, #196]	; (8000b78 <EXTI_Init+0xe0>)
 8000ab2:	681a      	ldr	r2, [r3, #0]
 8000ab4:	687b      	ldr	r3, [r7, #4]
 8000ab6:	681b      	ldr	r3, [r3, #0]
 8000ab8:	43db      	mvns	r3, r3
 8000aba:	492f      	ldr	r1, [pc, #188]	; (8000b78 <EXTI_Init+0xe0>)
 8000abc:	4013      	ands	r3, r2
 8000abe:	600b      	str	r3, [r1, #0]
 8000ac0:	4b2d      	ldr	r3, [pc, #180]	; (8000b78 <EXTI_Init+0xe0>)
 8000ac2:	685a      	ldr	r2, [r3, #4]
 8000ac4:	687b      	ldr	r3, [r7, #4]
 8000ac6:	681b      	ldr	r3, [r3, #0]
 8000ac8:	43db      	mvns	r3, r3
 8000aca:	492b      	ldr	r1, [pc, #172]	; (8000b78 <EXTI_Init+0xe0>)
 8000acc:	4013      	ands	r3, r2
 8000ace:	604b      	str	r3, [r1, #4]
 8000ad0:	687b      	ldr	r3, [r7, #4]
 8000ad2:	791b      	ldrb	r3, [r3, #4]
 8000ad4:	461a      	mov	r2, r3
 8000ad6:	68fb      	ldr	r3, [r7, #12]
 8000ad8:	4413      	add	r3, r2
 8000ada:	60fb      	str	r3, [r7, #12]
 8000adc:	68fb      	ldr	r3, [r7, #12]
 8000ade:	6819      	ldr	r1, [r3, #0]
 8000ae0:	687b      	ldr	r3, [r7, #4]
 8000ae2:	681a      	ldr	r2, [r3, #0]
 8000ae4:	68fb      	ldr	r3, [r7, #12]
 8000ae6:	430a      	orrs	r2, r1
 8000ae8:	601a      	str	r2, [r3, #0]
 8000aea:	4b23      	ldr	r3, [pc, #140]	; (8000b78 <EXTI_Init+0xe0>)
 8000aec:	689a      	ldr	r2, [r3, #8]
 8000aee:	687b      	ldr	r3, [r7, #4]
 8000af0:	681b      	ldr	r3, [r3, #0]
 8000af2:	43db      	mvns	r3, r3
 8000af4:	4920      	ldr	r1, [pc, #128]	; (8000b78 <EXTI_Init+0xe0>)
 8000af6:	4013      	ands	r3, r2
 8000af8:	608b      	str	r3, [r1, #8]
 8000afa:	4b1f      	ldr	r3, [pc, #124]	; (8000b78 <EXTI_Init+0xe0>)
 8000afc:	68da      	ldr	r2, [r3, #12]
 8000afe:	687b      	ldr	r3, [r7, #4]
 8000b00:	681b      	ldr	r3, [r3, #0]
 8000b02:	43db      	mvns	r3, r3
 8000b04:	491c      	ldr	r1, [pc, #112]	; (8000b78 <EXTI_Init+0xe0>)
 8000b06:	4013      	ands	r3, r2
 8000b08:	60cb      	str	r3, [r1, #12]
 8000b0a:	687b      	ldr	r3, [r7, #4]
 8000b0c:	795b      	ldrb	r3, [r3, #5]
 8000b0e:	2b10      	cmp	r3, #16
 8000b10:	d10e      	bne.n	8000b30 <EXTI_Init+0x98>
 8000b12:	4b19      	ldr	r3, [pc, #100]	; (8000b78 <EXTI_Init+0xe0>)
 8000b14:	689a      	ldr	r2, [r3, #8]
 8000b16:	687b      	ldr	r3, [r7, #4]
 8000b18:	681b      	ldr	r3, [r3, #0]
 8000b1a:	4917      	ldr	r1, [pc, #92]	; (8000b78 <EXTI_Init+0xe0>)
 8000b1c:	4313      	orrs	r3, r2
 8000b1e:	608b      	str	r3, [r1, #8]
 8000b20:	4b15      	ldr	r3, [pc, #84]	; (8000b78 <EXTI_Init+0xe0>)
 8000b22:	68da      	ldr	r2, [r3, #12]
 8000b24:	687b      	ldr	r3, [r7, #4]
 8000b26:	681b      	ldr	r3, [r3, #0]
 8000b28:	4913      	ldr	r1, [pc, #76]	; (8000b78 <EXTI_Init+0xe0>)
 8000b2a:	4313      	orrs	r3, r2
 8000b2c:	60cb      	str	r3, [r1, #12]
 8000b2e:	e01d      	b.n	8000b6c <EXTI_Init+0xd4>
 8000b30:	4b11      	ldr	r3, [pc, #68]	; (8000b78 <EXTI_Init+0xe0>)
 8000b32:	60fb      	str	r3, [r7, #12]
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	795b      	ldrb	r3, [r3, #5]
 8000b38:	461a      	mov	r2, r3
 8000b3a:	68fb      	ldr	r3, [r7, #12]
 8000b3c:	4413      	add	r3, r2
 8000b3e:	60fb      	str	r3, [r7, #12]
 8000b40:	68fb      	ldr	r3, [r7, #12]
 8000b42:	6819      	ldr	r1, [r3, #0]
 8000b44:	687b      	ldr	r3, [r7, #4]
 8000b46:	681a      	ldr	r2, [r3, #0]
 8000b48:	68fb      	ldr	r3, [r7, #12]
 8000b4a:	430a      	orrs	r2, r1
 8000b4c:	601a      	str	r2, [r3, #0]
 8000b4e:	e00d      	b.n	8000b6c <EXTI_Init+0xd4>
 8000b50:	687b      	ldr	r3, [r7, #4]
 8000b52:	791b      	ldrb	r3, [r3, #4]
 8000b54:	461a      	mov	r2, r3
 8000b56:	68fb      	ldr	r3, [r7, #12]
 8000b58:	4413      	add	r3, r2
 8000b5a:	60fb      	str	r3, [r7, #12]
 8000b5c:	68fb      	ldr	r3, [r7, #12]
 8000b5e:	6819      	ldr	r1, [r3, #0]
 8000b60:	687b      	ldr	r3, [r7, #4]
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	43da      	mvns	r2, r3
 8000b66:	68fb      	ldr	r3, [r7, #12]
 8000b68:	400a      	ands	r2, r1
 8000b6a:	601a      	str	r2, [r3, #0]
 8000b6c:	bf00      	nop
 8000b6e:	3714      	adds	r7, #20
 8000b70:	46bd      	mov	sp, r7
 8000b72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b76:	4770      	bx	lr
 8000b78:	40013c00 	.word	0x40013c00

08000b7c <EXTI_GetFlagStatus>:
 8000b7c:	b480      	push	{r7}
 8000b7e:	b085      	sub	sp, #20
 8000b80:	af00      	add	r7, sp, #0
 8000b82:	6078      	str	r0, [r7, #4]
 8000b84:	2300      	movs	r3, #0
 8000b86:	73fb      	strb	r3, [r7, #15]
 8000b88:	4b08      	ldr	r3, [pc, #32]	; (8000bac <EXTI_GetFlagStatus+0x30>)
 8000b8a:	695a      	ldr	r2, [r3, #20]
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	4013      	ands	r3, r2
 8000b90:	2b00      	cmp	r3, #0
 8000b92:	d002      	beq.n	8000b9a <EXTI_GetFlagStatus+0x1e>
 8000b94:	2301      	movs	r3, #1
 8000b96:	73fb      	strb	r3, [r7, #15]
 8000b98:	e001      	b.n	8000b9e <EXTI_GetFlagStatus+0x22>
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	73fb      	strb	r3, [r7, #15]
 8000b9e:	7bfb      	ldrb	r3, [r7, #15]
 8000ba0:	4618      	mov	r0, r3
 8000ba2:	3714      	adds	r7, #20
 8000ba4:	46bd      	mov	sp, r7
 8000ba6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000baa:	4770      	bx	lr
 8000bac:	40013c00 	.word	0x40013c00

08000bb0 <EXTI_ClearITPendingBit>:
 8000bb0:	b480      	push	{r7}
 8000bb2:	b083      	sub	sp, #12
 8000bb4:	af00      	add	r7, sp, #0
 8000bb6:	6078      	str	r0, [r7, #4]
 8000bb8:	4a04      	ldr	r2, [pc, #16]	; (8000bcc <EXTI_ClearITPendingBit+0x1c>)
 8000bba:	687b      	ldr	r3, [r7, #4]
 8000bbc:	6153      	str	r3, [r2, #20]
 8000bbe:	bf00      	nop
 8000bc0:	370c      	adds	r7, #12
 8000bc2:	46bd      	mov	sp, r7
 8000bc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc8:	4770      	bx	lr
 8000bca:	bf00      	nop
 8000bcc:	40013c00 	.word	0x40013c00

08000bd0 <GPIO_Init>:
 8000bd0:	b480      	push	{r7}
 8000bd2:	b087      	sub	sp, #28
 8000bd4:	af00      	add	r7, sp, #0
 8000bd6:	6078      	str	r0, [r7, #4]
 8000bd8:	6039      	str	r1, [r7, #0]
 8000bda:	2300      	movs	r3, #0
 8000bdc:	617b      	str	r3, [r7, #20]
 8000bde:	2300      	movs	r3, #0
 8000be0:	613b      	str	r3, [r7, #16]
 8000be2:	2300      	movs	r3, #0
 8000be4:	60fb      	str	r3, [r7, #12]
 8000be6:	2300      	movs	r3, #0
 8000be8:	617b      	str	r3, [r7, #20]
 8000bea:	e076      	b.n	8000cda <GPIO_Init+0x10a>
 8000bec:	2201      	movs	r2, #1
 8000bee:	697b      	ldr	r3, [r7, #20]
 8000bf0:	fa02 f303 	lsl.w	r3, r2, r3
 8000bf4:	613b      	str	r3, [r7, #16]
 8000bf6:	683b      	ldr	r3, [r7, #0]
 8000bf8:	681b      	ldr	r3, [r3, #0]
 8000bfa:	693a      	ldr	r2, [r7, #16]
 8000bfc:	4013      	ands	r3, r2
 8000bfe:	60fb      	str	r3, [r7, #12]
 8000c00:	68fa      	ldr	r2, [r7, #12]
 8000c02:	693b      	ldr	r3, [r7, #16]
 8000c04:	429a      	cmp	r2, r3
 8000c06:	d165      	bne.n	8000cd4 <GPIO_Init+0x104>
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	681a      	ldr	r2, [r3, #0]
 8000c0c:	697b      	ldr	r3, [r7, #20]
 8000c0e:	005b      	lsls	r3, r3, #1
 8000c10:	2103      	movs	r1, #3
 8000c12:	fa01 f303 	lsl.w	r3, r1, r3
 8000c16:	43db      	mvns	r3, r3
 8000c18:	401a      	ands	r2, r3
 8000c1a:	687b      	ldr	r3, [r7, #4]
 8000c1c:	601a      	str	r2, [r3, #0]
 8000c1e:	687b      	ldr	r3, [r7, #4]
 8000c20:	681a      	ldr	r2, [r3, #0]
 8000c22:	683b      	ldr	r3, [r7, #0]
 8000c24:	791b      	ldrb	r3, [r3, #4]
 8000c26:	4619      	mov	r1, r3
 8000c28:	697b      	ldr	r3, [r7, #20]
 8000c2a:	005b      	lsls	r3, r3, #1
 8000c2c:	fa01 f303 	lsl.w	r3, r1, r3
 8000c30:	431a      	orrs	r2, r3
 8000c32:	687b      	ldr	r3, [r7, #4]
 8000c34:	601a      	str	r2, [r3, #0]
 8000c36:	683b      	ldr	r3, [r7, #0]
 8000c38:	791b      	ldrb	r3, [r3, #4]
 8000c3a:	2b01      	cmp	r3, #1
 8000c3c:	d003      	beq.n	8000c46 <GPIO_Init+0x76>
 8000c3e:	683b      	ldr	r3, [r7, #0]
 8000c40:	791b      	ldrb	r3, [r3, #4]
 8000c42:	2b02      	cmp	r3, #2
 8000c44:	d12e      	bne.n	8000ca4 <GPIO_Init+0xd4>
 8000c46:	687b      	ldr	r3, [r7, #4]
 8000c48:	689a      	ldr	r2, [r3, #8]
 8000c4a:	697b      	ldr	r3, [r7, #20]
 8000c4c:	005b      	lsls	r3, r3, #1
 8000c4e:	2103      	movs	r1, #3
 8000c50:	fa01 f303 	lsl.w	r3, r1, r3
 8000c54:	43db      	mvns	r3, r3
 8000c56:	401a      	ands	r2, r3
 8000c58:	687b      	ldr	r3, [r7, #4]
 8000c5a:	609a      	str	r2, [r3, #8]
 8000c5c:	687b      	ldr	r3, [r7, #4]
 8000c5e:	689a      	ldr	r2, [r3, #8]
 8000c60:	683b      	ldr	r3, [r7, #0]
 8000c62:	795b      	ldrb	r3, [r3, #5]
 8000c64:	4619      	mov	r1, r3
 8000c66:	697b      	ldr	r3, [r7, #20]
 8000c68:	005b      	lsls	r3, r3, #1
 8000c6a:	fa01 f303 	lsl.w	r3, r1, r3
 8000c6e:	431a      	orrs	r2, r3
 8000c70:	687b      	ldr	r3, [r7, #4]
 8000c72:	609a      	str	r2, [r3, #8]
 8000c74:	687b      	ldr	r3, [r7, #4]
 8000c76:	685a      	ldr	r2, [r3, #4]
 8000c78:	697b      	ldr	r3, [r7, #20]
 8000c7a:	b29b      	uxth	r3, r3
 8000c7c:	4619      	mov	r1, r3
 8000c7e:	2301      	movs	r3, #1
 8000c80:	408b      	lsls	r3, r1
 8000c82:	43db      	mvns	r3, r3
 8000c84:	401a      	ands	r2, r3
 8000c86:	687b      	ldr	r3, [r7, #4]
 8000c88:	605a      	str	r2, [r3, #4]
 8000c8a:	687b      	ldr	r3, [r7, #4]
 8000c8c:	685b      	ldr	r3, [r3, #4]
 8000c8e:	683a      	ldr	r2, [r7, #0]
 8000c90:	7992      	ldrb	r2, [r2, #6]
 8000c92:	4611      	mov	r1, r2
 8000c94:	697a      	ldr	r2, [r7, #20]
 8000c96:	b292      	uxth	r2, r2
 8000c98:	fa01 f202 	lsl.w	r2, r1, r2
 8000c9c:	b292      	uxth	r2, r2
 8000c9e:	431a      	orrs	r2, r3
 8000ca0:	687b      	ldr	r3, [r7, #4]
 8000ca2:	605a      	str	r2, [r3, #4]
 8000ca4:	687b      	ldr	r3, [r7, #4]
 8000ca6:	68da      	ldr	r2, [r3, #12]
 8000ca8:	697b      	ldr	r3, [r7, #20]
 8000caa:	b29b      	uxth	r3, r3
 8000cac:	005b      	lsls	r3, r3, #1
 8000cae:	2103      	movs	r1, #3
 8000cb0:	fa01 f303 	lsl.w	r3, r1, r3
 8000cb4:	43db      	mvns	r3, r3
 8000cb6:	401a      	ands	r2, r3
 8000cb8:	687b      	ldr	r3, [r7, #4]
 8000cba:	60da      	str	r2, [r3, #12]
 8000cbc:	687b      	ldr	r3, [r7, #4]
 8000cbe:	68da      	ldr	r2, [r3, #12]
 8000cc0:	683b      	ldr	r3, [r7, #0]
 8000cc2:	79db      	ldrb	r3, [r3, #7]
 8000cc4:	4619      	mov	r1, r3
 8000cc6:	697b      	ldr	r3, [r7, #20]
 8000cc8:	005b      	lsls	r3, r3, #1
 8000cca:	fa01 f303 	lsl.w	r3, r1, r3
 8000cce:	431a      	orrs	r2, r3
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	60da      	str	r2, [r3, #12]
 8000cd4:	697b      	ldr	r3, [r7, #20]
 8000cd6:	3301      	adds	r3, #1
 8000cd8:	617b      	str	r3, [r7, #20]
 8000cda:	697b      	ldr	r3, [r7, #20]
 8000cdc:	2b0f      	cmp	r3, #15
 8000cde:	d985      	bls.n	8000bec <GPIO_Init+0x1c>
 8000ce0:	bf00      	nop
 8000ce2:	371c      	adds	r7, #28
 8000ce4:	46bd      	mov	sp, r7
 8000ce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000cea:	4770      	bx	lr

08000cec <GPIO_ReadInputDataBit>:
 8000cec:	b480      	push	{r7}
 8000cee:	b085      	sub	sp, #20
 8000cf0:	af00      	add	r7, sp, #0
 8000cf2:	6078      	str	r0, [r7, #4]
 8000cf4:	460b      	mov	r3, r1
 8000cf6:	807b      	strh	r3, [r7, #2]
 8000cf8:	2300      	movs	r3, #0
 8000cfa:	73fb      	strb	r3, [r7, #15]
 8000cfc:	687b      	ldr	r3, [r7, #4]
 8000cfe:	691a      	ldr	r2, [r3, #16]
 8000d00:	887b      	ldrh	r3, [r7, #2]
 8000d02:	4013      	ands	r3, r2
 8000d04:	2b00      	cmp	r3, #0
 8000d06:	d002      	beq.n	8000d0e <GPIO_ReadInputDataBit+0x22>
 8000d08:	2301      	movs	r3, #1
 8000d0a:	73fb      	strb	r3, [r7, #15]
 8000d0c:	e001      	b.n	8000d12 <GPIO_ReadInputDataBit+0x26>
 8000d0e:	2300      	movs	r3, #0
 8000d10:	73fb      	strb	r3, [r7, #15]
 8000d12:	7bfb      	ldrb	r3, [r7, #15]
 8000d14:	4618      	mov	r0, r3
 8000d16:	3714      	adds	r7, #20
 8000d18:	46bd      	mov	sp, r7
 8000d1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d1e:	4770      	bx	lr

08000d20 <GPIO_WriteBit>:
 8000d20:	b480      	push	{r7}
 8000d22:	b083      	sub	sp, #12
 8000d24:	af00      	add	r7, sp, #0
 8000d26:	6078      	str	r0, [r7, #4]
 8000d28:	460b      	mov	r3, r1
 8000d2a:	807b      	strh	r3, [r7, #2]
 8000d2c:	4613      	mov	r3, r2
 8000d2e:	707b      	strb	r3, [r7, #1]
 8000d30:	787b      	ldrb	r3, [r7, #1]
 8000d32:	2b00      	cmp	r3, #0
 8000d34:	d003      	beq.n	8000d3e <GPIO_WriteBit+0x1e>
 8000d36:	687b      	ldr	r3, [r7, #4]
 8000d38:	887a      	ldrh	r2, [r7, #2]
 8000d3a:	831a      	strh	r2, [r3, #24]
 8000d3c:	e002      	b.n	8000d44 <GPIO_WriteBit+0x24>
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	887a      	ldrh	r2, [r7, #2]
 8000d42:	835a      	strh	r2, [r3, #26]
 8000d44:	bf00      	nop
 8000d46:	370c      	adds	r7, #12
 8000d48:	46bd      	mov	sp, r7
 8000d4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d4e:	4770      	bx	lr

08000d50 <RCC_GetClocksFreq>:
 8000d50:	b480      	push	{r7}
 8000d52:	b089      	sub	sp, #36	; 0x24
 8000d54:	af00      	add	r7, sp, #0
 8000d56:	6078      	str	r0, [r7, #4]
 8000d58:	2300      	movs	r3, #0
 8000d5a:	61bb      	str	r3, [r7, #24]
 8000d5c:	2300      	movs	r3, #0
 8000d5e:	617b      	str	r3, [r7, #20]
 8000d60:	2300      	movs	r3, #0
 8000d62:	61fb      	str	r3, [r7, #28]
 8000d64:	2302      	movs	r3, #2
 8000d66:	613b      	str	r3, [r7, #16]
 8000d68:	2300      	movs	r3, #0
 8000d6a:	60fb      	str	r3, [r7, #12]
 8000d6c:	2302      	movs	r3, #2
 8000d6e:	60bb      	str	r3, [r7, #8]
 8000d70:	4b47      	ldr	r3, [pc, #284]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000d72:	689b      	ldr	r3, [r3, #8]
 8000d74:	f003 030c 	and.w	r3, r3, #12
 8000d78:	61bb      	str	r3, [r7, #24]
 8000d7a:	69bb      	ldr	r3, [r7, #24]
 8000d7c:	2b04      	cmp	r3, #4
 8000d7e:	d007      	beq.n	8000d90 <RCC_GetClocksFreq+0x40>
 8000d80:	2b08      	cmp	r3, #8
 8000d82:	d009      	beq.n	8000d98 <RCC_GetClocksFreq+0x48>
 8000d84:	2b00      	cmp	r3, #0
 8000d86:	d13d      	bne.n	8000e04 <RCC_GetClocksFreq+0xb4>
 8000d88:	687b      	ldr	r3, [r7, #4]
 8000d8a:	4a42      	ldr	r2, [pc, #264]	; (8000e94 <RCC_GetClocksFreq+0x144>)
 8000d8c:	601a      	str	r2, [r3, #0]
 8000d8e:	e03d      	b.n	8000e0c <RCC_GetClocksFreq+0xbc>
 8000d90:	687b      	ldr	r3, [r7, #4]
 8000d92:	4a41      	ldr	r2, [pc, #260]	; (8000e98 <RCC_GetClocksFreq+0x148>)
 8000d94:	601a      	str	r2, [r3, #0]
 8000d96:	e039      	b.n	8000e0c <RCC_GetClocksFreq+0xbc>
 8000d98:	4b3d      	ldr	r3, [pc, #244]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000d9a:	685b      	ldr	r3, [r3, #4]
 8000d9c:	0d9b      	lsrs	r3, r3, #22
 8000d9e:	f003 0301 	and.w	r3, r3, #1
 8000da2:	60fb      	str	r3, [r7, #12]
 8000da4:	4b3a      	ldr	r3, [pc, #232]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000da6:	685b      	ldr	r3, [r3, #4]
 8000da8:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000dac:	60bb      	str	r3, [r7, #8]
 8000dae:	68fb      	ldr	r3, [r7, #12]
 8000db0:	2b00      	cmp	r3, #0
 8000db2:	d00c      	beq.n	8000dce <RCC_GetClocksFreq+0x7e>
 8000db4:	4a38      	ldr	r2, [pc, #224]	; (8000e98 <RCC_GetClocksFreq+0x148>)
 8000db6:	68bb      	ldr	r3, [r7, #8]
 8000db8:	fbb2 f3f3 	udiv	r3, r2, r3
 8000dbc:	4a34      	ldr	r2, [pc, #208]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000dbe:	6852      	ldr	r2, [r2, #4]
 8000dc0:	0992      	lsrs	r2, r2, #6
 8000dc2:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000dc6:	fb02 f303 	mul.w	r3, r2, r3
 8000dca:	61fb      	str	r3, [r7, #28]
 8000dcc:	e00b      	b.n	8000de6 <RCC_GetClocksFreq+0x96>
 8000dce:	4a31      	ldr	r2, [pc, #196]	; (8000e94 <RCC_GetClocksFreq+0x144>)
 8000dd0:	68bb      	ldr	r3, [r7, #8]
 8000dd2:	fbb2 f3f3 	udiv	r3, r2, r3
 8000dd6:	4a2e      	ldr	r2, [pc, #184]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000dd8:	6852      	ldr	r2, [r2, #4]
 8000dda:	0992      	lsrs	r2, r2, #6
 8000ddc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000de0:	fb02 f303 	mul.w	r3, r2, r3
 8000de4:	61fb      	str	r3, [r7, #28]
 8000de6:	4b2a      	ldr	r3, [pc, #168]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000de8:	685b      	ldr	r3, [r3, #4]
 8000dea:	0c1b      	lsrs	r3, r3, #16
 8000dec:	f003 0303 	and.w	r3, r3, #3
 8000df0:	3301      	adds	r3, #1
 8000df2:	005b      	lsls	r3, r3, #1
 8000df4:	613b      	str	r3, [r7, #16]
 8000df6:	69fa      	ldr	r2, [r7, #28]
 8000df8:	693b      	ldr	r3, [r7, #16]
 8000dfa:	fbb2 f2f3 	udiv	r2, r2, r3
 8000dfe:	687b      	ldr	r3, [r7, #4]
 8000e00:	601a      	str	r2, [r3, #0]
 8000e02:	e003      	b.n	8000e0c <RCC_GetClocksFreq+0xbc>
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	4a23      	ldr	r2, [pc, #140]	; (8000e94 <RCC_GetClocksFreq+0x144>)
 8000e08:	601a      	str	r2, [r3, #0]
 8000e0a:	bf00      	nop
 8000e0c:	4b20      	ldr	r3, [pc, #128]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000e0e:	689b      	ldr	r3, [r3, #8]
 8000e10:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8000e14:	61bb      	str	r3, [r7, #24]
 8000e16:	69bb      	ldr	r3, [r7, #24]
 8000e18:	091b      	lsrs	r3, r3, #4
 8000e1a:	61bb      	str	r3, [r7, #24]
 8000e1c:	4a1f      	ldr	r2, [pc, #124]	; (8000e9c <RCC_GetClocksFreq+0x14c>)
 8000e1e:	69bb      	ldr	r3, [r7, #24]
 8000e20:	4413      	add	r3, r2
 8000e22:	781b      	ldrb	r3, [r3, #0]
 8000e24:	b2db      	uxtb	r3, r3
 8000e26:	617b      	str	r3, [r7, #20]
 8000e28:	687b      	ldr	r3, [r7, #4]
 8000e2a:	681a      	ldr	r2, [r3, #0]
 8000e2c:	697b      	ldr	r3, [r7, #20]
 8000e2e:	40da      	lsrs	r2, r3
 8000e30:	687b      	ldr	r3, [r7, #4]
 8000e32:	605a      	str	r2, [r3, #4]
 8000e34:	4b16      	ldr	r3, [pc, #88]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000e36:	689b      	ldr	r3, [r3, #8]
 8000e38:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8000e3c:	61bb      	str	r3, [r7, #24]
 8000e3e:	69bb      	ldr	r3, [r7, #24]
 8000e40:	0a9b      	lsrs	r3, r3, #10
 8000e42:	61bb      	str	r3, [r7, #24]
 8000e44:	4a15      	ldr	r2, [pc, #84]	; (8000e9c <RCC_GetClocksFreq+0x14c>)
 8000e46:	69bb      	ldr	r3, [r7, #24]
 8000e48:	4413      	add	r3, r2
 8000e4a:	781b      	ldrb	r3, [r3, #0]
 8000e4c:	b2db      	uxtb	r3, r3
 8000e4e:	617b      	str	r3, [r7, #20]
 8000e50:	687b      	ldr	r3, [r7, #4]
 8000e52:	685a      	ldr	r2, [r3, #4]
 8000e54:	697b      	ldr	r3, [r7, #20]
 8000e56:	40da      	lsrs	r2, r3
 8000e58:	687b      	ldr	r3, [r7, #4]
 8000e5a:	609a      	str	r2, [r3, #8]
 8000e5c:	4b0c      	ldr	r3, [pc, #48]	; (8000e90 <RCC_GetClocksFreq+0x140>)
 8000e5e:	689b      	ldr	r3, [r3, #8]
 8000e60:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8000e64:	61bb      	str	r3, [r7, #24]
 8000e66:	69bb      	ldr	r3, [r7, #24]
 8000e68:	0b5b      	lsrs	r3, r3, #13
 8000e6a:	61bb      	str	r3, [r7, #24]
 8000e6c:	4a0b      	ldr	r2, [pc, #44]	; (8000e9c <RCC_GetClocksFreq+0x14c>)
 8000e6e:	69bb      	ldr	r3, [r7, #24]
 8000e70:	4413      	add	r3, r2
 8000e72:	781b      	ldrb	r3, [r3, #0]
 8000e74:	b2db      	uxtb	r3, r3
 8000e76:	617b      	str	r3, [r7, #20]
 8000e78:	687b      	ldr	r3, [r7, #4]
 8000e7a:	685a      	ldr	r2, [r3, #4]
 8000e7c:	697b      	ldr	r3, [r7, #20]
 8000e7e:	40da      	lsrs	r2, r3
 8000e80:	687b      	ldr	r3, [r7, #4]
 8000e82:	60da      	str	r2, [r3, #12]
 8000e84:	bf00      	nop
 8000e86:	3724      	adds	r7, #36	; 0x24
 8000e88:	46bd      	mov	sp, r7
 8000e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e8e:	4770      	bx	lr
 8000e90:	40023800 	.word	0x40023800
 8000e94:	00f42400 	.word	0x00f42400
 8000e98:	017d7840 	.word	0x017d7840
 8000e9c:	20000000 	.word	0x20000000

08000ea0 <RCC_AHB1PeriphClockCmd>:
 8000ea0:	b480      	push	{r7}
 8000ea2:	b083      	sub	sp, #12
 8000ea4:	af00      	add	r7, sp, #0
 8000ea6:	6078      	str	r0, [r7, #4]
 8000ea8:	460b      	mov	r3, r1
 8000eaa:	70fb      	strb	r3, [r7, #3]
 8000eac:	78fb      	ldrb	r3, [r7, #3]
 8000eae:	2b00      	cmp	r3, #0
 8000eb0:	d006      	beq.n	8000ec0 <RCC_AHB1PeriphClockCmd+0x20>
 8000eb2:	4b0a      	ldr	r3, [pc, #40]	; (8000edc <RCC_AHB1PeriphClockCmd+0x3c>)
 8000eb4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000eb6:	4909      	ldr	r1, [pc, #36]	; (8000edc <RCC_AHB1PeriphClockCmd+0x3c>)
 8000eb8:	687b      	ldr	r3, [r7, #4]
 8000eba:	4313      	orrs	r3, r2
 8000ebc:	630b      	str	r3, [r1, #48]	; 0x30
 8000ebe:	e006      	b.n	8000ece <RCC_AHB1PeriphClockCmd+0x2e>
 8000ec0:	4b06      	ldr	r3, [pc, #24]	; (8000edc <RCC_AHB1PeriphClockCmd+0x3c>)
 8000ec2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000ec4:	687b      	ldr	r3, [r7, #4]
 8000ec6:	43db      	mvns	r3, r3
 8000ec8:	4904      	ldr	r1, [pc, #16]	; (8000edc <RCC_AHB1PeriphClockCmd+0x3c>)
 8000eca:	4013      	ands	r3, r2
 8000ecc:	630b      	str	r3, [r1, #48]	; 0x30
 8000ece:	bf00      	nop
 8000ed0:	370c      	adds	r7, #12
 8000ed2:	46bd      	mov	sp, r7
 8000ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ed8:	4770      	bx	lr
 8000eda:	bf00      	nop
 8000edc:	40023800 	.word	0x40023800

08000ee0 <RCC_APB2PeriphClockCmd>:
 8000ee0:	b480      	push	{r7}
 8000ee2:	b083      	sub	sp, #12
 8000ee4:	af00      	add	r7, sp, #0
 8000ee6:	6078      	str	r0, [r7, #4]
 8000ee8:	460b      	mov	r3, r1
 8000eea:	70fb      	strb	r3, [r7, #3]
 8000eec:	78fb      	ldrb	r3, [r7, #3]
 8000eee:	2b00      	cmp	r3, #0
 8000ef0:	d006      	beq.n	8000f00 <RCC_APB2PeriphClockCmd+0x20>
 8000ef2:	4b0a      	ldr	r3, [pc, #40]	; (8000f1c <RCC_APB2PeriphClockCmd+0x3c>)
 8000ef4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000ef6:	4909      	ldr	r1, [pc, #36]	; (8000f1c <RCC_APB2PeriphClockCmd+0x3c>)
 8000ef8:	687b      	ldr	r3, [r7, #4]
 8000efa:	4313      	orrs	r3, r2
 8000efc:	644b      	str	r3, [r1, #68]	; 0x44
 8000efe:	e006      	b.n	8000f0e <RCC_APB2PeriphClockCmd+0x2e>
 8000f00:	4b06      	ldr	r3, [pc, #24]	; (8000f1c <RCC_APB2PeriphClockCmd+0x3c>)
 8000f02:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8000f04:	687b      	ldr	r3, [r7, #4]
 8000f06:	43db      	mvns	r3, r3
 8000f08:	4904      	ldr	r1, [pc, #16]	; (8000f1c <RCC_APB2PeriphClockCmd+0x3c>)
 8000f0a:	4013      	ands	r3, r2
 8000f0c:	644b      	str	r3, [r1, #68]	; 0x44
 8000f0e:	bf00      	nop
 8000f10:	370c      	adds	r7, #12
 8000f12:	46bd      	mov	sp, r7
 8000f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f18:	4770      	bx	lr
 8000f1a:	bf00      	nop
 8000f1c:	40023800 	.word	0x40023800

08000f20 <SYSCFG_EXTILineConfig>:
 8000f20:	b480      	push	{r7}
 8000f22:	b085      	sub	sp, #20
 8000f24:	af00      	add	r7, sp, #0
 8000f26:	4603      	mov	r3, r0
 8000f28:	460a      	mov	r2, r1
 8000f2a:	71fb      	strb	r3, [r7, #7]
 8000f2c:	4613      	mov	r3, r2
 8000f2e:	71bb      	strb	r3, [r7, #6]
 8000f30:	2300      	movs	r3, #0
 8000f32:	60fb      	str	r3, [r7, #12]
 8000f34:	79bb      	ldrb	r3, [r7, #6]
 8000f36:	f003 0303 	and.w	r3, r3, #3
 8000f3a:	009b      	lsls	r3, r3, #2
 8000f3c:	220f      	movs	r2, #15
 8000f3e:	fa02 f303 	lsl.w	r3, r2, r3
 8000f42:	60fb      	str	r3, [r7, #12]
 8000f44:	4a16      	ldr	r2, [pc, #88]	; (8000fa0 <SYSCFG_EXTILineConfig+0x80>)
 8000f46:	79bb      	ldrb	r3, [r7, #6]
 8000f48:	089b      	lsrs	r3, r3, #2
 8000f4a:	b2db      	uxtb	r3, r3
 8000f4c:	3302      	adds	r3, #2
 8000f4e:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000f52:	68fb      	ldr	r3, [r7, #12]
 8000f54:	43db      	mvns	r3, r3
 8000f56:	4812      	ldr	r0, [pc, #72]	; (8000fa0 <SYSCFG_EXTILineConfig+0x80>)
 8000f58:	79b9      	ldrb	r1, [r7, #6]
 8000f5a:	0889      	lsrs	r1, r1, #2
 8000f5c:	b2c9      	uxtb	r1, r1
 8000f5e:	401a      	ands	r2, r3
 8000f60:	1c8b      	adds	r3, r1, #2
 8000f62:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8000f66:	4a0e      	ldr	r2, [pc, #56]	; (8000fa0 <SYSCFG_EXTILineConfig+0x80>)
 8000f68:	79bb      	ldrb	r3, [r7, #6]
 8000f6a:	089b      	lsrs	r3, r3, #2
 8000f6c:	b2db      	uxtb	r3, r3
 8000f6e:	3302      	adds	r3, #2
 8000f70:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8000f74:	79f9      	ldrb	r1, [r7, #7]
 8000f76:	79bb      	ldrb	r3, [r7, #6]
 8000f78:	f003 0303 	and.w	r3, r3, #3
 8000f7c:	009b      	lsls	r3, r3, #2
 8000f7e:	fa01 f303 	lsl.w	r3, r1, r3
 8000f82:	4807      	ldr	r0, [pc, #28]	; (8000fa0 <SYSCFG_EXTILineConfig+0x80>)
 8000f84:	79b9      	ldrb	r1, [r7, #6]
 8000f86:	0889      	lsrs	r1, r1, #2
 8000f88:	b2c9      	uxtb	r1, r1
 8000f8a:	431a      	orrs	r2, r3
 8000f8c:	1c8b      	adds	r3, r1, #2
 8000f8e:	f840 2023 	str.w	r2, [r0, r3, lsl #2]
 8000f92:	bf00      	nop
 8000f94:	3714      	adds	r7, #20
 8000f96:	46bd      	mov	sp, r7
 8000f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f9c:	4770      	bx	lr
 8000f9e:	bf00      	nop
 8000fa0:	40013800 	.word	0x40013800

08000fa4 <NVIC_SetPriority>:
 8000fa4:	b480      	push	{r7}
 8000fa6:	b083      	sub	sp, #12
 8000fa8:	af00      	add	r7, sp, #0
 8000faa:	4603      	mov	r3, r0
 8000fac:	6039      	str	r1, [r7, #0]
 8000fae:	71fb      	strb	r3, [r7, #7]
 8000fb0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fb4:	2b00      	cmp	r3, #0
 8000fb6:	da0b      	bge.n	8000fd0 <NVIC_SetPriority+0x2c>
 8000fb8:	683b      	ldr	r3, [r7, #0]
 8000fba:	b2da      	uxtb	r2, r3
 8000fbc:	490c      	ldr	r1, [pc, #48]	; (8000ff0 <NVIC_SetPriority+0x4c>)
 8000fbe:	79fb      	ldrb	r3, [r7, #7]
 8000fc0:	f003 030f 	and.w	r3, r3, #15
 8000fc4:	3b04      	subs	r3, #4
 8000fc6:	0112      	lsls	r2, r2, #4
 8000fc8:	b2d2      	uxtb	r2, r2
 8000fca:	440b      	add	r3, r1
 8000fcc:	761a      	strb	r2, [r3, #24]
 8000fce:	e009      	b.n	8000fe4 <NVIC_SetPriority+0x40>
 8000fd0:	683b      	ldr	r3, [r7, #0]
 8000fd2:	b2da      	uxtb	r2, r3
 8000fd4:	4907      	ldr	r1, [pc, #28]	; (8000ff4 <NVIC_SetPriority+0x50>)
 8000fd6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000fda:	0112      	lsls	r2, r2, #4
 8000fdc:	b2d2      	uxtb	r2, r2
 8000fde:	440b      	add	r3, r1
 8000fe0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8000fe4:	bf00      	nop
 8000fe6:	370c      	adds	r7, #12
 8000fe8:	46bd      	mov	sp, r7
 8000fea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fee:	4770      	bx	lr
 8000ff0:	e000ed00 	.word	0xe000ed00
 8000ff4:	e000e100 	.word	0xe000e100

08000ff8 <SysTick_Config>:
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	b082      	sub	sp, #8
 8000ffc:	af00      	add	r7, sp, #0
 8000ffe:	6078      	str	r0, [r7, #4]
 8001000:	687b      	ldr	r3, [r7, #4]
 8001002:	3b01      	subs	r3, #1
 8001004:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001008:	d301      	bcc.n	800100e <SysTick_Config+0x16>
 800100a:	2301      	movs	r3, #1
 800100c:	e00f      	b.n	800102e <SysTick_Config+0x36>
 800100e:	4a0a      	ldr	r2, [pc, #40]	; (8001038 <SysTick_Config+0x40>)
 8001010:	687b      	ldr	r3, [r7, #4]
 8001012:	3b01      	subs	r3, #1
 8001014:	6053      	str	r3, [r2, #4]
 8001016:	210f      	movs	r1, #15
 8001018:	f04f 30ff 	mov.w	r0, #4294967295
 800101c:	f7ff ffc2 	bl	8000fa4 <NVIC_SetPriority>
 8001020:	4b05      	ldr	r3, [pc, #20]	; (8001038 <SysTick_Config+0x40>)
 8001022:	2200      	movs	r2, #0
 8001024:	609a      	str	r2, [r3, #8]
 8001026:	4b04      	ldr	r3, [pc, #16]	; (8001038 <SysTick_Config+0x40>)
 8001028:	2207      	movs	r2, #7
 800102a:	601a      	str	r2, [r3, #0]
 800102c:	2300      	movs	r3, #0
 800102e:	4618      	mov	r0, r3
 8001030:	3708      	adds	r7, #8
 8001032:	46bd      	mov	sp, r7
 8001034:	bd80      	pop	{r7, pc}
 8001036:	bf00      	nop
 8001038:	e000e010 	.word	0xe000e010

0800103c <TimerInit>:
 800103c:	b580      	push	{r7, lr}
 800103e:	b084      	sub	sp, #16
 8001040:	af00      	add	r7, sp, #0
 8001042:	463b      	mov	r3, r7
 8001044:	4618      	mov	r0, r3
 8001046:	f7ff fe83 	bl	8000d50 <RCC_GetClocksFreq>
 800104a:	683b      	ldr	r3, [r7, #0]
 800104c:	4a0a      	ldr	r2, [pc, #40]	; (8001078 <TimerInit+0x3c>)
 800104e:	fba2 2303 	umull	r2, r3, r2, r3
 8001052:	099b      	lsrs	r3, r3, #6
 8001054:	4618      	mov	r0, r3
 8001056:	f7ff ffcf 	bl	8000ff8 <SysTick_Config>
 800105a:	2101      	movs	r1, #1
 800105c:	f04f 30ff 	mov.w	r0, #4294967295
 8001060:	f7ff ffa0 	bl	8000fa4 <NVIC_SetPriority>
 8001064:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8001068:	2100      	movs	r1, #0
 800106a:	4804      	ldr	r0, [pc, #16]	; (800107c <TimerInit+0x40>)
 800106c:	f000 f822 	bl	80010b4 <memsetl>
 8001070:	bf00      	nop
 8001072:	3710      	adds	r7, #16
 8001074:	46bd      	mov	sp, r7
 8001076:	bd80      	pop	{r7, pc}
 8001078:	10624dd3 	.word	0x10624dd3
 800107c:	2000002c 	.word	0x2000002c

08001080 <GetMilSecTick>:
 8001080:	b480      	push	{r7}
 8001082:	af00      	add	r7, sp, #0
 8001084:	4b03      	ldr	r3, [pc, #12]	; (8001094 <GetMilSecTick+0x14>)
 8001086:	681b      	ldr	r3, [r3, #0]
 8001088:	4618      	mov	r0, r3
 800108a:	46bd      	mov	sp, r7
 800108c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001090:	4770      	bx	lr
 8001092:	bf00      	nop
 8001094:	200001ac 	.word	0x200001ac

08001098 <SysTick_Handler>:
 8001098:	b480      	push	{r7}
 800109a:	af00      	add	r7, sp, #0
 800109c:	4b04      	ldr	r3, [pc, #16]	; (80010b0 <SysTick_Handler+0x18>)
 800109e:	681b      	ldr	r3, [r3, #0]
 80010a0:	3301      	adds	r3, #1
 80010a2:	4a03      	ldr	r2, [pc, #12]	; (80010b0 <SysTick_Handler+0x18>)
 80010a4:	6013      	str	r3, [r2, #0]
 80010a6:	bf00      	nop
 80010a8:	46bd      	mov	sp, r7
 80010aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ae:	4770      	bx	lr
 80010b0:	200001ac 	.word	0x200001ac

080010b4 <memsetl>:
 80010b4:	b480      	push	{r7}
 80010b6:	b083      	sub	sp, #12
 80010b8:	af00      	add	r7, sp, #0
 80010ba:	6078      	str	r0, [r7, #4]
 80010bc:	460b      	mov	r3, r1
 80010be:	70fb      	strb	r3, [r7, #3]
 80010c0:	4613      	mov	r3, r2
 80010c2:	803b      	strh	r3, [r7, #0]
 80010c4:	e004      	b.n	80010d0 <memsetl+0x1c>
 80010c6:	687b      	ldr	r3, [r7, #4]
 80010c8:	1c5a      	adds	r2, r3, #1
 80010ca:	607a      	str	r2, [r7, #4]
 80010cc:	78fa      	ldrb	r2, [r7, #3]
 80010ce:	701a      	strb	r2, [r3, #0]
 80010d0:	883b      	ldrh	r3, [r7, #0]
 80010d2:	1e5a      	subs	r2, r3, #1
 80010d4:	803a      	strh	r2, [r7, #0]
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	d1f5      	bne.n	80010c6 <memsetl+0x12>
 80010da:	bf00      	nop
 80010dc:	370c      	adds	r7, #12
 80010de:	46bd      	mov	sp, r7
 80010e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010e4:	4770      	bx	lr
	...

080010e8 <__libc_init_array>:
 80010e8:	b570      	push	{r4, r5, r6, lr}
 80010ea:	4d0d      	ldr	r5, [pc, #52]	; (8001120 <__libc_init_array+0x38>)
 80010ec:	4c0d      	ldr	r4, [pc, #52]	; (8001124 <__libc_init_array+0x3c>)
 80010ee:	1b64      	subs	r4, r4, r5
 80010f0:	10a4      	asrs	r4, r4, #2
 80010f2:	2600      	movs	r6, #0
 80010f4:	42a6      	cmp	r6, r4
 80010f6:	d109      	bne.n	800110c <__libc_init_array+0x24>
 80010f8:	4d0b      	ldr	r5, [pc, #44]	; (8001128 <__libc_init_array+0x40>)
 80010fa:	4c0c      	ldr	r4, [pc, #48]	; (800112c <__libc_init_array+0x44>)
 80010fc:	f000 f818 	bl	8001130 <_init>
 8001100:	1b64      	subs	r4, r4, r5
 8001102:	10a4      	asrs	r4, r4, #2
 8001104:	2600      	movs	r6, #0
 8001106:	42a6      	cmp	r6, r4
 8001108:	d105      	bne.n	8001116 <__libc_init_array+0x2e>
 800110a:	bd70      	pop	{r4, r5, r6, pc}
 800110c:	f855 3b04 	ldr.w	r3, [r5], #4
 8001110:	4798      	blx	r3
 8001112:	3601      	adds	r6, #1
 8001114:	e7ee      	b.n	80010f4 <__libc_init_array+0xc>
 8001116:	f855 3b04 	ldr.w	r3, [r5], #4
 800111a:	4798      	blx	r3
 800111c:	3601      	adds	r6, #1
 800111e:	e7f2      	b.n	8001106 <__libc_init_array+0x1e>
 8001120:	08001148 	.word	0x08001148
 8001124:	08001148 	.word	0x08001148
 8001128:	08001148 	.word	0x08001148
 800112c:	0800114c 	.word	0x0800114c

08001130 <_init>:
 8001130:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001132:	bf00      	nop
 8001134:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001136:	bc08      	pop	{r3}
 8001138:	469e      	mov	lr, r3
 800113a:	4770      	bx	lr

0800113c <_fini>:
 800113c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800113e:	bf00      	nop
 8001140:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001142:	bc08      	pop	{r3}
 8001144:	469e      	mov	lr, r3
 8001146:	4770      	bx	lr
