
Assignment3.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000978  08000194  08000194  00010194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000b0c  08000b0c  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000b0c  08000b0c  00020010  2**0
                  CONTENTS
  4 .ARM          00000000  08000b0c  08000b0c  00020010  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000b0c  08000b0c  00020010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000b0c  08000b0c  00010b0c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000b10  08000b10  00010b10  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000010  20000000  08000b14  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  20000010  08000b24  00020010  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000050  08000b24  00020050  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020010  2**0
                  CONTENTS, READONLY
 12 .debug_info   000065d1  00000000  00000000  00020040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000b0d  00000000  00000000  00026611  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000458  00000000  00000000  00027120  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 000003e0  00000000  00000000  00027578  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000dd5d  00000000  00000000  00027958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00003055  00000000  00000000  000356b5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000486bd  00000000  00000000  0003870a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000ce  00000000  00000000  00080dc7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000011ec  00000000  00000000  00080e98  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	; (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	; (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	; (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000010 	.word	0x20000010
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000af4 	.word	0x08000af4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	; (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	; (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	; (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	20000014 	.word	0x20000014
 80001d0:	08000af4 	.word	0x08000af4

080001d4 <USART2_Init>:
void Serial_Init(void);
uint8_t PollRxBuff(void);

//Init USART2
void USART2_Init(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b088      	sub	sp, #32
 80001d8:	af00      	add	r7, sp, #0
	/*
	 * Init TX for USART2
	 */

	//Enable GPIOClock for PA2
	RCC_AHB1PeriphClockCmd(USART2_GPIO_CLOCK, ENABLE);
 80001da:	2101      	movs	r1, #1
 80001dc:	2001      	movs	r0, #1
 80001de:	f000 faa9 	bl	8000734 <RCC_AHB1PeriphClockCmd>

	//Alternate function mode
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 80001e2:	2302      	movs	r3, #2
 80001e4:	773b      	strb	r3, [r7, #28]

	//Clock speed
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 80001e6:	2302      	movs	r3, #2
 80001e8:	777b      	strb	r3, [r7, #29]

	//Output type push-pull
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 80001ea:	2300      	movs	r3, #0
 80001ec:	77bb      	strb	r3, [r7, #30]

	//Enable pull-up resistor
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 80001ee:	2301      	movs	r3, #1
 80001f0:	77fb      	strb	r3, [r7, #31]

	//PA2 TX pin
	GPIO_InitStruct.GPIO_Pin = USART2_TX;
 80001f2:	2304      	movs	r3, #4
 80001f4:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USART2_GPIO, &GPIO_InitStruct);
 80001f6:	f107 0318 	add.w	r3, r7, #24
 80001fa:	4619      	mov	r1, r3
 80001fc:	4824      	ldr	r0, [pc, #144]	; (8000290 <USART2_Init+0xbc>)
 80001fe:	f000 f919 	bl	8000434 <GPIO_Init>

	//Alternate function config
	GPIO_PinAFConfig(USART2_GPIO, GPIO_PinSource2, GPIO_AF_USART2);
 8000202:	2207      	movs	r2, #7
 8000204:	2102      	movs	r1, #2
 8000206:	4822      	ldr	r0, [pc, #136]	; (8000290 <USART2_Init+0xbc>)
 8000208:	f000 f9a2 	bl	8000550 <GPIO_PinAFConfig>

	//Enable clock for USART2 peripheral
	RCC_APB1PeriphClockCmd(USART2_CLOCK, ENABLE);
 800020c:	2101      	movs	r1, #1
 800020e:	f44f 3000 	mov.w	r0, #131072	; 0x20000
 8000212:	f000 faaf 	bl	8000774 <RCC_APB1PeriphClockCmd>

	//Enable USART2 peripheral
	USART_Cmd(USART2, ENABLE);
 8000216:	2101      	movs	r1, #1
 8000218:	481e      	ldr	r0, [pc, #120]	; (8000294 <USART2_Init+0xc0>)
 800021a:	f000 fb85 	bl	8000928 <USART_Cmd>

	//PA3 RX pin
	GPIO_InitStruct.GPIO_Pin = USART2_RX;
 800021e:	2308      	movs	r3, #8
 8000220:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USART2_GPIO, &GPIO_InitStruct);
 8000222:	f107 0318 	add.w	r3, r7, #24
 8000226:	4619      	mov	r1, r3
 8000228:	4819      	ldr	r0, [pc, #100]	; (8000290 <USART2_Init+0xbc>)
 800022a:	f000 f903 	bl	8000434 <GPIO_Init>


	USART_Initstruct.USART_BaudRate = USARTx_Buad;
 800022e:	f44f 5316 	mov.w	r3, #9600	; 0x2580
 8000232:	60bb      	str	r3, [r7, #8]
	USART_Initstruct.USART_WordLength = USART_WordLength_8b;
 8000234:	2300      	movs	r3, #0
 8000236:	81bb      	strh	r3, [r7, #12]
	USART_Initstruct.USART_StopBits = USART_StopBits_1;
 8000238:	2300      	movs	r3, #0
 800023a:	81fb      	strh	r3, [r7, #14]
	USART_Initstruct.USART_Parity = USART_Parity_No;
 800023c:	2300      	movs	r3, #0
 800023e:	823b      	strh	r3, [r7, #16]
	USART_Initstruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000240:	2300      	movs	r3, #0
 8000242:	82bb      	strh	r3, [r7, #20]
	USART_Initstruct.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8000244:	230c      	movs	r3, #12
 8000246:	827b      	strh	r3, [r7, #18]
	USART_Init(USART2, &USART_Initstruct);
 8000248:	f107 0308 	add.w	r3, r7, #8
 800024c:	4619      	mov	r1, r3
 800024e:	4811      	ldr	r0, [pc, #68]	; (8000294 <USART2_Init+0xc0>)
 8000250:	f000 fab0 	bl	80007b4 <USART_Init>

	USART_Cmd(USART2, ENABLE);
 8000254:	2101      	movs	r1, #1
 8000256:	480f      	ldr	r0, [pc, #60]	; (8000294 <USART2_Init+0xc0>)
 8000258:	f000 fb66 	bl	8000928 <USART_Cmd>

	USART_ITConfig(USART2, USART_IT_RXNE, ENABLE);
 800025c:	2201      	movs	r2, #1
 800025e:	f240 5125 	movw	r1, #1317	; 0x525
 8000262:	480c      	ldr	r0, [pc, #48]	; (8000294 <USART2_Init+0xc0>)
 8000264:	f000 fb80 	bl	8000968 <USART_ITConfig>

	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 8000268:	f44f 60a0 	mov.w	r0, #1280	; 0x500
 800026c:	f000 f86c 	bl	8000348 <NVIC_PriorityGroupConfig>

	NVIC_InitStruct.NVIC_IRQChannel = USART2_IRQn;
 8000270:	2326      	movs	r3, #38	; 0x26
 8000272:	713b      	strb	r3, [r7, #4]
	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
 8000274:	2300      	movs	r3, #0
 8000276:	717b      	strb	r3, [r7, #5]
	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
 8000278:	2300      	movs	r3, #0
 800027a:	71bb      	strb	r3, [r7, #6]
	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 800027c:	2301      	movs	r3, #1
 800027e:	71fb      	strb	r3, [r7, #7]
	NVIC_Init(&NVIC_InitStruct);
 8000280:	1d3b      	adds	r3, r7, #4
 8000282:	4618      	mov	r0, r3
 8000284:	f000 f874 	bl	8000370 <NVIC_Init>
}
 8000288:	bf00      	nop
 800028a:	3720      	adds	r7, #32
 800028c:	46bd      	mov	sp, r7
 800028e:	bd80      	pop	{r7, pc}
 8000290:	40020000 	.word	0x40020000
 8000294:	40004400 	.word	0x40004400

08000298 <Serial_Init>:

static buffqueue_t serialQueueRx;
static uint8_t pBuffDataRx[20];
void Serial_Init(void)
{
 8000298:	b580      	push	{r7, lr}
 800029a:	af00      	add	r7, sp, #0
	bufInit(pBuffDataRx, &serialQueueRx, sizeof(pBuffDataRx[0]), 20);
 800029c:	2314      	movs	r3, #20
 800029e:	2201      	movs	r2, #1
 80002a0:	4903      	ldr	r1, [pc, #12]	; (80002b0 <Serial_Init+0x18>)
 80002a2:	4804      	ldr	r0, [pc, #16]	; (80002b4 <Serial_Init+0x1c>)
 80002a4:	f000 fba8 	bl	80009f8 <bufInit>
	USART2_Init();
 80002a8:	f7ff ff94 	bl	80001d4 <USART2_Init>
}
 80002ac:	bf00      	nop
 80002ae:	bd80      	pop	{r7, pc}
 80002b0:	2000002c 	.word	0x2000002c
 80002b4:	2000003c 	.word	0x2000003c

080002b8 <PollRxBuff>:

uint8_t PollRxBuff(void)
{
 80002b8:	b580      	push	{r7, lr}
 80002ba:	b082      	sub	sp, #8
 80002bc:	af00      	add	r7, sp, #0
	int a = 0;
 80002be:	2300      	movs	r3, #0
 80002c0:	607b      	str	r3, [r7, #4]
	if ((bufNumItems(&serialQueueRx) != 0))
 80002c2:	4807      	ldr	r0, [pc, #28]	; (80002e0 <PollRxBuff+0x28>)
 80002c4:	f000 fbb3 	bl	8000a2e <bufNumItems>
 80002c8:	4603      	mov	r3, r0
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d002      	beq.n	80002d4 <PollRxBuff+0x1c>
	{
		a++;
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	3301      	adds	r3, #1
 80002d2:	607b      	str	r3, [r7, #4]
	}
}
 80002d4:	bf00      	nop
 80002d6:	4618      	mov	r0, r3
 80002d8:	3708      	adds	r7, #8
 80002da:	46bd      	mov	sp, r7
 80002dc:	bd80      	pop	{r7, pc}
 80002de:	bf00      	nop
 80002e0:	2000002c 	.word	0x2000002c

080002e4 <main>:

int main(void)
{
 80002e4:	b580      	push	{r7, lr}
 80002e6:	af00      	add	r7, sp, #0
	Serial_Init();
 80002e8:	f7ff ffd6 	bl	8000298 <Serial_Init>
	while(1)
	{
		PollRxBuff();
 80002ec:	f7ff ffe4 	bl	80002b8 <PollRxBuff>
 80002f0:	e7fc      	b.n	80002ec <main+0x8>
	...

080002f4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002f4:	480d      	ldr	r0, [pc, #52]	; (800032c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002f6:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 80002f8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002fc:	480c      	ldr	r0, [pc, #48]	; (8000330 <LoopForever+0x6>)
  ldr r1, =_edata
 80002fe:	490d      	ldr	r1, [pc, #52]	; (8000334 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000300:	4a0d      	ldr	r2, [pc, #52]	; (8000338 <LoopForever+0xe>)
  movs r3, #0
 8000302:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000304:	e002      	b.n	800030c <LoopCopyDataInit>

08000306 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000306:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000308:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800030a:	3304      	adds	r3, #4

0800030c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800030c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800030e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000310:	d3f9      	bcc.n	8000306 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000312:	4a0a      	ldr	r2, [pc, #40]	; (800033c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000314:	4c0a      	ldr	r4, [pc, #40]	; (8000340 <LoopForever+0x16>)
  movs r3, #0
 8000316:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000318:	e001      	b.n	800031e <LoopFillZerobss>

0800031a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800031a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800031c:	3204      	adds	r2, #4

0800031e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800031e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000320:	d3fb      	bcc.n	800031a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000322:	f000 fbc3 	bl	8000aac <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000326:	f7ff ffdd 	bl	80002e4 <main>

0800032a <LoopForever>:

LoopForever:
    b LoopForever
 800032a:	e7fe      	b.n	800032a <LoopForever>
  ldr   r0, =_estack
 800032c:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000330:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000334:	20000010 	.word	0x20000010
  ldr r2, =_sidata
 8000338:	08000b14 	.word	0x08000b14
  ldr r2, =_sbss
 800033c:	20000010 	.word	0x20000010
  ldr r4, =_ebss
 8000340:	20000050 	.word	0x20000050

08000344 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000344:	e7fe      	b.n	8000344 <ADC_IRQHandler>
	...

08000348 <NVIC_PriorityGroupConfig>:
 8000348:	b480      	push	{r7}
 800034a:	b083      	sub	sp, #12
 800034c:	af00      	add	r7, sp, #0
 800034e:	6078      	str	r0, [r7, #4]
 8000350:	4a06      	ldr	r2, [pc, #24]	; (800036c <NVIC_PriorityGroupConfig+0x24>)
 8000352:	687b      	ldr	r3, [r7, #4]
 8000354:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8000358:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800035c:	60d3      	str	r3, [r2, #12]
 800035e:	bf00      	nop
 8000360:	370c      	adds	r7, #12
 8000362:	46bd      	mov	sp, r7
 8000364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000368:	4770      	bx	lr
 800036a:	bf00      	nop
 800036c:	e000ed00 	.word	0xe000ed00

08000370 <NVIC_Init>:
 8000370:	b480      	push	{r7}
 8000372:	b085      	sub	sp, #20
 8000374:	af00      	add	r7, sp, #0
 8000376:	6078      	str	r0, [r7, #4]
 8000378:	2300      	movs	r3, #0
 800037a:	73fb      	strb	r3, [r7, #15]
 800037c:	2300      	movs	r3, #0
 800037e:	73bb      	strb	r3, [r7, #14]
 8000380:	230f      	movs	r3, #15
 8000382:	737b      	strb	r3, [r7, #13]
 8000384:	687b      	ldr	r3, [r7, #4]
 8000386:	78db      	ldrb	r3, [r3, #3]
 8000388:	2b00      	cmp	r3, #0
 800038a:	d039      	beq.n	8000400 <NVIC_Init+0x90>
 800038c:	4b27      	ldr	r3, [pc, #156]	; (800042c <NVIC_Init+0xbc>)
 800038e:	68db      	ldr	r3, [r3, #12]
 8000390:	43db      	mvns	r3, r3
 8000392:	0a1b      	lsrs	r3, r3, #8
 8000394:	b2db      	uxtb	r3, r3
 8000396:	f003 0307 	and.w	r3, r3, #7
 800039a:	73fb      	strb	r3, [r7, #15]
 800039c:	7bfb      	ldrb	r3, [r7, #15]
 800039e:	f1c3 0304 	rsb	r3, r3, #4
 80003a2:	73bb      	strb	r3, [r7, #14]
 80003a4:	7b7a      	ldrb	r2, [r7, #13]
 80003a6:	7bfb      	ldrb	r3, [r7, #15]
 80003a8:	fa42 f303 	asr.w	r3, r2, r3
 80003ac:	737b      	strb	r3, [r7, #13]
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	785b      	ldrb	r3, [r3, #1]
 80003b2:	461a      	mov	r2, r3
 80003b4:	7bbb      	ldrb	r3, [r7, #14]
 80003b6:	fa02 f303 	lsl.w	r3, r2, r3
 80003ba:	73fb      	strb	r3, [r7, #15]
 80003bc:	687b      	ldr	r3, [r7, #4]
 80003be:	789a      	ldrb	r2, [r3, #2]
 80003c0:	7b7b      	ldrb	r3, [r7, #13]
 80003c2:	4013      	ands	r3, r2
 80003c4:	b2da      	uxtb	r2, r3
 80003c6:	7bfb      	ldrb	r3, [r7, #15]
 80003c8:	4313      	orrs	r3, r2
 80003ca:	73fb      	strb	r3, [r7, #15]
 80003cc:	7bfb      	ldrb	r3, [r7, #15]
 80003ce:	011b      	lsls	r3, r3, #4
 80003d0:	73fb      	strb	r3, [r7, #15]
 80003d2:	4a17      	ldr	r2, [pc, #92]	; (8000430 <NVIC_Init+0xc0>)
 80003d4:	687b      	ldr	r3, [r7, #4]
 80003d6:	781b      	ldrb	r3, [r3, #0]
 80003d8:	4413      	add	r3, r2
 80003da:	7bfa      	ldrb	r2, [r7, #15]
 80003dc:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	781b      	ldrb	r3, [r3, #0]
 80003e4:	f003 031f 	and.w	r3, r3, #31
 80003e8:	4911      	ldr	r1, [pc, #68]	; (8000430 <NVIC_Init+0xc0>)
 80003ea:	687a      	ldr	r2, [r7, #4]
 80003ec:	7812      	ldrb	r2, [r2, #0]
 80003ee:	0952      	lsrs	r2, r2, #5
 80003f0:	b2d2      	uxtb	r2, r2
 80003f2:	4610      	mov	r0, r2
 80003f4:	2201      	movs	r2, #1
 80003f6:	fa02 f303 	lsl.w	r3, r2, r3
 80003fa:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 80003fe:	e00f      	b.n	8000420 <NVIC_Init+0xb0>
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	781b      	ldrb	r3, [r3, #0]
 8000404:	f003 031f 	and.w	r3, r3, #31
 8000408:	4909      	ldr	r1, [pc, #36]	; (8000430 <NVIC_Init+0xc0>)
 800040a:	687a      	ldr	r2, [r7, #4]
 800040c:	7812      	ldrb	r2, [r2, #0]
 800040e:	0952      	lsrs	r2, r2, #5
 8000410:	b2d2      	uxtb	r2, r2
 8000412:	4610      	mov	r0, r2
 8000414:	2201      	movs	r2, #1
 8000416:	409a      	lsls	r2, r3
 8000418:	f100 0320 	add.w	r3, r0, #32
 800041c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000420:	bf00      	nop
 8000422:	3714      	adds	r7, #20
 8000424:	46bd      	mov	sp, r7
 8000426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800042a:	4770      	bx	lr
 800042c:	e000ed00 	.word	0xe000ed00
 8000430:	e000e100 	.word	0xe000e100

08000434 <GPIO_Init>:
 8000434:	b480      	push	{r7}
 8000436:	b087      	sub	sp, #28
 8000438:	af00      	add	r7, sp, #0
 800043a:	6078      	str	r0, [r7, #4]
 800043c:	6039      	str	r1, [r7, #0]
 800043e:	2300      	movs	r3, #0
 8000440:	617b      	str	r3, [r7, #20]
 8000442:	2300      	movs	r3, #0
 8000444:	613b      	str	r3, [r7, #16]
 8000446:	2300      	movs	r3, #0
 8000448:	60fb      	str	r3, [r7, #12]
 800044a:	2300      	movs	r3, #0
 800044c:	617b      	str	r3, [r7, #20]
 800044e:	e076      	b.n	800053e <GPIO_Init+0x10a>
 8000450:	2201      	movs	r2, #1
 8000452:	697b      	ldr	r3, [r7, #20]
 8000454:	fa02 f303 	lsl.w	r3, r2, r3
 8000458:	613b      	str	r3, [r7, #16]
 800045a:	683b      	ldr	r3, [r7, #0]
 800045c:	681b      	ldr	r3, [r3, #0]
 800045e:	693a      	ldr	r2, [r7, #16]
 8000460:	4013      	ands	r3, r2
 8000462:	60fb      	str	r3, [r7, #12]
 8000464:	68fa      	ldr	r2, [r7, #12]
 8000466:	693b      	ldr	r3, [r7, #16]
 8000468:	429a      	cmp	r2, r3
 800046a:	d165      	bne.n	8000538 <GPIO_Init+0x104>
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	681a      	ldr	r2, [r3, #0]
 8000470:	697b      	ldr	r3, [r7, #20]
 8000472:	005b      	lsls	r3, r3, #1
 8000474:	2103      	movs	r1, #3
 8000476:	fa01 f303 	lsl.w	r3, r1, r3
 800047a:	43db      	mvns	r3, r3
 800047c:	401a      	ands	r2, r3
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	601a      	str	r2, [r3, #0]
 8000482:	687b      	ldr	r3, [r7, #4]
 8000484:	681a      	ldr	r2, [r3, #0]
 8000486:	683b      	ldr	r3, [r7, #0]
 8000488:	791b      	ldrb	r3, [r3, #4]
 800048a:	4619      	mov	r1, r3
 800048c:	697b      	ldr	r3, [r7, #20]
 800048e:	005b      	lsls	r3, r3, #1
 8000490:	fa01 f303 	lsl.w	r3, r1, r3
 8000494:	431a      	orrs	r2, r3
 8000496:	687b      	ldr	r3, [r7, #4]
 8000498:	601a      	str	r2, [r3, #0]
 800049a:	683b      	ldr	r3, [r7, #0]
 800049c:	791b      	ldrb	r3, [r3, #4]
 800049e:	2b01      	cmp	r3, #1
 80004a0:	d003      	beq.n	80004aa <GPIO_Init+0x76>
 80004a2:	683b      	ldr	r3, [r7, #0]
 80004a4:	791b      	ldrb	r3, [r3, #4]
 80004a6:	2b02      	cmp	r3, #2
 80004a8:	d12e      	bne.n	8000508 <GPIO_Init+0xd4>
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	689a      	ldr	r2, [r3, #8]
 80004ae:	697b      	ldr	r3, [r7, #20]
 80004b0:	005b      	lsls	r3, r3, #1
 80004b2:	2103      	movs	r1, #3
 80004b4:	fa01 f303 	lsl.w	r3, r1, r3
 80004b8:	43db      	mvns	r3, r3
 80004ba:	401a      	ands	r2, r3
 80004bc:	687b      	ldr	r3, [r7, #4]
 80004be:	609a      	str	r2, [r3, #8]
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	689a      	ldr	r2, [r3, #8]
 80004c4:	683b      	ldr	r3, [r7, #0]
 80004c6:	795b      	ldrb	r3, [r3, #5]
 80004c8:	4619      	mov	r1, r3
 80004ca:	697b      	ldr	r3, [r7, #20]
 80004cc:	005b      	lsls	r3, r3, #1
 80004ce:	fa01 f303 	lsl.w	r3, r1, r3
 80004d2:	431a      	orrs	r2, r3
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	609a      	str	r2, [r3, #8]
 80004d8:	687b      	ldr	r3, [r7, #4]
 80004da:	685a      	ldr	r2, [r3, #4]
 80004dc:	697b      	ldr	r3, [r7, #20]
 80004de:	b29b      	uxth	r3, r3
 80004e0:	4619      	mov	r1, r3
 80004e2:	2301      	movs	r3, #1
 80004e4:	408b      	lsls	r3, r1
 80004e6:	43db      	mvns	r3, r3
 80004e8:	401a      	ands	r2, r3
 80004ea:	687b      	ldr	r3, [r7, #4]
 80004ec:	605a      	str	r2, [r3, #4]
 80004ee:	687b      	ldr	r3, [r7, #4]
 80004f0:	685b      	ldr	r3, [r3, #4]
 80004f2:	683a      	ldr	r2, [r7, #0]
 80004f4:	7992      	ldrb	r2, [r2, #6]
 80004f6:	4611      	mov	r1, r2
 80004f8:	697a      	ldr	r2, [r7, #20]
 80004fa:	b292      	uxth	r2, r2
 80004fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000500:	b292      	uxth	r2, r2
 8000502:	431a      	orrs	r2, r3
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	605a      	str	r2, [r3, #4]
 8000508:	687b      	ldr	r3, [r7, #4]
 800050a:	68da      	ldr	r2, [r3, #12]
 800050c:	697b      	ldr	r3, [r7, #20]
 800050e:	b29b      	uxth	r3, r3
 8000510:	005b      	lsls	r3, r3, #1
 8000512:	2103      	movs	r1, #3
 8000514:	fa01 f303 	lsl.w	r3, r1, r3
 8000518:	43db      	mvns	r3, r3
 800051a:	401a      	ands	r2, r3
 800051c:	687b      	ldr	r3, [r7, #4]
 800051e:	60da      	str	r2, [r3, #12]
 8000520:	687b      	ldr	r3, [r7, #4]
 8000522:	68da      	ldr	r2, [r3, #12]
 8000524:	683b      	ldr	r3, [r7, #0]
 8000526:	79db      	ldrb	r3, [r3, #7]
 8000528:	4619      	mov	r1, r3
 800052a:	697b      	ldr	r3, [r7, #20]
 800052c:	005b      	lsls	r3, r3, #1
 800052e:	fa01 f303 	lsl.w	r3, r1, r3
 8000532:	431a      	orrs	r2, r3
 8000534:	687b      	ldr	r3, [r7, #4]
 8000536:	60da      	str	r2, [r3, #12]
 8000538:	697b      	ldr	r3, [r7, #20]
 800053a:	3301      	adds	r3, #1
 800053c:	617b      	str	r3, [r7, #20]
 800053e:	697b      	ldr	r3, [r7, #20]
 8000540:	2b0f      	cmp	r3, #15
 8000542:	d985      	bls.n	8000450 <GPIO_Init+0x1c>
 8000544:	bf00      	nop
 8000546:	371c      	adds	r7, #28
 8000548:	46bd      	mov	sp, r7
 800054a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800054e:	4770      	bx	lr

08000550 <GPIO_PinAFConfig>:
 8000550:	b480      	push	{r7}
 8000552:	b085      	sub	sp, #20
 8000554:	af00      	add	r7, sp, #0
 8000556:	6078      	str	r0, [r7, #4]
 8000558:	460b      	mov	r3, r1
 800055a:	807b      	strh	r3, [r7, #2]
 800055c:	4613      	mov	r3, r2
 800055e:	707b      	strb	r3, [r7, #1]
 8000560:	2300      	movs	r3, #0
 8000562:	60fb      	str	r3, [r7, #12]
 8000564:	2300      	movs	r3, #0
 8000566:	60bb      	str	r3, [r7, #8]
 8000568:	787a      	ldrb	r2, [r7, #1]
 800056a:	887b      	ldrh	r3, [r7, #2]
 800056c:	f003 0307 	and.w	r3, r3, #7
 8000570:	009b      	lsls	r3, r3, #2
 8000572:	fa02 f303 	lsl.w	r3, r2, r3
 8000576:	60fb      	str	r3, [r7, #12]
 8000578:	887b      	ldrh	r3, [r7, #2]
 800057a:	08db      	lsrs	r3, r3, #3
 800057c:	b29b      	uxth	r3, r3
 800057e:	461a      	mov	r2, r3
 8000580:	687b      	ldr	r3, [r7, #4]
 8000582:	3208      	adds	r2, #8
 8000584:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8000588:	887b      	ldrh	r3, [r7, #2]
 800058a:	f003 0307 	and.w	r3, r3, #7
 800058e:	009b      	lsls	r3, r3, #2
 8000590:	210f      	movs	r1, #15
 8000592:	fa01 f303 	lsl.w	r3, r1, r3
 8000596:	43db      	mvns	r3, r3
 8000598:	8879      	ldrh	r1, [r7, #2]
 800059a:	08c9      	lsrs	r1, r1, #3
 800059c:	b289      	uxth	r1, r1
 800059e:	4608      	mov	r0, r1
 80005a0:	ea02 0103 	and.w	r1, r2, r3
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	f100 0208 	add.w	r2, r0, #8
 80005aa:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80005ae:	887b      	ldrh	r3, [r7, #2]
 80005b0:	08db      	lsrs	r3, r3, #3
 80005b2:	b29b      	uxth	r3, r3
 80005b4:	461a      	mov	r2, r3
 80005b6:	687b      	ldr	r3, [r7, #4]
 80005b8:	3208      	adds	r2, #8
 80005ba:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80005be:	68fa      	ldr	r2, [r7, #12]
 80005c0:	4313      	orrs	r3, r2
 80005c2:	60bb      	str	r3, [r7, #8]
 80005c4:	887b      	ldrh	r3, [r7, #2]
 80005c6:	08db      	lsrs	r3, r3, #3
 80005c8:	b29b      	uxth	r3, r3
 80005ca:	461a      	mov	r2, r3
 80005cc:	687b      	ldr	r3, [r7, #4]
 80005ce:	3208      	adds	r2, #8
 80005d0:	68b9      	ldr	r1, [r7, #8]
 80005d2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80005d6:	bf00      	nop
 80005d8:	3714      	adds	r7, #20
 80005da:	46bd      	mov	sp, r7
 80005dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005e0:	4770      	bx	lr
	...

080005e4 <RCC_GetClocksFreq>:
 80005e4:	b480      	push	{r7}
 80005e6:	b089      	sub	sp, #36	; 0x24
 80005e8:	af00      	add	r7, sp, #0
 80005ea:	6078      	str	r0, [r7, #4]
 80005ec:	2300      	movs	r3, #0
 80005ee:	61bb      	str	r3, [r7, #24]
 80005f0:	2300      	movs	r3, #0
 80005f2:	617b      	str	r3, [r7, #20]
 80005f4:	2300      	movs	r3, #0
 80005f6:	61fb      	str	r3, [r7, #28]
 80005f8:	2302      	movs	r3, #2
 80005fa:	613b      	str	r3, [r7, #16]
 80005fc:	2300      	movs	r3, #0
 80005fe:	60fb      	str	r3, [r7, #12]
 8000600:	2302      	movs	r3, #2
 8000602:	60bb      	str	r3, [r7, #8]
 8000604:	4b47      	ldr	r3, [pc, #284]	; (8000724 <RCC_GetClocksFreq+0x140>)
 8000606:	689b      	ldr	r3, [r3, #8]
 8000608:	f003 030c 	and.w	r3, r3, #12
 800060c:	61bb      	str	r3, [r7, #24]
 800060e:	69bb      	ldr	r3, [r7, #24]
 8000610:	2b04      	cmp	r3, #4
 8000612:	d007      	beq.n	8000624 <RCC_GetClocksFreq+0x40>
 8000614:	2b08      	cmp	r3, #8
 8000616:	d009      	beq.n	800062c <RCC_GetClocksFreq+0x48>
 8000618:	2b00      	cmp	r3, #0
 800061a:	d13d      	bne.n	8000698 <RCC_GetClocksFreq+0xb4>
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	4a42      	ldr	r2, [pc, #264]	; (8000728 <RCC_GetClocksFreq+0x144>)
 8000620:	601a      	str	r2, [r3, #0]
 8000622:	e03d      	b.n	80006a0 <RCC_GetClocksFreq+0xbc>
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	4a41      	ldr	r2, [pc, #260]	; (800072c <RCC_GetClocksFreq+0x148>)
 8000628:	601a      	str	r2, [r3, #0]
 800062a:	e039      	b.n	80006a0 <RCC_GetClocksFreq+0xbc>
 800062c:	4b3d      	ldr	r3, [pc, #244]	; (8000724 <RCC_GetClocksFreq+0x140>)
 800062e:	685b      	ldr	r3, [r3, #4]
 8000630:	0d9b      	lsrs	r3, r3, #22
 8000632:	f003 0301 	and.w	r3, r3, #1
 8000636:	60fb      	str	r3, [r7, #12]
 8000638:	4b3a      	ldr	r3, [pc, #232]	; (8000724 <RCC_GetClocksFreq+0x140>)
 800063a:	685b      	ldr	r3, [r3, #4]
 800063c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8000640:	60bb      	str	r3, [r7, #8]
 8000642:	68fb      	ldr	r3, [r7, #12]
 8000644:	2b00      	cmp	r3, #0
 8000646:	d00c      	beq.n	8000662 <RCC_GetClocksFreq+0x7e>
 8000648:	4a38      	ldr	r2, [pc, #224]	; (800072c <RCC_GetClocksFreq+0x148>)
 800064a:	68bb      	ldr	r3, [r7, #8]
 800064c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000650:	4a34      	ldr	r2, [pc, #208]	; (8000724 <RCC_GetClocksFreq+0x140>)
 8000652:	6852      	ldr	r2, [r2, #4]
 8000654:	0992      	lsrs	r2, r2, #6
 8000656:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800065a:	fb02 f303 	mul.w	r3, r2, r3
 800065e:	61fb      	str	r3, [r7, #28]
 8000660:	e00b      	b.n	800067a <RCC_GetClocksFreq+0x96>
 8000662:	4a31      	ldr	r2, [pc, #196]	; (8000728 <RCC_GetClocksFreq+0x144>)
 8000664:	68bb      	ldr	r3, [r7, #8]
 8000666:	fbb2 f3f3 	udiv	r3, r2, r3
 800066a:	4a2e      	ldr	r2, [pc, #184]	; (8000724 <RCC_GetClocksFreq+0x140>)
 800066c:	6852      	ldr	r2, [r2, #4]
 800066e:	0992      	lsrs	r2, r2, #6
 8000670:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000674:	fb02 f303 	mul.w	r3, r2, r3
 8000678:	61fb      	str	r3, [r7, #28]
 800067a:	4b2a      	ldr	r3, [pc, #168]	; (8000724 <RCC_GetClocksFreq+0x140>)
 800067c:	685b      	ldr	r3, [r3, #4]
 800067e:	0c1b      	lsrs	r3, r3, #16
 8000680:	f003 0303 	and.w	r3, r3, #3
 8000684:	3301      	adds	r3, #1
 8000686:	005b      	lsls	r3, r3, #1
 8000688:	613b      	str	r3, [r7, #16]
 800068a:	69fa      	ldr	r2, [r7, #28]
 800068c:	693b      	ldr	r3, [r7, #16]
 800068e:	fbb2 f2f3 	udiv	r2, r2, r3
 8000692:	687b      	ldr	r3, [r7, #4]
 8000694:	601a      	str	r2, [r3, #0]
 8000696:	e003      	b.n	80006a0 <RCC_GetClocksFreq+0xbc>
 8000698:	687b      	ldr	r3, [r7, #4]
 800069a:	4a23      	ldr	r2, [pc, #140]	; (8000728 <RCC_GetClocksFreq+0x144>)
 800069c:	601a      	str	r2, [r3, #0]
 800069e:	bf00      	nop
 80006a0:	4b20      	ldr	r3, [pc, #128]	; (8000724 <RCC_GetClocksFreq+0x140>)
 80006a2:	689b      	ldr	r3, [r3, #8]
 80006a4:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 80006a8:	61bb      	str	r3, [r7, #24]
 80006aa:	69bb      	ldr	r3, [r7, #24]
 80006ac:	091b      	lsrs	r3, r3, #4
 80006ae:	61bb      	str	r3, [r7, #24]
 80006b0:	4a1f      	ldr	r2, [pc, #124]	; (8000730 <RCC_GetClocksFreq+0x14c>)
 80006b2:	69bb      	ldr	r3, [r7, #24]
 80006b4:	4413      	add	r3, r2
 80006b6:	781b      	ldrb	r3, [r3, #0]
 80006b8:	b2db      	uxtb	r3, r3
 80006ba:	617b      	str	r3, [r7, #20]
 80006bc:	687b      	ldr	r3, [r7, #4]
 80006be:	681a      	ldr	r2, [r3, #0]
 80006c0:	697b      	ldr	r3, [r7, #20]
 80006c2:	40da      	lsrs	r2, r3
 80006c4:	687b      	ldr	r3, [r7, #4]
 80006c6:	605a      	str	r2, [r3, #4]
 80006c8:	4b16      	ldr	r3, [pc, #88]	; (8000724 <RCC_GetClocksFreq+0x140>)
 80006ca:	689b      	ldr	r3, [r3, #8]
 80006cc:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80006d0:	61bb      	str	r3, [r7, #24]
 80006d2:	69bb      	ldr	r3, [r7, #24]
 80006d4:	0a9b      	lsrs	r3, r3, #10
 80006d6:	61bb      	str	r3, [r7, #24]
 80006d8:	4a15      	ldr	r2, [pc, #84]	; (8000730 <RCC_GetClocksFreq+0x14c>)
 80006da:	69bb      	ldr	r3, [r7, #24]
 80006dc:	4413      	add	r3, r2
 80006de:	781b      	ldrb	r3, [r3, #0]
 80006e0:	b2db      	uxtb	r3, r3
 80006e2:	617b      	str	r3, [r7, #20]
 80006e4:	687b      	ldr	r3, [r7, #4]
 80006e6:	685a      	ldr	r2, [r3, #4]
 80006e8:	697b      	ldr	r3, [r7, #20]
 80006ea:	40da      	lsrs	r2, r3
 80006ec:	687b      	ldr	r3, [r7, #4]
 80006ee:	609a      	str	r2, [r3, #8]
 80006f0:	4b0c      	ldr	r3, [pc, #48]	; (8000724 <RCC_GetClocksFreq+0x140>)
 80006f2:	689b      	ldr	r3, [r3, #8]
 80006f4:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 80006f8:	61bb      	str	r3, [r7, #24]
 80006fa:	69bb      	ldr	r3, [r7, #24]
 80006fc:	0b5b      	lsrs	r3, r3, #13
 80006fe:	61bb      	str	r3, [r7, #24]
 8000700:	4a0b      	ldr	r2, [pc, #44]	; (8000730 <RCC_GetClocksFreq+0x14c>)
 8000702:	69bb      	ldr	r3, [r7, #24]
 8000704:	4413      	add	r3, r2
 8000706:	781b      	ldrb	r3, [r3, #0]
 8000708:	b2db      	uxtb	r3, r3
 800070a:	617b      	str	r3, [r7, #20]
 800070c:	687b      	ldr	r3, [r7, #4]
 800070e:	685a      	ldr	r2, [r3, #4]
 8000710:	697b      	ldr	r3, [r7, #20]
 8000712:	40da      	lsrs	r2, r3
 8000714:	687b      	ldr	r3, [r7, #4]
 8000716:	60da      	str	r2, [r3, #12]
 8000718:	bf00      	nop
 800071a:	3724      	adds	r7, #36	; 0x24
 800071c:	46bd      	mov	sp, r7
 800071e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000722:	4770      	bx	lr
 8000724:	40023800 	.word	0x40023800
 8000728:	00f42400 	.word	0x00f42400
 800072c:	017d7840 	.word	0x017d7840
 8000730:	20000000 	.word	0x20000000

08000734 <RCC_AHB1PeriphClockCmd>:
 8000734:	b480      	push	{r7}
 8000736:	b083      	sub	sp, #12
 8000738:	af00      	add	r7, sp, #0
 800073a:	6078      	str	r0, [r7, #4]
 800073c:	460b      	mov	r3, r1
 800073e:	70fb      	strb	r3, [r7, #3]
 8000740:	78fb      	ldrb	r3, [r7, #3]
 8000742:	2b00      	cmp	r3, #0
 8000744:	d006      	beq.n	8000754 <RCC_AHB1PeriphClockCmd+0x20>
 8000746:	4b0a      	ldr	r3, [pc, #40]	; (8000770 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000748:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800074a:	4909      	ldr	r1, [pc, #36]	; (8000770 <RCC_AHB1PeriphClockCmd+0x3c>)
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	4313      	orrs	r3, r2
 8000750:	630b      	str	r3, [r1, #48]	; 0x30
 8000752:	e006      	b.n	8000762 <RCC_AHB1PeriphClockCmd+0x2e>
 8000754:	4b06      	ldr	r3, [pc, #24]	; (8000770 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000756:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000758:	687b      	ldr	r3, [r7, #4]
 800075a:	43db      	mvns	r3, r3
 800075c:	4904      	ldr	r1, [pc, #16]	; (8000770 <RCC_AHB1PeriphClockCmd+0x3c>)
 800075e:	4013      	ands	r3, r2
 8000760:	630b      	str	r3, [r1, #48]	; 0x30
 8000762:	bf00      	nop
 8000764:	370c      	adds	r7, #12
 8000766:	46bd      	mov	sp, r7
 8000768:	f85d 7b04 	ldr.w	r7, [sp], #4
 800076c:	4770      	bx	lr
 800076e:	bf00      	nop
 8000770:	40023800 	.word	0x40023800

08000774 <RCC_APB1PeriphClockCmd>:
 8000774:	b480      	push	{r7}
 8000776:	b083      	sub	sp, #12
 8000778:	af00      	add	r7, sp, #0
 800077a:	6078      	str	r0, [r7, #4]
 800077c:	460b      	mov	r3, r1
 800077e:	70fb      	strb	r3, [r7, #3]
 8000780:	78fb      	ldrb	r3, [r7, #3]
 8000782:	2b00      	cmp	r3, #0
 8000784:	d006      	beq.n	8000794 <RCC_APB1PeriphClockCmd+0x20>
 8000786:	4b0a      	ldr	r3, [pc, #40]	; (80007b0 <RCC_APB1PeriphClockCmd+0x3c>)
 8000788:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800078a:	4909      	ldr	r1, [pc, #36]	; (80007b0 <RCC_APB1PeriphClockCmd+0x3c>)
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	4313      	orrs	r3, r2
 8000790:	640b      	str	r3, [r1, #64]	; 0x40
 8000792:	e006      	b.n	80007a2 <RCC_APB1PeriphClockCmd+0x2e>
 8000794:	4b06      	ldr	r3, [pc, #24]	; (80007b0 <RCC_APB1PeriphClockCmd+0x3c>)
 8000796:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8000798:	687b      	ldr	r3, [r7, #4]
 800079a:	43db      	mvns	r3, r3
 800079c:	4904      	ldr	r1, [pc, #16]	; (80007b0 <RCC_APB1PeriphClockCmd+0x3c>)
 800079e:	4013      	ands	r3, r2
 80007a0:	640b      	str	r3, [r1, #64]	; 0x40
 80007a2:	bf00      	nop
 80007a4:	370c      	adds	r7, #12
 80007a6:	46bd      	mov	sp, r7
 80007a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80007ac:	4770      	bx	lr
 80007ae:	bf00      	nop
 80007b0:	40023800 	.word	0x40023800

080007b4 <USART_Init>:
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b08a      	sub	sp, #40	; 0x28
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	6078      	str	r0, [r7, #4]
 80007bc:	6039      	str	r1, [r7, #0]
 80007be:	2300      	movs	r3, #0
 80007c0:	627b      	str	r3, [r7, #36]	; 0x24
 80007c2:	2300      	movs	r3, #0
 80007c4:	623b      	str	r3, [r7, #32]
 80007c6:	2300      	movs	r3, #0
 80007c8:	61fb      	str	r3, [r7, #28]
 80007ca:	2300      	movs	r3, #0
 80007cc:	61bb      	str	r3, [r7, #24]
 80007ce:	687b      	ldr	r3, [r7, #4]
 80007d0:	8a1b      	ldrh	r3, [r3, #16]
 80007d2:	b29b      	uxth	r3, r3
 80007d4:	627b      	str	r3, [r7, #36]	; 0x24
 80007d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007d8:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 80007dc:	627b      	str	r3, [r7, #36]	; 0x24
 80007de:	683b      	ldr	r3, [r7, #0]
 80007e0:	88db      	ldrh	r3, [r3, #6]
 80007e2:	461a      	mov	r2, r3
 80007e4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007e6:	4313      	orrs	r3, r2
 80007e8:	627b      	str	r3, [r7, #36]	; 0x24
 80007ea:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007ec:	b29a      	uxth	r2, r3
 80007ee:	687b      	ldr	r3, [r7, #4]
 80007f0:	821a      	strh	r2, [r3, #16]
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	899b      	ldrh	r3, [r3, #12]
 80007f6:	b29b      	uxth	r3, r3
 80007f8:	627b      	str	r3, [r7, #36]	; 0x24
 80007fa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80007fc:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 8000800:	f023 030c 	bic.w	r3, r3, #12
 8000804:	627b      	str	r3, [r7, #36]	; 0x24
 8000806:	683b      	ldr	r3, [r7, #0]
 8000808:	889a      	ldrh	r2, [r3, #4]
 800080a:	683b      	ldr	r3, [r7, #0]
 800080c:	891b      	ldrh	r3, [r3, #8]
 800080e:	4313      	orrs	r3, r2
 8000810:	b29a      	uxth	r2, r3
 8000812:	683b      	ldr	r3, [r7, #0]
 8000814:	895b      	ldrh	r3, [r3, #10]
 8000816:	4313      	orrs	r3, r2
 8000818:	b29b      	uxth	r3, r3
 800081a:	461a      	mov	r2, r3
 800081c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800081e:	4313      	orrs	r3, r2
 8000820:	627b      	str	r3, [r7, #36]	; 0x24
 8000822:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000824:	b29a      	uxth	r2, r3
 8000826:	687b      	ldr	r3, [r7, #4]
 8000828:	819a      	strh	r2, [r3, #12]
 800082a:	687b      	ldr	r3, [r7, #4]
 800082c:	8a9b      	ldrh	r3, [r3, #20]
 800082e:	b29b      	uxth	r3, r3
 8000830:	627b      	str	r3, [r7, #36]	; 0x24
 8000832:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000834:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8000838:	627b      	str	r3, [r7, #36]	; 0x24
 800083a:	683b      	ldr	r3, [r7, #0]
 800083c:	899b      	ldrh	r3, [r3, #12]
 800083e:	461a      	mov	r2, r3
 8000840:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000842:	4313      	orrs	r3, r2
 8000844:	627b      	str	r3, [r7, #36]	; 0x24
 8000846:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8000848:	b29a      	uxth	r2, r3
 800084a:	687b      	ldr	r3, [r7, #4]
 800084c:	829a      	strh	r2, [r3, #20]
 800084e:	f107 0308 	add.w	r3, r7, #8
 8000852:	4618      	mov	r0, r3
 8000854:	f7ff fec6 	bl	80005e4 <RCC_GetClocksFreq>
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	4a30      	ldr	r2, [pc, #192]	; (800091c <USART_Init+0x168>)
 800085c:	4293      	cmp	r3, r2
 800085e:	d003      	beq.n	8000868 <USART_Init+0xb4>
 8000860:	687b      	ldr	r3, [r7, #4]
 8000862:	4a2f      	ldr	r2, [pc, #188]	; (8000920 <USART_Init+0x16c>)
 8000864:	4293      	cmp	r3, r2
 8000866:	d102      	bne.n	800086e <USART_Init+0xba>
 8000868:	697b      	ldr	r3, [r7, #20]
 800086a:	623b      	str	r3, [r7, #32]
 800086c:	e001      	b.n	8000872 <USART_Init+0xbe>
 800086e:	693b      	ldr	r3, [r7, #16]
 8000870:	623b      	str	r3, [r7, #32]
 8000872:	687b      	ldr	r3, [r7, #4]
 8000874:	899b      	ldrh	r3, [r3, #12]
 8000876:	b29b      	uxth	r3, r3
 8000878:	b21b      	sxth	r3, r3
 800087a:	2b00      	cmp	r3, #0
 800087c:	da0c      	bge.n	8000898 <USART_Init+0xe4>
 800087e:	6a3a      	ldr	r2, [r7, #32]
 8000880:	4613      	mov	r3, r2
 8000882:	009b      	lsls	r3, r3, #2
 8000884:	4413      	add	r3, r2
 8000886:	009a      	lsls	r2, r3, #2
 8000888:	441a      	add	r2, r3
 800088a:	683b      	ldr	r3, [r7, #0]
 800088c:	681b      	ldr	r3, [r3, #0]
 800088e:	005b      	lsls	r3, r3, #1
 8000890:	fbb2 f3f3 	udiv	r3, r2, r3
 8000894:	61fb      	str	r3, [r7, #28]
 8000896:	e00b      	b.n	80008b0 <USART_Init+0xfc>
 8000898:	6a3a      	ldr	r2, [r7, #32]
 800089a:	4613      	mov	r3, r2
 800089c:	009b      	lsls	r3, r3, #2
 800089e:	4413      	add	r3, r2
 80008a0:	009a      	lsls	r2, r3, #2
 80008a2:	441a      	add	r2, r3
 80008a4:	683b      	ldr	r3, [r7, #0]
 80008a6:	681b      	ldr	r3, [r3, #0]
 80008a8:	009b      	lsls	r3, r3, #2
 80008aa:	fbb2 f3f3 	udiv	r3, r2, r3
 80008ae:	61fb      	str	r3, [r7, #28]
 80008b0:	69fb      	ldr	r3, [r7, #28]
 80008b2:	4a1c      	ldr	r2, [pc, #112]	; (8000924 <USART_Init+0x170>)
 80008b4:	fba2 2303 	umull	r2, r3, r2, r3
 80008b8:	095b      	lsrs	r3, r3, #5
 80008ba:	011b      	lsls	r3, r3, #4
 80008bc:	627b      	str	r3, [r7, #36]	; 0x24
 80008be:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80008c0:	091b      	lsrs	r3, r3, #4
 80008c2:	2264      	movs	r2, #100	; 0x64
 80008c4:	fb02 f303 	mul.w	r3, r2, r3
 80008c8:	69fa      	ldr	r2, [r7, #28]
 80008ca:	1ad3      	subs	r3, r2, r3
 80008cc:	61bb      	str	r3, [r7, #24]
 80008ce:	687b      	ldr	r3, [r7, #4]
 80008d0:	899b      	ldrh	r3, [r3, #12]
 80008d2:	b29b      	uxth	r3, r3
 80008d4:	b21b      	sxth	r3, r3
 80008d6:	2b00      	cmp	r3, #0
 80008d8:	da0c      	bge.n	80008f4 <USART_Init+0x140>
 80008da:	69bb      	ldr	r3, [r7, #24]
 80008dc:	00db      	lsls	r3, r3, #3
 80008de:	3332      	adds	r3, #50	; 0x32
 80008e0:	4a10      	ldr	r2, [pc, #64]	; (8000924 <USART_Init+0x170>)
 80008e2:	fba2 2303 	umull	r2, r3, r2, r3
 80008e6:	095b      	lsrs	r3, r3, #5
 80008e8:	f003 0307 	and.w	r3, r3, #7
 80008ec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80008ee:	4313      	orrs	r3, r2
 80008f0:	627b      	str	r3, [r7, #36]	; 0x24
 80008f2:	e00b      	b.n	800090c <USART_Init+0x158>
 80008f4:	69bb      	ldr	r3, [r7, #24]
 80008f6:	011b      	lsls	r3, r3, #4
 80008f8:	3332      	adds	r3, #50	; 0x32
 80008fa:	4a0a      	ldr	r2, [pc, #40]	; (8000924 <USART_Init+0x170>)
 80008fc:	fba2 2303 	umull	r2, r3, r2, r3
 8000900:	095b      	lsrs	r3, r3, #5
 8000902:	f003 030f 	and.w	r3, r3, #15
 8000906:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8000908:	4313      	orrs	r3, r2
 800090a:	627b      	str	r3, [r7, #36]	; 0x24
 800090c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800090e:	b29a      	uxth	r2, r3
 8000910:	687b      	ldr	r3, [r7, #4]
 8000912:	811a      	strh	r2, [r3, #8]
 8000914:	bf00      	nop
 8000916:	3728      	adds	r7, #40	; 0x28
 8000918:	46bd      	mov	sp, r7
 800091a:	bd80      	pop	{r7, pc}
 800091c:	40011000 	.word	0x40011000
 8000920:	40011400 	.word	0x40011400
 8000924:	51eb851f 	.word	0x51eb851f

08000928 <USART_Cmd>:
 8000928:	b480      	push	{r7}
 800092a:	b083      	sub	sp, #12
 800092c:	af00      	add	r7, sp, #0
 800092e:	6078      	str	r0, [r7, #4]
 8000930:	460b      	mov	r3, r1
 8000932:	70fb      	strb	r3, [r7, #3]
 8000934:	78fb      	ldrb	r3, [r7, #3]
 8000936:	2b00      	cmp	r3, #0
 8000938:	d008      	beq.n	800094c <USART_Cmd+0x24>
 800093a:	687b      	ldr	r3, [r7, #4]
 800093c:	899b      	ldrh	r3, [r3, #12]
 800093e:	b29b      	uxth	r3, r3
 8000940:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8000944:	b29a      	uxth	r2, r3
 8000946:	687b      	ldr	r3, [r7, #4]
 8000948:	819a      	strh	r2, [r3, #12]
 800094a:	e007      	b.n	800095c <USART_Cmd+0x34>
 800094c:	687b      	ldr	r3, [r7, #4]
 800094e:	899b      	ldrh	r3, [r3, #12]
 8000950:	b29b      	uxth	r3, r3
 8000952:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8000956:	b29a      	uxth	r2, r3
 8000958:	687b      	ldr	r3, [r7, #4]
 800095a:	819a      	strh	r2, [r3, #12]
 800095c:	bf00      	nop
 800095e:	370c      	adds	r7, #12
 8000960:	46bd      	mov	sp, r7
 8000962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000966:	4770      	bx	lr

08000968 <USART_ITConfig>:
 8000968:	b480      	push	{r7}
 800096a:	b087      	sub	sp, #28
 800096c:	af00      	add	r7, sp, #0
 800096e:	6078      	str	r0, [r7, #4]
 8000970:	460b      	mov	r3, r1
 8000972:	807b      	strh	r3, [r7, #2]
 8000974:	4613      	mov	r3, r2
 8000976:	707b      	strb	r3, [r7, #1]
 8000978:	2300      	movs	r3, #0
 800097a:	613b      	str	r3, [r7, #16]
 800097c:	2300      	movs	r3, #0
 800097e:	60fb      	str	r3, [r7, #12]
 8000980:	2300      	movs	r3, #0
 8000982:	60bb      	str	r3, [r7, #8]
 8000984:	2300      	movs	r3, #0
 8000986:	617b      	str	r3, [r7, #20]
 8000988:	687b      	ldr	r3, [r7, #4]
 800098a:	617b      	str	r3, [r7, #20]
 800098c:	887b      	ldrh	r3, [r7, #2]
 800098e:	b2db      	uxtb	r3, r3
 8000990:	095b      	lsrs	r3, r3, #5
 8000992:	b2db      	uxtb	r3, r3
 8000994:	613b      	str	r3, [r7, #16]
 8000996:	887b      	ldrh	r3, [r7, #2]
 8000998:	f003 031f 	and.w	r3, r3, #31
 800099c:	60fb      	str	r3, [r7, #12]
 800099e:	2201      	movs	r2, #1
 80009a0:	68fb      	ldr	r3, [r7, #12]
 80009a2:	fa02 f303 	lsl.w	r3, r2, r3
 80009a6:	60bb      	str	r3, [r7, #8]
 80009a8:	693b      	ldr	r3, [r7, #16]
 80009aa:	2b01      	cmp	r3, #1
 80009ac:	d103      	bne.n	80009b6 <USART_ITConfig+0x4e>
 80009ae:	697b      	ldr	r3, [r7, #20]
 80009b0:	330c      	adds	r3, #12
 80009b2:	617b      	str	r3, [r7, #20]
 80009b4:	e009      	b.n	80009ca <USART_ITConfig+0x62>
 80009b6:	693b      	ldr	r3, [r7, #16]
 80009b8:	2b02      	cmp	r3, #2
 80009ba:	d103      	bne.n	80009c4 <USART_ITConfig+0x5c>
 80009bc:	697b      	ldr	r3, [r7, #20]
 80009be:	3310      	adds	r3, #16
 80009c0:	617b      	str	r3, [r7, #20]
 80009c2:	e002      	b.n	80009ca <USART_ITConfig+0x62>
 80009c4:	697b      	ldr	r3, [r7, #20]
 80009c6:	3314      	adds	r3, #20
 80009c8:	617b      	str	r3, [r7, #20]
 80009ca:	787b      	ldrb	r3, [r7, #1]
 80009cc:	2b00      	cmp	r3, #0
 80009ce:	d006      	beq.n	80009de <USART_ITConfig+0x76>
 80009d0:	697b      	ldr	r3, [r7, #20]
 80009d2:	6819      	ldr	r1, [r3, #0]
 80009d4:	697b      	ldr	r3, [r7, #20]
 80009d6:	68ba      	ldr	r2, [r7, #8]
 80009d8:	430a      	orrs	r2, r1
 80009da:	601a      	str	r2, [r3, #0]
 80009dc:	e006      	b.n	80009ec <USART_ITConfig+0x84>
 80009de:	697b      	ldr	r3, [r7, #20]
 80009e0:	6819      	ldr	r1, [r3, #0]
 80009e2:	68bb      	ldr	r3, [r7, #8]
 80009e4:	43da      	mvns	r2, r3
 80009e6:	697b      	ldr	r3, [r7, #20]
 80009e8:	400a      	ands	r2, r1
 80009ea:	601a      	str	r2, [r3, #0]
 80009ec:	bf00      	nop
 80009ee:	371c      	adds	r7, #28
 80009f0:	46bd      	mov	sp, r7
 80009f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009f6:	4770      	bx	lr

080009f8 <bufInit>:
 80009f8:	b580      	push	{r7, lr}
 80009fa:	b084      	sub	sp, #16
 80009fc:	af00      	add	r7, sp, #0
 80009fe:	60f8      	str	r0, [r7, #12]
 8000a00:	60b9      	str	r1, [r7, #8]
 8000a02:	4611      	mov	r1, r2
 8000a04:	461a      	mov	r2, r3
 8000a06:	460b      	mov	r3, r1
 8000a08:	71fb      	strb	r3, [r7, #7]
 8000a0a:	4613      	mov	r3, r2
 8000a0c:	80bb      	strh	r3, [r7, #4]
 8000a0e:	68bb      	ldr	r3, [r7, #8]
 8000a10:	88ba      	ldrh	r2, [r7, #4]
 8000a12:	801a      	strh	r2, [r3, #0]
 8000a14:	68bb      	ldr	r3, [r7, #8]
 8000a16:	79fa      	ldrb	r2, [r7, #7]
 8000a18:	711a      	strb	r2, [r3, #4]
 8000a1a:	68bb      	ldr	r3, [r7, #8]
 8000a1c:	68fa      	ldr	r2, [r7, #12]
 8000a1e:	60da      	str	r2, [r3, #12]
 8000a20:	68b8      	ldr	r0, [r7, #8]
 8000a22:	f000 f810 	bl	8000a46 <bufFlush>
 8000a26:	bf00      	nop
 8000a28:	3710      	adds	r7, #16
 8000a2a:	46bd      	mov	sp, r7
 8000a2c:	bd80      	pop	{r7, pc}

08000a2e <bufNumItems>:
 8000a2e:	b480      	push	{r7}
 8000a30:	b083      	sub	sp, #12
 8000a32:	af00      	add	r7, sp, #0
 8000a34:	6078      	str	r0, [r7, #4]
 8000a36:	687b      	ldr	r3, [r7, #4]
 8000a38:	885b      	ldrh	r3, [r3, #2]
 8000a3a:	4618      	mov	r0, r3
 8000a3c:	370c      	adds	r7, #12
 8000a3e:	46bd      	mov	sp, r7
 8000a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a44:	4770      	bx	lr

08000a46 <bufFlush>:
 8000a46:	b580      	push	{r7, lr}
 8000a48:	b082      	sub	sp, #8
 8000a4a:	af00      	add	r7, sp, #0
 8000a4c:	6078      	str	r0, [r7, #4]
 8000a4e:	687b      	ldr	r3, [r7, #4]
 8000a50:	2200      	movs	r2, #0
 8000a52:	80da      	strh	r2, [r3, #6]
 8000a54:	687b      	ldr	r3, [r7, #4]
 8000a56:	2200      	movs	r2, #0
 8000a58:	811a      	strh	r2, [r3, #8]
 8000a5a:	687b      	ldr	r3, [r7, #4]
 8000a5c:	2200      	movs	r2, #0
 8000a5e:	805a      	strh	r2, [r3, #2]
 8000a60:	687b      	ldr	r3, [r7, #4]
 8000a62:	68d8      	ldr	r0, [r3, #12]
 8000a64:	687b      	ldr	r3, [r7, #4]
 8000a66:	881b      	ldrh	r3, [r3, #0]
 8000a68:	461a      	mov	r2, r3
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	f000 f804 	bl	8000a78 <memsetl>
 8000a70:	bf00      	nop
 8000a72:	3708      	adds	r7, #8
 8000a74:	46bd      	mov	sp, r7
 8000a76:	bd80      	pop	{r7, pc}

08000a78 <memsetl>:
 8000a78:	b480      	push	{r7}
 8000a7a:	b083      	sub	sp, #12
 8000a7c:	af00      	add	r7, sp, #0
 8000a7e:	6078      	str	r0, [r7, #4]
 8000a80:	460b      	mov	r3, r1
 8000a82:	70fb      	strb	r3, [r7, #3]
 8000a84:	4613      	mov	r3, r2
 8000a86:	803b      	strh	r3, [r7, #0]
 8000a88:	e004      	b.n	8000a94 <memsetl+0x1c>
 8000a8a:	687b      	ldr	r3, [r7, #4]
 8000a8c:	1c5a      	adds	r2, r3, #1
 8000a8e:	607a      	str	r2, [r7, #4]
 8000a90:	78fa      	ldrb	r2, [r7, #3]
 8000a92:	701a      	strb	r2, [r3, #0]
 8000a94:	883b      	ldrh	r3, [r7, #0]
 8000a96:	1e5a      	subs	r2, r3, #1
 8000a98:	803a      	strh	r2, [r7, #0]
 8000a9a:	2b00      	cmp	r3, #0
 8000a9c:	d1f5      	bne.n	8000a8a <memsetl+0x12>
 8000a9e:	bf00      	nop
 8000aa0:	370c      	adds	r7, #12
 8000aa2:	46bd      	mov	sp, r7
 8000aa4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000aa8:	4770      	bx	lr
	...

08000aac <__libc_init_array>:
 8000aac:	b570      	push	{r4, r5, r6, lr}
 8000aae:	4d0d      	ldr	r5, [pc, #52]	; (8000ae4 <__libc_init_array+0x38>)
 8000ab0:	4c0d      	ldr	r4, [pc, #52]	; (8000ae8 <__libc_init_array+0x3c>)
 8000ab2:	1b64      	subs	r4, r4, r5
 8000ab4:	10a4      	asrs	r4, r4, #2
 8000ab6:	2600      	movs	r6, #0
 8000ab8:	42a6      	cmp	r6, r4
 8000aba:	d109      	bne.n	8000ad0 <__libc_init_array+0x24>
 8000abc:	4d0b      	ldr	r5, [pc, #44]	; (8000aec <__libc_init_array+0x40>)
 8000abe:	4c0c      	ldr	r4, [pc, #48]	; (8000af0 <__libc_init_array+0x44>)
 8000ac0:	f000 f818 	bl	8000af4 <_init>
 8000ac4:	1b64      	subs	r4, r4, r5
 8000ac6:	10a4      	asrs	r4, r4, #2
 8000ac8:	2600      	movs	r6, #0
 8000aca:	42a6      	cmp	r6, r4
 8000acc:	d105      	bne.n	8000ada <__libc_init_array+0x2e>
 8000ace:	bd70      	pop	{r4, r5, r6, pc}
 8000ad0:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ad4:	4798      	blx	r3
 8000ad6:	3601      	adds	r6, #1
 8000ad8:	e7ee      	b.n	8000ab8 <__libc_init_array+0xc>
 8000ada:	f855 3b04 	ldr.w	r3, [r5], #4
 8000ade:	4798      	blx	r3
 8000ae0:	3601      	adds	r6, #1
 8000ae2:	e7f2      	b.n	8000aca <__libc_init_array+0x1e>
 8000ae4:	08000b0c 	.word	0x08000b0c
 8000ae8:	08000b0c 	.word	0x08000b0c
 8000aec:	08000b0c 	.word	0x08000b0c
 8000af0:	08000b10 	.word	0x08000b10

08000af4 <_init>:
 8000af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000af6:	bf00      	nop
 8000af8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000afa:	bc08      	pop	{r3}
 8000afc:	469e      	mov	lr, r3
 8000afe:	4770      	bx	lr

08000b00 <_fini>:
 8000b00:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000b02:	bf00      	nop
 8000b04:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000b06:	bc08      	pop	{r3}
 8000b08:	469e      	mov	lr, r3
 8000b0a:	4770      	bx	lr
